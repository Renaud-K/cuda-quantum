Start testing: Oct 18 01:24 UTC
----------------------------------------------------------
1/1310 Testing: pycudaq-mlir
1/1310 Test: pycudaq-mlir
Command: "/usr/local/cmake-3.28/bin/cmake" "--build" "/workspaces/cuda-quantum/build/Debug" "--target" "check-pycudaq-mlir"
Directory: /workspaces/cuda-quantum/build/Debug
"pycudaq-mlir" start time: Oct 18 01:24 UTC
Output:
----------------------------------------------------------
[1/53] Running utility command for CUDAQuantumPythonModules.sources.CUDAQuantumPythonSources.quake
[2/53] Running utility command for CUDAQuantumPythonModules.sources.CUDAQuantumPythonSources.quake.ops_gen
[3/53] Running utility command for CUDAQuantumPythonModules.sources.CUDAQuantumPythonSources.cc
[4/53] Running utility command for CUDAQuantumPythonModules.sources.CUDAQuantumPythonSources.cc.ops_gen
[5/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.async_dialect.ops_gen
[6/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.bufferization.ops_gen
[7/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.builtin.ops_gen
[8/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.async_dialect
[9/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.bufferization
[10/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.builtin
[11/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.complex
[12/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.complex.ops_gen
[13/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.cf
[14/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.cf.ops_gen
[15/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.func
[16/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.func.ops_gen
[17/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.gpu.ops_gen
[18/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.gpu
[19/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.linalg.ops_gen
[20/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.transform.ops_gen
[21/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.loop_transform
[22/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.loop_transform.ops_gen
[23/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.structured_transform.ops_gen
[24/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.math
[25/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.math.ops_gen
[26/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.transform
[27/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.structured_transform
[28/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.arith
[29/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.arith.ops_gen
[30/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.memref
[31/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.memref.ops_gen
[32/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.ml_program.ops_gen
[33/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.ml_program
[34/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.quant
[35/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.pdl.ops_gen
[36/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.scf.ops_gen
[37/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.shape
[38/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.shape.ops_gen
[39/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.sparse_tensor
[40/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.scf
[41/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.sparse_tensor.ops_gen
[42/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.tensor
[43/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.tensor.ops_gen
[44/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.tosa
[45/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.tosa.ops_gen
[46/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.pdl
[47/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.vector.ops_gen
[48/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.vector
[49/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.ExecutionEngine
[50/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Core
[51/53] Running utility command for CUDAQuantumPythonModules.sources.MLIRPythonSources.Dialects.linalg
[52/53] cd /workspaces/cuda-quantum/build/Debug/python && /usr/local/cmake-3.28/bin/cmake -E copy_directory /workspaces/cuda-quantum/python /workspaces/cuda-quantum/build/Debug/python && /usr/local/cmake-3.28/bin/cmake -DMETADATA_FILE="/workspaces/cuda-quantum/build/Debug/python/cudaq/_metadata.py" -DCUDA_VERSION_MAJOR=12 -P /workspaces/cuda-quantum/python/metadata.cmake
[52/53] Running cudaq python regression tests.
-- Testing: 66 tests, 16 workers --
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.. 

Testing Time: 124.59s

Total Discovered Tests: 66
  Passed           : 65 (98.48%)
  Expectedly Failed:  1 (1.52%)
<end of output>
Test time = 125.09 sec
----------------------------------------------------------
Test Passed.
"pycudaq-mlir" end time: Oct 18 01:26 UTC
"pycudaq-mlir" time elapsed: 00:02:05
----------------------------------------------------------

2/1310 Testing: cudaq-py-parallel-mqpu
2/1310 Test: cudaq-py-parallel-mqpu
Command: "/usr/bin/python3.12" "test_mqpu.py"
Directory: /workspaces/cuda-quantum/python/tests/parallel
"cudaq-py-parallel-mqpu" start time: Oct 18 01:26 UTC
Output:
----------------------------------------------------------
============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.6.0
rootdir: /workspaces/cuda-quantum
configfile: pyproject.toml
plugins: anyio-4.11.0
collected 8 items

test_mqpu.py serial time =  0.013049868997768499
mqpu time =  0.015228071002638899
.[Visit Module]
    @cudaq.kernel(verbose=True)
    def parameterized_kernel(n: int, layers: int, params: list[float], cnot_pairs: list[int]):
        q = cudaq.qvector(n)
        paramCounter = 0
        for i in range(n):
            rx(params[paramCounter], q[i])
            rz(params[paramCounter + 1], q[i])
            paramCounter = paramCounter + 2
        for i in range(0, len(cnot_pairs), 2):
            x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
        for i in range(layers):
            for j in range(n):
                rz(params[paramCounter], q[j])
                rz(params[paramCounter + 1], q[j])
                rz(params[paramCounter + 2], q[j])
                paramCounter = paramCounter + 3
        for i in range(0, len(cnot_pairs), 2):
            x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
    [Generic Visit]
        @cudaq.kernel(verbose=True)
        def parameterized_kernel(n: int, layers: int, params: list[float], cnot_pairs: list[int]):
            q = cudaq.qvector(n)
            paramCounter = 0
            for i in range(n):
                rx(params[paramCounter], q[i])
                rz(params[paramCounter + 1], q[i])
                paramCounter = paramCounter + 2
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
            for i in range(layers):
                for j in range(n):
                    rz(params[paramCounter], q[j])
                    rz(params[paramCounter + 1], q[j])
                    rz(params[paramCounter + 2], q[j])
                    paramCounter = paramCounter + 3
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
    [Visit FunctionDef]
        @cudaq.kernel(verbose=True)
        def parameterized_kernel(n: int, layers: int, params: list[float], cnot_pairs: list[int]):
            q = cudaq.qvector(n)
            paramCounter = 0
            for i in range(n):
                rx(params[paramCounter], q[i])
                rz(params[paramCounter + 1], q[i])
                paramCounter = paramCounter + 2
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
            for i in range(layers):
                for j in range(n):
                    rz(params[paramCounter], q[j])
                    rz(params[paramCounter + 1], q[j])
                    rz(params[paramCounter + 2], q[j])
                    paramCounter = paramCounter + 3
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
        [Visit Assign]
            q = cudaq.qvector(n)
            [(Inline) Visit Name]
                q
            [Visit Call]
                cudaq.qvector(n)
                [(Inline) Visit Attribute]
                    cudaq.qvector
                [(Inline) Visit Attribute]
                    cudaq
                [(Inline) Visit Attribute]
                    cudaq.qvector
                [(Inline) Visit Name]
                    cudaq
                [Generic Visit]
                    cudaq.qvector(n)
                [Visit Name]
                    n
                    push Value(%2 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
                [Visit Attribute]
                    cudaq.qvector
                    [(Inline) Visit Name]
                        cudaq
                pop Value(%2 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
                push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
            [(Inline) Visit Name]
                q
            pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
        [Visit Assign]
            paramCounter = 0
            [(Inline) Visit Name]
                paramCounter
            [Visit Constant]
                0
                push Value(%4 = "arith.constant"() {value = 0 : i64} : () -> i64)
            [(Inline) Visit Name]
                paramCounter
            pop Value(%4 = "arith.constant"() {value = 0 : i64} : () -> i64)
        [Visit For]
            for i in range(n):
                rx(params[paramCounter], q[i])
                rz(params[paramCounter + 1], q[i])
                paramCounter = paramCounter + 2
            [(Inline) Visit Call]
                range(n)
            [Visit Name]
                n
                push Value(%6 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
            pop Value(%6 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
            [Visit Expr]
                rx(params[paramCounter], q[i])
                [Visit Call]
                    rx(params[paramCounter], q[i])
                    [Visit Subscript]
                        params[paramCounter]
                        [Generic Visit]
                            params[paramCounter]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Name]
                            paramCounter
                            push Value(%10 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                        [Visit Name]
                            params
                            push Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                        pop Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                        pop Value(%10 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                        push Value(%13 = "cc.load"(%12) : (!cc.ptr<f64>) -> f64)
                    [Visit Subscript]
                        q[i]
                        [Generic Visit]
                            q[i]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Name]
                            i
                            push Value(<block argument> of type 'i64' at index: 0)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(<block argument> of type 'i64' at index: 0)
                        push Value(%14 = "quake.extract_ref"(%3, %arg4) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [(Inline) Visit Name]
                        rx
                    pop Value(%14 = "quake.extract_ref"(%3, %arg4) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    pop Value(%13 = "cc.load"(%12) : (!cc.ptr<f64>) -> f64)
            [Visit Expr]
                rz(params[paramCounter + 1], q[i])
                [Visit Call]
                    rz(params[paramCounter + 1], q[i])
                    [Visit Subscript]
                        params[paramCounter + 1]
                        [Generic Visit]
                            params[paramCounter + 1]
                        [Visit Load]

                            [Generic Visit]

                        [Visit BinOp]
                            paramCounter + 1
                            [Visit Name]
                                paramCounter
                                push Value(%15 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                            pop Value(%15 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                            [Visit Constant]
                                1
                                push Value(%16 = "arith.constant"() {value = 1 : i64} : () -> i64)
                            pop Value(%16 = "arith.constant"() {value = 1 : i64} : () -> i64)
                            push Value(%17 = "arith.addi"(%15, %16) : (i64, i64) -> i64)
                        [Visit Name]
                            params
                            push Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                        pop Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                        pop Value(%17 = "arith.addi"(%15, %16) : (i64, i64) -> i64)
                        push Value(%20 = "cc.load"(%19) : (!cc.ptr<f64>) -> f64)
                    [Visit Subscript]
                        q[i]
                        [Generic Visit]
                            q[i]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Name]
                            i
                            push Value(<block argument> of type 'i64' at index: 0)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(<block argument> of type 'i64' at index: 0)
                        push Value(%21 = "quake.extract_ref"(%3, %arg4) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [(Inline) Visit Name]
                        rz
                    pop Value(%21 = "quake.extract_ref"(%3, %arg4) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    pop Value(%20 = "cc.load"(%19) : (!cc.ptr<f64>) -> f64)
            [Visit Assign]
                paramCounter = paramCounter + 2
                [(Inline) Visit Name]
                    paramCounter
                [Visit BinOp]
                    paramCounter + 2
                    [Visit Name]
                        paramCounter
                        push Value(%22 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                    pop Value(%22 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                    [Visit Constant]
                        2
                        push Value(%23 = "arith.constant"() {value = 2 : i64} : () -> i64)
                    pop Value(%23 = "arith.constant"() {value = 2 : i64} : () -> i64)
                    push Value(%24 = "arith.addi"(%22, %23) : (i64, i64) -> i64)
                [(Inline) Visit Name]
                    paramCounter
                pop Value(%24 = "arith.addi"(%22, %23) : (i64, i64) -> i64)
        [Visit For]
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
            [(Inline) Visit Call]
                range(0, len(cnot_pairs), 2)
            [Visit Constant]
                0
                push Value(%10 = "arith.constant"() {value = 0 : i64} : () -> i64)
            [Visit Call]
                len(cnot_pairs)
                [Visit Name]
                    cnot_pairs
                    push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                [(Inline) Visit Name]
                    len
                pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                push Value(%11 = "cc.stdvec_size"(%arg3) : (!cc.stdvec<i64>) -> i64)
            [Visit Constant]
                2
                push Value(%12 = "arith.constant"() {value = 2 : i64} : () -> i64)
            pop Value(%12 = "arith.constant"() {value = 2 : i64} : () -> i64)
            pop Value(%11 = "cc.stdvec_size"(%arg3) : (!cc.stdvec<i64>) -> i64)
            pop Value(%10 = "arith.constant"() {value = 0 : i64} : () -> i64)
            [Visit Expr]
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                [Visit Call]
                    x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                    [(Inline) Visit Attribute]
                        x.ctrl
                    [(Inline) Visit Name]
                        x
                    [(Inline) Visit Attribute]
                        x.ctrl
                    [(Inline) Visit Name]
                        x
                    [Generic Visit]
                        x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                    [Visit Subscript]
                        q[cnot_pairs[i]]
                        [Generic Visit]
                            q[cnot_pairs[i]]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Subscript]
                            cnot_pairs[i]
                            [Generic Visit]
                                cnot_pairs[i]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                i
                                push Value(<block argument> of type 'i64' at index: 0)
                            [Visit Name]
                                cnot_pairs
                                push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type 'i64' at index: 0)
                            push Value(%18 = "cc.load"(%17) : (!cc.ptr<i64>) -> i64)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%18 = "cc.load"(%17) : (!cc.ptr<i64>) -> i64)
                        push Value(%19 = "quake.extract_ref"(%3, %18) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [Visit Subscript]
                        q[cnot_pairs[i + 1]]
                        [Generic Visit]
                            q[cnot_pairs[i + 1]]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Subscript]
                            cnot_pairs[i + 1]
                            [Generic Visit]
                                cnot_pairs[i + 1]
                            [Visit Load]

                                [Generic Visit]

                            [Visit BinOp]
                                i + 1
                                [Visit Name]
                                    i
                                    push Value(<block argument> of type 'i64' at index: 0)
                                pop Value(<block argument> of type 'i64' at index: 0)
                                [Visit Constant]
                                    1
                                    push Value(%20 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                pop Value(%20 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                push Value(%21 = "arith.addi"(%arg4, %20) : (i64, i64) -> i64)
                            [Visit Name]
                                cnot_pairs
                                push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(%21 = "arith.addi"(%arg4, %20) : (i64, i64) -> i64)
                            push Value(%24 = "cc.load"(%23) : (!cc.ptr<i64>) -> i64)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%24 = "cc.load"(%23) : (!cc.ptr<i64>) -> i64)
                        push Value(%25 = "quake.extract_ref"(%3, %24) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [Visit Attribute]
                        x.ctrl
                        [(Inline) Visit Name]
                            x
                    pop Value(%25 = "quake.extract_ref"(%3, %24) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    pop Value(%19 = "quake.extract_ref"(%3, %18) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
        [Visit For]
            for i in range(layers):
                for j in range(n):
                    rz(params[paramCounter], q[j])
                    rz(params[paramCounter + 1], q[j])
                    rz(params[paramCounter + 2], q[j])
                    paramCounter = paramCounter + 3
            [(Inline) Visit Call]
                range(layers)
            [Visit Name]
                layers
                push Value(%16 = "cc.load"(%1) : (!cc.ptr<i64>) -> i64)
            pop Value(%16 = "cc.load"(%1) : (!cc.ptr<i64>) -> i64)
            [Visit For]
                for j in range(n):
                    rz(params[paramCounter], q[j])
                    rz(params[paramCounter + 1], q[j])
                    rz(params[paramCounter + 2], q[j])
                    paramCounter = paramCounter + 3
                [(Inline) Visit Call]
                    range(n)
                [Visit Name]
                    n
                    push Value(%20 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
                pop Value(%20 = "cc.load"(%0) : (!cc.ptr<i64>) -> i64)
                [Visit Expr]
                    rz(params[paramCounter], q[j])
                    [Visit Call]
                        rz(params[paramCounter], q[j])
                        [Visit Subscript]
                            params[paramCounter]
                            [Generic Visit]
                                params[paramCounter]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                paramCounter
                                push Value(%24 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                            [Visit Name]
                                params
                                push Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(%24 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                            push Value(%27 = "cc.load"(%26) : (!cc.ptr<f64>) -> f64)
                        [Visit Subscript]
                            q[j]
                            [Generic Visit]
                                q[j]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                j
                                push Value(<block argument> of type 'i64' at index: 0)
                            [Visit Name]
                                q
                                push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(<block argument> of type 'i64' at index: 0)
                            push Value(%28 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        [(Inline) Visit Name]
                            rz
                        pop Value(%28 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        pop Value(%27 = "cc.load"(%26) : (!cc.ptr<f64>) -> f64)
                [Visit Expr]
                    rz(params[paramCounter + 1], q[j])
                    [Visit Call]
                        rz(params[paramCounter + 1], q[j])
                        [Visit Subscript]
                            params[paramCounter + 1]
                            [Generic Visit]
                                params[paramCounter + 1]
                            [Visit Load]

                                [Generic Visit]

                            [Visit BinOp]
                                paramCounter + 1
                                [Visit Name]
                                    paramCounter
                                    push Value(%29 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                                pop Value(%29 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                                [Visit Constant]
                                    1
                                    push Value(%30 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                pop Value(%30 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                push Value(%31 = "arith.addi"(%29, %30) : (i64, i64) -> i64)
                            [Visit Name]
                                params
                                push Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(%31 = "arith.addi"(%29, %30) : (i64, i64) -> i64)
                            push Value(%34 = "cc.load"(%33) : (!cc.ptr<f64>) -> f64)
                        [Visit Subscript]
                            q[j]
                            [Generic Visit]
                                q[j]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                j
                                push Value(<block argument> of type 'i64' at index: 0)
                            [Visit Name]
                                q
                                push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(<block argument> of type 'i64' at index: 0)
                            push Value(%35 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        [(Inline) Visit Name]
                            rz
                        pop Value(%35 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        pop Value(%34 = "cc.load"(%33) : (!cc.ptr<f64>) -> f64)
                [Visit Expr]
                    rz(params[paramCounter + 2], q[j])
                    [Visit Call]
                        rz(params[paramCounter + 2], q[j])
                        [Visit Subscript]
                            params[paramCounter + 2]
                            [Generic Visit]
                                params[paramCounter + 2]
                            [Visit Load]

                                [Generic Visit]

                            [Visit BinOp]
                                paramCounter + 2
                                [Visit Name]
                                    paramCounter
                                    push Value(%36 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                                pop Value(%36 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                                [Visit Constant]
                                    2
                                    push Value(%37 = "arith.constant"() {value = 2 : i64} : () -> i64)
                                pop Value(%37 = "arith.constant"() {value = 2 : i64} : () -> i64)
                                push Value(%38 = "arith.addi"(%36, %37) : (i64, i64) -> i64)
                            [Visit Name]
                                params
                                push Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(<block argument> of type '!cc.stdvec<f64>' at index: 2)
                            pop Value(%38 = "arith.addi"(%36, %37) : (i64, i64) -> i64)
                            push Value(%41 = "cc.load"(%40) : (!cc.ptr<f64>) -> f64)
                        [Visit Subscript]
                            q[j]
                            [Generic Visit]
                                q[j]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                j
                                push Value(<block argument> of type 'i64' at index: 0)
                            [Visit Name]
                                q
                                push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                            pop Value(<block argument> of type 'i64' at index: 0)
                            push Value(%42 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        [(Inline) Visit Name]
                            rz
                        pop Value(%42 = "quake.extract_ref"(%3, %arg5) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                        pop Value(%41 = "cc.load"(%40) : (!cc.ptr<f64>) -> f64)
                [Visit Assign]
                    paramCounter = paramCounter + 3
                    [(Inline) Visit Name]
                        paramCounter
                    [Visit BinOp]
                        paramCounter + 3
                        [Visit Name]
                            paramCounter
                            push Value(%43 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                        pop Value(%43 = "cc.load"(%5) : (!cc.ptr<i64>) -> i64)
                        [Visit Constant]
                            3
                            push Value(%44 = "arith.constant"() {value = 3 : i64} : () -> i64)
                        pop Value(%44 = "arith.constant"() {value = 3 : i64} : () -> i64)
                        push Value(%45 = "arith.addi"(%43, %44) : (i64, i64) -> i64)
                    [(Inline) Visit Name]
                        paramCounter
                    pop Value(%45 = "arith.addi"(%43, %44) : (i64, i64) -> i64)
        [Visit For]
            for i in range(0, len(cnot_pairs), 2):
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
            [(Inline) Visit Call]
                range(0, len(cnot_pairs), 2)
            [Visit Constant]
                0
                push Value(%20 = "arith.constant"() {value = 0 : i64} : () -> i64)
            [Visit Call]
                len(cnot_pairs)
                [Visit Name]
                    cnot_pairs
                    push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                [(Inline) Visit Name]
                    len
                pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                push Value(%21 = "cc.stdvec_size"(%arg3) : (!cc.stdvec<i64>) -> i64)
            [Visit Constant]
                2
                push Value(%22 = "arith.constant"() {value = 2 : i64} : () -> i64)
            pop Value(%22 = "arith.constant"() {value = 2 : i64} : () -> i64)
            pop Value(%21 = "cc.stdvec_size"(%arg3) : (!cc.stdvec<i64>) -> i64)
            pop Value(%20 = "arith.constant"() {value = 0 : i64} : () -> i64)
            [Visit Expr]
                x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                [Visit Call]
                    x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                    [(Inline) Visit Attribute]
                        x.ctrl
                    [(Inline) Visit Name]
                        x
                    [(Inline) Visit Attribute]
                        x.ctrl
                    [(Inline) Visit Name]
                        x
                    [Generic Visit]
                        x.ctrl(q[cnot_pairs[i]], q[cnot_pairs[i + 1]])
                    [Visit Subscript]
                        q[cnot_pairs[i]]
                        [Generic Visit]
                            q[cnot_pairs[i]]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Subscript]
                            cnot_pairs[i]
                            [Generic Visit]
                                cnot_pairs[i]
                            [Visit Load]

                                [Generic Visit]

                            [Visit Name]
                                i
                                push Value(<block argument> of type 'i64' at index: 0)
                            [Visit Name]
                                cnot_pairs
                                push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type 'i64' at index: 0)
                            push Value(%28 = "cc.load"(%27) : (!cc.ptr<i64>) -> i64)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%28 = "cc.load"(%27) : (!cc.ptr<i64>) -> i64)
                        push Value(%29 = "quake.extract_ref"(%3, %28) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [Visit Subscript]
                        q[cnot_pairs[i + 1]]
                        [Generic Visit]
                            q[cnot_pairs[i + 1]]
                        [Visit Load]

                            [Generic Visit]

                        [Visit Subscript]
                            cnot_pairs[i + 1]
                            [Generic Visit]
                                cnot_pairs[i + 1]
                            [Visit Load]

                                [Generic Visit]

                            [Visit BinOp]
                                i + 1
                                [Visit Name]
                                    i
                                    push Value(<block argument> of type 'i64' at index: 0)
                                pop Value(<block argument> of type 'i64' at index: 0)
                                [Visit Constant]
                                    1
                                    push Value(%30 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                pop Value(%30 = "arith.constant"() {value = 1 : i64} : () -> i64)
                                push Value(%31 = "arith.addi"(%arg4, %30) : (i64, i64) -> i64)
                            [Visit Name]
                                cnot_pairs
                                push Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(<block argument> of type '!cc.stdvec<i64>' at index: 3)
                            pop Value(%31 = "arith.addi"(%arg4, %30) : (i64, i64) -> i64)
                            push Value(%34 = "cc.load"(%33) : (!cc.ptr<i64>) -> i64)
                        [Visit Name]
                            q
                            push Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%3 = "quake.alloca"(%2) : (i64) -> !quake.veq<?>)
                        pop Value(%34 = "cc.load"(%33) : (!cc.ptr<i64>) -> i64)
                        push Value(%35 = "quake.extract_ref"(%3, %34) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    [Visit Attribute]
                        x.ctrl
                        [(Inline) Visit Name]
                            x
                    pop Value(%35 = "quake.extract_ref"(%3, %34) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
                    pop Value(%29 = "quake.extract_ref"(%3, %28) {rawIndex = -1 : i64} : (!quake.veq<?>, i64) -> !quake.ref)
module attributes {quake.mangled_name_map = {__nvqpp__mlirgen__parameterized_kernel = "__nvqpp__mlirgen__parameterized_kernel_PyKernelEntryPointRewrite"}} {
  func.func @__nvqpp__mlirgen__parameterized_kernel(%arg0: i64, %arg1: i64, %arg2: !cc.stdvec<f64>, %arg3: !cc.stdvec<i64>) attributes {"cudaq-entrypoint", "cudaq-kernel"} {
    %0 = cc.alloca i64
    cc.store %arg0, %0 : !cc.ptr<i64>
    %1 = cc.alloca i64
    cc.store %arg1, %1 : !cc.ptr<i64>
    %2 = cc.load %0 : !cc.ptr<i64>
    %3 = quake.alloca !quake.veq<?>[%2 : i64]
    %c0_i64 = arith.constant 0 : i64
    %4 = cc.alloca i64
    cc.store %c0_i64, %4 : !cc.ptr<i64>
    %5 = cc.load %0 : !cc.ptr<i64>
    %c0_i64_0 = arith.constant 0 : i64
    %c1_i64 = arith.constant 1 : i64
    %6 = cc.loop while ((%arg4 = %c0_i64_0) -> (i64)) {
      %13 = arith.cmpi slt, %arg4, %5 : i64
      cc.condition %13(%arg4 : i64)
    } do {
    ^bb0(%arg4: i64):
      %13 = cc.load %4 : !cc.ptr<i64>
      %14 = cc.stdvec_data %arg2 : (!cc.stdvec<f64>) -> !cc.ptr<!cc.array<f64 x ?>>
      %15 = cc.compute_ptr %14[%13] : (!cc.ptr<!cc.array<f64 x ?>>, i64) -> !cc.ptr<f64>
      %16 = cc.load %15 : !cc.ptr<f64>
      %17 = quake.extract_ref %3[%arg4] : (!quake.veq<?>, i64) -> !quake.ref
      quake.rx (%16) %17 : (f64, !quake.ref) -> ()
      %18 = cc.load %4 : !cc.ptr<i64>
      %c1_i64_10 = arith.constant 1 : i64
      %19 = arith.addi %18, %c1_i64_10 : i64
      %20 = cc.stdvec_data %arg2 : (!cc.stdvec<f64>) -> !cc.ptr<!cc.array<f64 x ?>>
      %21 = cc.compute_ptr %20[%19] : (!cc.ptr<!cc.array<f64 x ?>>, i64) -> !cc.ptr<f64>
      %22 = cc.load %21 : !cc.ptr<f64>
      %23 = quake.extract_ref %3[%arg4] : (!quake.veq<?>, i64) -> !quake.ref
      quake.rz (%22) %23 : (f64, !quake.ref) -> ()
      %24 = cc.load %4 : !cc.ptr<i64>
      %c2_i64_11 = arith.constant 2 : i64
      %25 = arith.addi %24, %c2_i64_11 : i64
      cc.store %25, %4 : !cc.ptr<i64>
      cc.continue %arg4 : i64
    } step {
    ^bb0(%arg4: i64):
      %13 = arith.addi %arg4, %c1_i64 : i64
      cc.continue %13 : i64
    } {invariant}
    %c0_i64_1 = arith.constant 0 : i64
    %7 = cc.stdvec_size %arg3 : (!cc.stdvec<i64>) -> i64
    %c2_i64 = arith.constant 2 : i64
    %c0_i64_2 = arith.constant 0 : i64
    %c1_i64_3 = arith.constant 1 : i64
    %8 = cc.loop while ((%arg4 = %c0_i64_1) -> (i64)) {
      %13 = arith.cmpi slt, %arg4, %7 : i64
      cc.condition %13(%arg4 : i64)
    } do {
    ^bb0(%arg4: i64):
      %13 = cc.stdvec_data %arg3 : (!cc.stdvec<i64>) -> !cc.ptr<!cc.array<i64 x ?>>
      %14 = cc.compute_ptr %13[%arg4] : (!cc.ptr<!cc.array<i64 x ?>>, i64) -> !cc.ptr<i64>
      %15 = cc.load %14 : !cc.ptr<i64>
      %16 = quake.extract_ref %3[%15] : (!quake.veq<?>, i64) -> !quake.ref
      %c1_i64_10 = arith.constant 1 : i64
      %17 = arith.addi %arg4, %c1_i64_10 : i64
      %18 = cc.stdvec_data %arg3 : (!cc.stdvec<i64>) -> !cc.ptr<!cc.array<i64 x ?>>
      %19 = cc.compute_ptr %18[%17] : (!cc.ptr<!cc.array<i64 x ?>>, i64) -> !cc.ptr<i64>
      %20 = cc.load %19 : !cc.ptr<i64>
      %21 = quake.extract_ref %3[%20] : (!quake.veq<?>, i64) -> !quake.ref
      quake.x [%16] %21 : (!quake.ref, !quake.ref) -> ()
      cc.continue %arg4 : i64
    } step {
    ^bb0(%arg4: i64):
      %13 = arith.addi %arg4, %c2_i64 : i64
      cc.continue %13 : i64
    } {invariant}
    %9 = cc.load %1 : !cc.ptr<i64>
    %c0_i64_4 = arith.constant 0 : i64
    %c1_i64_5 = arith.constant 1 : i64
    %10 = cc.loop while ((%arg4 = %c0_i64_4) -> (i64)) {
      %13 = arith.cmpi slt, %arg4, %9 : i64
      cc.condition %13(%arg4 : i64)
    } do {
    ^bb0(%arg4: i64):
      %13 = cc.load %0 : !cc.ptr<i64>
      %c0_i64_10 = arith.constant 0 : i64
      %c1_i64_11 = arith.constant 1 : i64
      %14 = cc.loop while ((%arg5 = %c0_i64_10) -> (i64)) {
        %15 = arith.cmpi slt, %arg5, %13 : i64
        cc.condition %15(%arg5 : i64)
      } do {
      ^bb0(%arg5: i64):
        %15 = cc.load %4 : !cc.ptr<i64>
        %16 = cc.stdvec_data %arg2 : (!cc.stdvec<f64>) -> !cc.ptr<!cc.array<f64 x ?>>
        %17 = cc.compute_ptr %16[%15] : (!cc.ptr<!cc.array<f64 x ?>>, i64) -> !cc.ptr<f64>
        %18 = cc.load %17 : !cc.ptr<f64>
        %19 = quake.extract_ref %3[%arg5] : (!quake.veq<?>, i64) -> !quake.ref
        quake.rz (%18) %19 : (f64, !quake.ref) -> ()
        %20 = cc.load %4 : !cc.ptr<i64>
        %c1_i64_12 = arith.constant 1 : i64
        %21 = arith.addi %20, %c1_i64_12 : i64
        %22 = cc.stdvec_data %arg2 : (!cc.stdvec<f64>) -> !cc.ptr<!cc.array<f64 x ?>>
        %23 = cc.compute_ptr %22[%21] : (!cc.ptr<!cc.array<f64 x ?>>, i64) -> !cc.ptr<f64>
        %24 = cc.load %23 : !cc.ptr<f64>
        %25 = quake.extract_ref %3[%arg5] : (!quake.veq<?>, i64) -> !quake.ref
        quake.rz (%24) %25 : (f64, !quake.ref) -> ()
        %26 = cc.load %4 : !cc.ptr<i64>
        %c2_i64_13 = arith.constant 2 : i64
        %27 = arith.addi %26, %c2_i64_13 : i64
        %28 = cc.stdvec_data %arg2 : (!cc.stdvec<f64>) -> !cc.ptr<!cc.array<f64 x ?>>
        %29 = cc.compute_ptr %28[%27] : (!cc.ptr<!cc.array<f64 x ?>>, i64) -> !cc.ptr<f64>
        %30 = cc.load %29 : !cc.ptr<f64>
        %31 = quake.extract_ref %3[%arg5] : (!quake.veq<?>, i64) -> !quake.ref
        quake.rz (%30) %31 : (f64, !quake.ref) -> ()
        %32 = cc.load %4 : !cc.ptr<i64>
        %c3_i64 = arith.constant 3 : i64
        %33 = arith.addi %32, %c3_i64 : i64
        cc.store %33, %4 : !cc.ptr<i64>
        cc.continue %arg5 : i64
      } step {
      ^bb0(%arg5: i64):
        %15 = arith.addi %arg5, %c1_i64_11 : i64
        cc.continue %15 : i64
      } {invariant}
      cc.continue %arg4 : i64
    } step {
    ^bb0(%arg4: i64):
      %13 = arith.addi %arg4, %c1_i64_5 : i64
      cc.continue %13 : i64
    } {invariant}
    %c0_i64_6 = arith.constant 0 : i64
    %11 = cc.stdvec_size %arg3 : (!cc.stdvec<i64>) -> i64
    %c2_i64_7 = arith.constant 2 : i64
    %c0_i64_8 = arith.constant 0 : i64
    %c1_i64_9 = arith.constant 1 : i64
    %12 = cc.loop while ((%arg4 = %c0_i64_6) -> (i64)) {
      %13 = arith.cmpi slt, %arg4, %11 : i64
      cc.condition %13(%arg4 : i64)
    } do {
    ^bb0(%arg4: i64):
      %13 = cc.stdvec_data %arg3 : (!cc.stdvec<i64>) -> !cc.ptr<!cc.array<i64 x ?>>
      %14 = cc.compute_ptr %13[%arg4] : (!cc.ptr<!cc.array<i64 x ?>>, i64) -> !cc.ptr<i64>
      %15 = cc.load %14 : !cc.ptr<i64>
      %16 = quake.extract_ref %3[%15] : (!quake.veq<?>, i64) -> !quake.ref
      %c1_i64_10 = arith.constant 1 : i64
      %17 = arith.addi %arg4, %c1_i64_10 : i64
      %18 = cc.stdvec_data %arg3 : (!cc.stdvec<i64>) -> !cc.ptr<!cc.array<i64 x ?>>
      %19 = cc.compute_ptr %18[%17] : (!cc.ptr<!cc.array<i64 x ?>>, i64) -> !cc.ptr<i64>
      %20 = cc.load %19 : !cc.ptr<i64>
      %21 = quake.extract_ref %3[%20] : (!quake.veq<?>, i64) -> !quake.ref
      quake.x [%16] %21 : (!quake.ref, !quake.ref) -> ()
      cc.continue %arg4 : i64
    } step {
    ^bb0(%arg4: i64):
      %13 = arith.addi %arg4, %c2_i64_7 : i64
      cc.continue %13 : i64
    } {invariant}
    return
  }
}

serial time =  0.010092798009281978
mqpu time =  0.01326174799760338
...Number of QPUs: 1
.Number of QPUs: 1
..[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[cudaq::observe warning] distributed observe requested but only 1 QPU available. no speedup expected.
[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[cudaq::observe warning] distributed observe requested but only 1 QPU available. no speedup expected.
[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[cudaq::observe warning] distributed observe requested but only 1 QPU available. no speedup expected.
[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[cudaq::observe warning] distributed observe requested but only 1 QPU available. no speedup expected.
[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Plea.

============================== 8 passed in 0.72s ===============================
se use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m
<end of output>
Test time =   3.99 sec
----------------------------------------------------------
Test Passed.
"cudaq-py-parallel-mqpu" end time: Oct 18 01:26 UTC
"cudaq-py-parallel-mqpu" time elapsed: 00:00:03
----------------------------------------------------------

3/1310 Testing: cudaq-py-parallel-mpi
3/1310 Test: cudaq-py-parallel-mpi
Command: "/usr/local/openmpi/bin/mpiexec" "--allow-run-as-root" "-np" "2" "bash" "run_mpi_py.sh" "/workspaces/cuda-quantum/python/tests/parallel/test_mpi_mqpu.py"
Directory: /workspaces/cuda-quantum/build/Debug/python/tests/parallel
"cudaq-py-parallel-mpi" start time: Oct 18 01:26 UTC
Output:
----------------------------------------------------------
1
1
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.6.0
rootdir: /workspaces/cuda-quantum
configfile: pyproject.toml
plugins: anyio-4.11.0
[1mcollecting ... [0m[1mcollected 2 items                                                              [0m

../../../../../python/tests/parallel/test_mpi_mqpu.py [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.6.0
rootdir: /workspaces/cuda-quantum
configfile: pyproject.toml
plugins: anyio-4.11.0
[1mcollecting ... [0m[1mcollected 2 items                                                              [0m

../../../../../python/tests/parallel/test_mpi_mqpu.py [1760750818.477363] [18ab2d5dbcab:550152:0]     ucp_context.c:1192 UCX  WARN  transports 'rc','gdr_copy' are not available, please use one or more of: cma, cuda, cuda_copy, cuda_ipc, mm, posix, self, shm, sm, sysv, tcp
[1760750818.477352] [18ab2d5dbcab:550151:0]     ucp_context.c:1192 UCX  WARN  transports 'rc','gdr_copy' are not available, please use one or more of: cma, cuda, cuda_copy, cuda_ipc, mm, posix, self, shm, sm, sysv, tcp
[1760750818.517808] [18ab2d5dbcab:550152:0]          parser.c:2033 UCX  WARN  unused environment variables: UCX_INSTALL_PREFIX; UCX_IB_PCI_RELAXED_ORDERING
[1760750818.517808] [18ab2d5dbcab:550152:0]          parser.c:2033 UCX  WARN  (set UCX_WARN_UNUSED_ENV_VARS=n to suppress this warning)
[1760750818.517808] [18ab2d5dbcab:550151:0]          parser.c:2033 UCX  WARN  unused environment variables: UCX_INSTALL_PREFIX; UCX_IB_PCI_RELAXED_ORDERING
[1760750818.517808] [18ab2d5dbcab:550151:0]          parser.c:2033 UCX  WARN  (set UCX_WARN_UNUSED_ENV_VARS=n to suppress this warning)
[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0mTarget: Target nvidia-mqpu
	simulator=custatevec_fp32
	platform=mqpu
	description=The NVIDIA MQPU Target provides a simulated QPU for every available CUDA GPU on the underlying system. Each QPU is simulated via cuStateVec FP32. This target enables asynchronous parallel execution of quantum kernel tasks.
	precision=fp32
, NumQPUs: 1, MPI Ranks: 2
Target: Target nvidia-mqpu
	simulator=custatevec_fp32
	platform=mqpu
	description=The NVIDIA MQPU Target provides a simulated QPU for every available CUDA GPU on the underlying system. Each QPU is simulated via cuStateVec FP32. This target enables asynchronous parallel execution of quantum kernel tasks.
	precision=fp32
, NumQPUs: 1, MPI Ranks: 2
[32m.[0m[32m.[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0m[38;2;255;000;000m[warning] [0m[38;2;000;000;255mTarget nvidia-mqpu: This target is deprecating. Please use the 'nvidia' target with option 'mqpu,fp32' or 'mqpu' (fp32 is the default precision option) by adding the command line option '--target-option mqpu,fp32' or passing it as cudaq.set_target('nvidia', option='mqpu,fp32') in Python. Please refer to CUDA-Q ]8;;https://nvidia.github.io/cuda-quantum/latest/using/backends/platform.html#nvidia-mqpu-platform\documentation]8;;\ for more information.
[0mTarget: Target nvidia-mqpu
	simulator=custatevec_fp32
	platform=mqpu
	description=The NVIDIA MQPU Target provides a simulated QPU for every available CUDA GPU on the underlying system. Each QPU is simulated via cuStateVec FP32. This target enables asynchronous parallel execution of quantum kernel tasks.
	precision=fp32
, NumQPUs: 1, MPI Ranks: 2
Target: Target nvidia-mqpu
	simulator=custatevec_fp32
	platform=mqpu
	description=The NVIDIA MQPU Target provides a simulated QPU for every available CUDA GPU on the underlying system. Each QPU is simulated via cuStateVec FP32. This target enables asynchronous parallel execution of quantum kernel tasks.
	precision=fp32
, NumQPUs: 1, MPI Ranks: 2
[32m.[0m[32m.[0m

[32m============================== [32m[1m2 passed[0m[32m in 0.33s[0m[32m ===============================[0m


[32m============================== [32m[1m2 passed[0m[32m in 0.35s[0m[32m ===============================[0m
<end of output>
Test time =   4.01 sec
----------------------------------------------------------
Test Passed.
"cudaq-py-parallel-mpi" end time: Oct 18 01:26 UTC
"cudaq-py-parallel-mpi" time elapsed: 00:00:04
----------------------------------------------------------

4/1310 Testing: cudaq-py-parallel-dynamics
4/1310 Test: cudaq-py-parallel-dynamics
Command: "/usr/local/openmpi/bin/mpiexec" "--allow-run-as-root" "-np" "2" "/usr/bin/python3.12" "test_mpi_dynamics.py"
Directory: /workspaces/cuda-quantum/python/tests/parallel
"cudaq-py-parallel-dynamics" start time: Oct 18 01:26 UTC
Output:
----------------------------------------------------------
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.6.0
rootdir: /workspaces/cuda-quantum
configfile: pyproject.toml
plugins: anyio-4.11.0
[1mcollecting ... [0m[1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.6.0
rootdir: /workspaces/cuda-quantum
configfile: pyproject.toml
plugins: anyio-4.11.0
[1mcollecting ... [0m[1mcollected 1 item                                                               [0m

test_mpi_dynamics.py [33ms[0m

[32m============================== [33m1 skipped[0m[32m in 0.01s[0m[32m ==============================[0m
[1mcollected 1 item                                                               [0m

test_mpi_dynamics.py [33ms[0m

[32m============================== [33m1 skipped[0m[32m in 0.01s[0m[32m ==============================[0m
<end of output>
Test time =   3.59 sec
----------------------------------------------------------
Test Passed.
"cudaq-py-parallel-dynamics" end time: Oct 18 01:27 UTC
"cudaq-py-parallel-dynamics" time elapsed: 00:00:03
----------------------------------------------------------

5/1310 Testing: ctest-nvqpp
5/1310 Test: ctest-nvqpp
Command: "/usr/local/cmake-3.28/bin/cmake" "--build" "/workspaces/cuda-quantum/build/Debug" "--target" "check-nvqpp"
Directory: /workspaces/cuda-quantum/build/Debug
"ctest-nvqpp" start time: Oct 18 01:27 UTC
Output:
----------------------------------------------------------
[0/1] Running the nvqpp regression tests
-- Testing: 325 tests, 16 workers --
Testing: 
FAIL: CUDAQ :: AST-Quake/call_qpu.cpp (3 of 325)
******************** TEST 'CUDAQ :: AST-Quake/call_qpu.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp | cudaq-opt -memtoreg=quantum=0 -canonicalize | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp
+ cudaq-opt -memtoreg=quantum=0 -canonicalize
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp
call_qpu.cpp:15:10: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
  return mz(qv);
         ^~~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp:18:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_func_achat._Z10func_achatRN5cudaq5qviewILm2EEE(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/call_qpu.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:18     X~~~~~~~~ error: no match found
          2: } 
label:18     ~~
          3:  
label:18     ~
>>>>>>

--

********************
Testing:  0
FAIL: CUDAQ :: AST-Quake/auto_kernel-2.cpp (10 of 325)
******************** TEST 'CUDAQ :: AST-Quake/auto_kernel-2.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp
auto_kernel-2.cpp:16:3: error: kernel result type not supported
  auto operator()() __qpu__ {
  ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-2.cpp

--

********************
Testing:  0
FAIL: CUDAQ :: AST-Quake/auto_kernel-1.cpp (12 of 325)
******************** TEST 'CUDAQ :: AST-Quake/auto_kernel-1.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp
auto_kernel-1.cpp:17:3: error: kernel result type not supported
  auto operator()(int i) __qpu__ {
  ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/auto_kernel-1.cpp

--

********************
Testing:  0
FAIL: CUDAQ :: AST-Quake/bool_literal.cpp (13 of 325)
******************** TEST 'CUDAQ :: AST-Quake/bool_literal.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp
loc("bool_literal.cpp":19:11):error: /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2274: not yet implemented: unknown function, , in cudaq namespace
LLVM ERROR: fatal error, aborting.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp
1.	<eof> parser at end of file
 #0 0x00005e15f8ba6246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005e15f8ba39de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007461f38a6330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007461f38ffb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007461f38a627e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007461f38898ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00005e15f8b102e3 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe92e3)
 #7 0x00005e15f8b104fe (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe94fe)
 #8 0x00005e15f9844ef5 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2d1def5)
 #9 0x00005e15f985c4cb cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2276:3
#10 0x00005e15f97fcb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#11 0x00005e15f97fd022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#12 0x00005e15f979e8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#13 0x00005e15f97709f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#14 0x00005e15f984dfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#15 0x00005e15f973aea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#16 0x00005e15f97a3e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#17 0x00005e15f9770a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#18 0x00005e15f97f86ce clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2845:1
#19 0x00005e15f984f48e cudaq::details::QuakeBridgeVisitor::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:785:40
#20 0x00005e15f97a386f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:783:1
#21 0x00005e15f9770a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#22 0x00005e15f989b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#23 0x00005e15f989b50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#24 0x00005e15f97a291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#25 0x00005e15f9770a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005e15f98422e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#27 0x00005e15f973ad63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#28 0x00005e15f974f085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#29 0x00005e15f96b1c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#30 0x00005e15fa9c6d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#31 0x00005e15f937a689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#32 0x00005e15f92f98be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#33 0x00005e15fa9c3b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#34 0x00005e15fa9bbec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#35 0x00005e15fa9bf6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#36 0x00005e15fa9c30b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#37 0x00005e15fa9c363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#38 0x00005e15f8ad8f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#39 0x00005e15f8acc55c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#40 0x00007461f388b1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#41 0x00007461f388b28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#42 0x00005e15f8aca0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/bool_literal.cpp

--

********************
Testing:  0
FAIL: CUDAQ :: AST-Quake/cast.cpp (14 of 325)
******************** TEST 'CUDAQ :: AST-Quake/cast.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/cast.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/cast.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/cast.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/cast.cpp
cast.cpp:17:12: error: conversion from 'measure_result' to 'double' is ambiguous
    double bit = mz(q0);
           ^     ~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
error: C++ source has errors. nvq++ cannot proceed.
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/cast.cpp

--

********************
Testing:  0
FAIL: CUDAQ :: AST-Quake/const_reference_extension.cpp (18 of 325)
******************** TEST 'CUDAQ :: AST-Quake/const_reference_extension.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp
const_reference_extension.cpp:18:15: error: ambiguous conversion for static_cast from 'const value_type' (aka 'const cudaq::measure_result') to 'std::uint64_t' (aka 'unsigned long')
    result |= static_cast<std::uint64_t>(values[i]) << i;
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp:31:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_qubit_values_to_integer.
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/const_reference_extension.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:31     X~~~~~~~~ error: no match found
          2: } 
label:31     ~~
          3:  
label:31     ~
>>>>>>

--

********************
Testing:  0..
FAIL: CUDAQ :: AST-Quake/cudaq_run.cpp (27 of 325)
******************** TEST 'CUDAQ :: AST-Quake/cudaq_run.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp | cudaq-opt --kernel-execution=generate-run-stack=1 --add-dealloc --expand-measurements --factor-quantum-alloc --expand-control-veqs --cc-loop-unroll --canonicalize --multicontrol-decomposition --lower-to-cfg --cse --decomposition=enable-patterns="CCXToCCZ,CCZToCX" --combine-quantum-alloc --canonicalize --convert-to-qir-api --return-to-output-log --symbol-dce --canonicalize | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp
+ cudaq-opt --kernel-execution=generate-run-stack=1 --add-dealloc --expand-measurements --factor-quantum-alloc --expand-control-veqs --cc-loop-unroll --canonicalize --multicontrol-decomposition --lower-to-cfg --cse --decomposition=enable-patterns=CCXToCCZ,CCZToCX --combine-quantum-alloc --canonicalize --convert-to-qir-api --return-to-output-log --symbol-dce --canonicalize
cudaq_run.cpp:20:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp:67:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__K9.run()
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/cudaq_run.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:67     X~~~~~~~~ error: no match found
          2: } 
label:67     ~~
          3:  
label:67     ~
>>>>>>

--

********************
Testing:  0.. 10.
FAIL: CUDAQ :: AST-Quake/has_conditionals.cpp (55 of 325)
******************** TEST 'CUDAQ :: AST-Quake/has_conditionals.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp | cudaq-opt --quake-add-metadata | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp
+ cudaq-opt --quake-add-metadata
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp
1.	<eof> parser at end of file
 #0 0x000065360c9e4246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000065360c9e19de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000751bf1f7a330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000751bf1fd3b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000751bf1f7a27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000751bf1f5d8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000751bf1f5d81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000751bf1f70517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000065360d58a8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000065360d5794a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000065360d4ee1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000065360d694882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000065360d63ab72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000065360d63b022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000065360d5dc8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000065360d5ae9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000065360d68bfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000065360d578ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000065360d5e1e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000065360d5aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000065360d6d9c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000065360d5e0a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000065360d5aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000065360d6d91db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000065360d6d950c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000065360d5e091b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x000065360d5aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x000065360d6802e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000065360d578d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x000065360d58d085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x000065360d4efc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x000065360e804d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#32 0x000065360d1b8689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#33 0x000065360d1378be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#34 0x000065360e801b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#35 0x000065360e7f9ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#36 0x000065360e7fd6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#37 0x000065360e8010b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#38 0x000065360e80163b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#39 0x000065360c916f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#40 0x000065360c90a55c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#41 0x0000751bf1f5f1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#42 0x0000751bf1f5f28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#43 0x000065360c9080a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp:14:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__kernel
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/has_conditionals.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:14     X~~~~~~~~ error: no match found
          2: } 
label:14     ~~
          3:  
label:14     ~
>>>>>>

--

********************
Testing:  0.. 10.
FAIL: CUDAQ :: AST-Quake/measure_bell.cpp (56 of 325)
******************** TEST 'CUDAQ :: AST-Quake/measure_bell.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp | cudaq-opt --cse | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp
+ cudaq-opt --cse
measure_bell.cpp:26:14: error: use of overloaded operator '==' is ambiguous (with operand types 'bool' and 'value_type' (aka 'cudaq::measure_result'))
      if (r0 == results[1]) {
          ~~ ^  ~~~~~~~~~~
measure_bell.cpp:26:14: note: because of ambiguity in conversion of 'value_type' (aka 'cudaq::measure_result') to 'float'
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
measure_bell.cpp:26:14: note: built-in candidate operator==(int, float)
      if (r0 == results[1]) {
             ^
measure_bell.cpp:26:14: note: built-in candidate operator==(int, double)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, long double)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, __float128)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, int)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, long)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, long long)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, __int128)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, unsigned int)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, unsigned long)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, unsigned long long)
measure_bell.cpp:26:14: note: built-in candidate operator==(int, unsigned __int128)
measure_bell.cpp:93:22: error: use of overloaded operator '==' is ambiguous (with operand types 'value_type' (aka 'cudaq::measure_result') and 'value_type')
      if (results[0] == results[1]) {
          ~~~~~~~~~~ ^  ~~~~~~~~~~
measure_bell.cpp:93:22: note: because of ambiguity in conversion of 'value_type' (aka 'cudaq::measure_result') to 'float'
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
measure_bell.cpp:93:22: note: because of ambiguity in conversion of 'value_type' (aka 'cudaq::measure_result') to 'float'
      if (results[0] == results[1]) {
                     ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
measure_bell.cpp:93:22: note: built-in candidate operator==(float, float)
      if (results[0] == results[1]) {
                     ^
measure_bell.cpp:93:22: note: built-in candidate operator==(float, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(float, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(double, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long double, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__float128, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(int, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(long long, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(__int128, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned int, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned long long, unsigned __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, float)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, long double)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, __float128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, __int128)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, unsigned int)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, unsigned long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, unsigned long long)
measure_bell.cpp:93:22: note: built-in candidate operator==(unsigned __int128, unsigned __int128)
measure_bell.cpp:157:14: error: use of overloaded operator '==' is ambiguous (with operand types 'value_type' (aka 'cudaq::measure_result') and 'value_type')
      if (r0 == r1) {
          ~~ ^  ~~
measure_bell.cpp:157:14: note: because of ambiguity in conversion of 'value_type' (aka 'cudaq::measure_result') to 'float'
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
measure_bell.cpp:157:14: note: because of ambiguity in conversion of 'value_type' (aka 'cudaq::measure_result') to 'float'
      if (r0 == r1) {
             ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:59:3: note: candidate function
  operator int() const { return result; }
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:60:3: note: candidate function
  operator bool() const { return __nvqpp__MeasureResultBoolConversion(result); }
  ^
measure_bell.cpp:157:14: note: built-in candidate operator==(float, float)
      if (r0 == r1) {
             ^
measure_bell.cpp:157:14: note: built-in candidate operator==(float, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(float, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(double, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long double, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__float128, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(int, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(long long, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(__int128, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned int, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned long long, unsigned __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, float)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, long double)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, __float128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, __int128)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, unsigned int)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, unsigned long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, unsigned long long)
measure_bell.cpp:157:14: note: built-in candidate operator==(unsigned __int128, unsigned __int128)
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp:34:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__bell(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/measure_bell.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:34     X~~~~~~~~ error: no match found
          2: } 
label:34     ~~
          3:  
label:34     ~
>>>>>>

--

********************
Testing:  0.. 10.
FAIL: CUDAQ :: AST-Quake/if.cpp (57 of 325)
******************** TEST 'CUDAQ :: AST-Quake/if.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 10: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/if.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/if.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/if.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/if.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/if.cpp
1.	<eof> parser at end of file
 #0 0x0000562dd5f7c246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000562dd5f799de SignalHandler(int) Signals.cpp:0:0
 #2 0x000075e627570330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000075e6275c9b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000075e62757027e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000075e6275538ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000075e62755381b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000075e627566517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000562dd6b228fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000562dd6b114a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000562dd6a861fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000562dd6c2c882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000562dd6bd2b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000562dd6bd3022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000562dd6b748a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000562dd6b469f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000562dd6c23fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000562dd6b10ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000562dd6b79e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000562dd6b46a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000562dd6c25276 cudaq::details::QuakeBridgeVisitor::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:727:9
#21 0x0000562dd6b7986f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:783:1
#22 0x0000562dd6b46a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000562dd6c71c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#24 0x0000562dd6b78a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#25 0x0000562dd6b46a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x0000562dd6c711db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x0000562dd6c7150c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x0000562dd6b7891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x0000562dd6b46a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x0000562dd6c182e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x0000562dd6b10d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x0000562dd6b25085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x0000562dd6a87c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x0000562dd7d9cd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#35 0x0000562dd6750689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#36 0x0000562dd66cf8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#37 0x0000562dd7d99b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#38 0x0000562dd7d91ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#39 0x0000562dd7d956a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#40 0x0000562dd7d990b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#41 0x0000562dd7d9963b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#42 0x0000562dd5eaef71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#43 0x0000562dd5ea255c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#44 0x000075e6275551ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#45 0x000075e62755528b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#46 0x0000562dd5ea00a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/if.cpp

--

********************
Testing:  0.. 10..
FAIL: CUDAQ :: AST-Quake/mz.cpp (61 of 325)
******************** TEST 'CUDAQ :: AST-Quake/mz.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/mz.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/mz.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/mz.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/mz.cpp
mz.cpp:34:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q1, reg1, reg2, q2);
           ^~~~~~~~~~~~~~~~~~~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
mz.cpp:59:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q1, reg1, reg2, q2);
           ^~~~~~~~~~~~~~~~~~~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/mz.cpp

--

********************
Testing:  0.. 10.. 
FAIL: CUDAQ :: AST-Quake/qalloc_initialization.cpp (68 of 325)
******************** TEST 'CUDAQ :: AST-Quake/qalloc_initialization.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64  /workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp
+ cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 /workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp
qalloc_initialization.cpp:22:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_initialization.cpp:40:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_initialization.cpp:73:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_initialization.cpp:105:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_initialization.cpp:191:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_initialization.cpp:210:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp:27:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__Vanilla() -> !cc.stdvec<i1> attributes {"cudaq-entrypoint", "cudaq-kernel"} {
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/qalloc_initialization.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:27     X~~~~~~~~ error: no match found
          2: } 
label:27     ~~
          3:  
label:27     ~
>>>>>>

--

********************
Testing:  0.. 10.. 
FAIL: CUDAQ :: AST-Quake/qalloc_state.cpp (69 of 325)
******************** TEST 'CUDAQ :: AST-Quake/qalloc_state.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp
qalloc_state.cpp:17:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_state.cpp:31:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_state.cpp:45:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
qalloc_state.cpp:59:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(v);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp:21:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__Eins(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/qalloc_state.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:21     X~~~~~~~~ error: no match found
          2: } 
label:21     ~~
          3:  
label:21     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ :: AST-Quake/separate_compilation.cpp (74 of 325)
******************** TEST 'CUDAQ :: AST-Quake/separate_compilation.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp
separate_compilation.cpp:13:1: error: kernel argument type not supported
__qpu__ uint64_t otherKernel(std::vector<cudaq::measure_result> &x);
^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:25:17: note: expanded from macro '__qpu__'
#define __qpu__ __attribute__((annotate("quantum")))
                ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp
/workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp:21:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_test_entry_point.
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/separate_compilation.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:21     X~~~~~~~~ error: no match found
          2: } 
label:21     ~~
          3:  
label:21     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ :: AST-Quake/ranged_for_qreg.cpp (83 of 325)
******************** TEST 'CUDAQ :: AST-Quake/ranged_for_qreg.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp
+ cudaq-opt
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp
1.	<eof> parser at end of file
 #0 0x00005d88ffeee246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005d88ffeeb9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007f097ae51330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007f097aeaab2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007f097ae5127e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007f097ae348ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007f097ae3481b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007f097ae47517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005d8900a948fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005d8900a834a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005d89009f81fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005d8900b9e882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005d8900b44b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005d8900b45022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005d8900ae68a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005d8900ab89f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005d8900b95fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005d8900a82ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005d8900aebe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005d8900ab8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005d8900b8b5bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005d8900a971b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005d8900b2f613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005d8900be03b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005d8900aea9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005d8900ab8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005d8900be31db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005d8900be33d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#28 0x00005d8900be59e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#29 0x00005d89008756a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#30 0x00005d890081229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#31 0x00005d8900be4abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#32 0x00005d8900be354d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#33 0x00005d8900aea91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#34 0x00005d8900ab8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#35 0x00005d8900be19b3 cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:257:11
#36 0x00005d8900be5779 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#37 0x00005d8901957815 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#38 0x00005d89019505c1 cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Optimizer/Builder/Factory.cpp:223:63
#39 0x00005d8901954b2d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005d8900874715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005d890080f719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#42 0x00005d890195459c cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, llvm::SmallVector<mlir::Type, 6u>&, llvm::SmallVector<mlir::Value, 6u>&, bool, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&), cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&), cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(mlir::Location, llvm::SmallVector<mlir::Type, 6u>&, llvm::SmallVector<mlir::Value, 6u>&, bool&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#43 0x00005d8901950990 cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>) /workspaces/cuda-quantum/lib/Optimizer/Builder/Factory.cpp:209:41
#44 0x00005d8900be2027 cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:262:38
#45 0x00005d8900aea8af clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:55:1
#46 0x00005d8900ab8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#47 0x00005d8900be31db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#48 0x00005d8900be350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#49 0x00005d8900aea91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#50 0x00005d8900ab8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#51 0x00005d8900b8a2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#52 0x00005d8900a9701f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#53 0x00005d89009f9c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005d8901d0ed79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#55 0x00005d89006c2689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#56 0x00005d89006418be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#57 0x00005d8901d0bb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#58 0x00005d8901d03ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#59 0x00005d8901d076a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#60 0x00005d8901d0b0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#61 0x00005d8901d0b63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#62 0x00005d88ffe20f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#63 0x00005d88ffe1455c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#64 0x00007f097ae361ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#65 0x00007f097ae3628b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#66 0x00005d88ffe120a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp:21:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_range_qubit
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/ranged_for_qreg.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:21     X~~~~~~~~ error: no match found
          2: } 
label:21     ~~
          3:  
label:21     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ :: AST-Quake/single_qubit_ctor.cpp (85 of 325)
******************** TEST 'CUDAQ :: AST-Quake/single_qubit_ctor.cpp' FAILED ********************
Exit Code: 2

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp
1.	<eof> parser at end of file
 #0 0x00005b709a24e246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005b709a24b9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007c57cbb47330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007c57cbba0b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007c57cbb4727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007c57cbb2a8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007c57cbb2a81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007c57cbb3d517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005b709adf48fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005b709ade34a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005b709ad581fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005b709aefe882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005b709aea4b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005b709aea5022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005b709ae468a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005b709ae189f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005b709aef5fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005b709ade2ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005b709ae4be0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005b709ae18a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005b709af431db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#21 0x00005b709af4350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#22 0x00005b709ae4a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#23 0x00005b709ae18a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#24 0x00005b709aeea2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#25 0x00005b709ade2d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#26 0x00005b709adf7085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#27 0x00005b709ad59c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#28 0x00005b709c06ed79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#29 0x00005b709aa22689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#30 0x00005b709a9a18be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#31 0x00005b709c06bb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#32 0x00005b709c063ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#33 0x00005b709c0676a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#34 0x00005b709c06b0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#35 0x00005b709c06b63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#36 0x00005b709a180f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#37 0x00005b709a17455c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#38 0x00007c57cbb2c1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#39 0x00007c57cbb2c28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#40 0x00005b709a1720a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
FileCheck error: '<stdin>' is empty.
FileCheck command line:  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/single_qubit_ctor.cpp

--

********************
Testing:  0.. 10.. 20.
FAIL: CUDAQ :: AST-Quake/slice.cpp (87 of 325)
******************** TEST 'CUDAQ :: AST-Quake/slice.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/slice.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/slice.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/slice.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/slice.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/slice.cpp
1.	<eof> parser at end of file
 #0 0x0000589156019246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005891560169de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007eca6fe52330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007eca6feabb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007eca6fe5227e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007eca6fe358ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007eca6fe3581b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007eca6fe48517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000589156bbf8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000589156bae4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000589156b231fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000589156cc9882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000589156c6fb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000589156c70022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000589156c118a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000589156be39f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000589156cc0fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000589156badea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000589156c16e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000589156be3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000589156d0e1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#21 0x0000589156d0e50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#22 0x0000589156c1591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#23 0x0000589156be3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#24 0x0000589156cb52e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#25 0x0000589156bc201f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#26 0x0000589156b24c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#27 0x0000589157e39d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#28 0x00005891567ed689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#29 0x000058915676c8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#30 0x0000589157e36b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#31 0x0000589157e2eec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#32 0x0000589157e326a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#33 0x0000589157e360b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#34 0x0000589157e3663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#35 0x0000589155f4bf71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#36 0x0000589155f3f55c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#37 0x00007eca6fe371ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#38 0x00007eca6fe3728b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#39 0x0000589155f3d0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/test/AST-Quake/slice.cpp:23:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__SliceTest
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/slice.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:23     X~~~~~~~~ error: no match found
          2: } 
label:23     ~~
          3:  
label:23     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20.
FAIL: CUDAQ :: AST-Quake/ternary.cpp (88 of 325)
******************** TEST 'CUDAQ :: AST-Quake/ternary.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp
loc("ternary.cpp":22:13):error: /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2274: not yet implemented: unknown function, , in cudaq namespace
LLVM ERROR: fatal error, aborting.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp
1.	<eof> parser at end of file
 #0 0x0000599596bae246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000599596bab9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007420ad00b330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007420ad064b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007420ad00b27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007420acfee8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000599596b182e3 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe92e3)
 #7 0x0000599596b184fe (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe94fe)
 #8 0x000059959784cef5 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2d1def5)
 #9 0x00005995978644cb cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2276:3
#10 0x0000599597804b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#11 0x0000599597805022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#12 0x00005995977a68a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#13 0x00005995977789f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#14 0x0000599597855fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#15 0x0000599597742ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#16 0x00005995977abe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#17 0x0000599597778a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#18 0x0000599597858a4e cudaq::details::QuakeBridgeVisitor::TraverseConditionalOperator(clang::ConditionalOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:965:7
#19 0x00005995977ab74f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:731:1
#20 0x0000599597778a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#21 0x00005995978a1738 cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const::'lambda'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:227:13
#22 0x00005995978a5990 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const::'lambda'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#23 0x00005995975356a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#24 0x00005995974d229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#25 0x00005995978a48e7 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const::'lambda'(mlir::OpBuilder&, mlir::Location)&>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const::'lambda'(mlir::OpBuilder&, mlir::Location)&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#26 0x00005995978a1895 cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:234:5
#27 0x00005995978a56f2 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#28 0x0000599598617815 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#29 0x00005995986105c1 cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Optimizer/Builder/Factory.cpp:223:63
#30 0x0000599598614b2d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#31 0x0000599597534715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#32 0x00005995974cf719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#33 0x000059959861459c cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, llvm::SmallVector<mlir::Type, 6u>&, llvm::SmallVector<mlir::Value, 6u>&, bool, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&), cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&), cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(mlir::Location, llvm::SmallVector<mlir::Type, 6u>&, llvm::SmallVector<mlir::Value, 6u>&, bool&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&, cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#34 0x0000599598610990 cudaq::opt::factory::createInvariantLoop(mlir::OpBuilder&, mlir::Location, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&, mlir::Block&)>) /workspaces/cuda-quantum/lib/Optimizer/Builder/Factory.cpp:209:41
#35 0x00005995978a1dba cudaq::details::QuakeBridgeVisitor::TraverseCXXForRangeStmt(clang::CXXForRangeStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:239:40
#36 0x00005995977aa8af clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:55:1
#37 0x0000599597778a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#38 0x00005995978a31db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#39 0x00005995978a350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#40 0x00005995977aa91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#41 0x0000599597778a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#42 0x000059959784a2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#43 0x000059959775701f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#44 0x00005995976b9c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#45 0x00005995989ced79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#46 0x0000599597382689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#47 0x00005995973018be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#48 0x00005995989cbb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#49 0x00005995989c3ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#50 0x00005995989c76a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#51 0x00005995989cb0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#52 0x00005995989cb63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#53 0x0000599596ae0f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#54 0x0000599596ad455c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#55 0x00007420acff01ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#56 0x00007420acff028b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#57 0x0000599596ad20a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/test/AST-Quake/ternary.cpp:38:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_test_kernel._Z11test_kerneli(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/ternary.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:38     X~~~~~~~~ error: no match found
          2: } 
label:38     ~~
          3:  
label:38     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20.
FAIL: CUDAQ :: AST-Quake/vector_bool.cpp (92 of 325)
******************** TEST 'CUDAQ :: AST-Quake/vector_bool.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp
+ cudaq-opt
vector_bool.cpp:41:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
vector_bool.cpp:62:23: error: no viable conversion from 'vector<measure_result>' to 'vector<bool>'
    std::vector<bool> vec = mz(q);
                      ^     ~~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
/workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp:24:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__t1(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/vector_bool.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:24     X~~~~~~~~ error: no match found
          2: } 
label:24     ~~
          3:  
label:24     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20.. 
FAIL: CUDAQ :: AST-Quake/unwind_return.cpp (100 of 325)
******************** TEST 'CUDAQ :: AST-Quake/unwind_return.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: cudaq-quake  /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp | cudaq-opt | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp
+ cudaq-opt
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp
1.	<eof> parser at end of file
 #0 0x00006197b5613246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006197b56109de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079953a509330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079953a562b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079953a50927e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079953a4ec8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079953a4ec81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079953a4ff517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00006197b61b98fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00006197b61a84a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006197b611d1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00006197b62c3882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006197b6269b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006197b626a022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006197b620b8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006197b61dd9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00006197b62bafad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00006197b61a7ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00006197b6210e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00006197b61dda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00006197b6308c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00006197b620fa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00006197b61dda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00006197b63081db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00006197b630850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00006197b620f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00006197b61dda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00006197b62af2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00006197b61bc01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#29 0x00006197b611ec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#30 0x00006197b7433d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#31 0x00006197b5de7689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#32 0x00006197b5d668be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#33 0x00006197b7430b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#34 0x00006197b7428ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#35 0x00006197b742c6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#36 0x00006197b74300b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#37 0x00006197b743063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#38 0x00006197b5545f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#39 0x00006197b553955c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#40 0x000079953a4ee1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#41 0x000079953a4ee28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#42 0x00006197b55370a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp:42:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: func.func @__nvqpp__mlirgen__function_test_kernel._Z11test_kerneli(
                ^
<stdin>:1:1: note: scanning from here
module {
^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/unwind_return.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
label:42     X~~~~~~~~ error: no match found
          2: } 
label:42     ~~
          3:  
label:42     ~
>>>>>>

--

********************
Testing:  0.. 10.. 20.. 
FAIL: CUDAQ :: AST-Quake/to_qir.cpp (101 of 325)
******************** TEST 'CUDAQ :: AST-Quake/to_qir.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp | cudaq-opt --lower-to-cfg | cudaq-translate --convert-to=qir | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp
+ /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp
+ cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp
+ cudaq-opt --lower-to-cfg
+ cudaq-translate --convert-to=qir
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp
1.	<eof> parser at end of file
 #0 0x000062950b9ad246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000062950b9aa9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000073d2d84eb330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000073d2d8544b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000073d2d84eb27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000073d2d84ce8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000073d2d84ce81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000073d2d84e1517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000062950c5538fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000062950c5424a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000062950c4b71fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000062950c65d882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000062950c603b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000062950c604022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000062950c5a58a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000062950c5779f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000062950c654fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000062950c541ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000062950c5aae0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000062950c577a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000062950c6a2c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000062950c5a9a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000062950c577a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000062950c6a21db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000062950c6a250c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000062950c5a991b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x000062950c577a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x000062950c6492e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000062950c541d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x000062950c556085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x000062950c4b8c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x000062950d7cdd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#32 0x000062950c181689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#33 0x000062950c1008be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#34 0x000062950d7cab84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#35 0x000062950d7c2ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#36 0x000062950d7c66a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#37 0x000062950d7ca0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#38 0x000062950d7ca63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#39 0x000062950b8dff71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#40 0x000062950b8d355c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#41 0x000073d2d84d01ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#42 0x000073d2d84d028b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#43 0x000062950b8d10a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
LLVM ERROR: Loading a dialect (func) while in a multi-threaded execution context (maybe the PassManager): this can indicate a missing `dependentDialects` in a pass for example.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-opt --lower-to-cfg
 #0 0x0000577d302fbed6 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x21eeed6)
 #1 0x0000577d302f966e SignalHandler(int) Signals.cpp:0:0
 #2 0x0000715f1a1b4330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000715f1a20db2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000715f1a1b427e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000715f1a1978ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000577d30258053 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x214b053)
 #7 0x0000577d2f2de552 mlir::MLIRContext::getOrLoadDialect(llvm::StringRef, mlir::TypeID, llvm::function_ref<std::unique_ptr<mlir::Dialect, std::default_delete<mlir::Dialect>> ()>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x11d1552)
 #8 0x0000577d2f049e94 mlir::func::FuncDialect* mlir::MLIRContext::getOrLoadDialect<mlir::func::FuncDialect>() /usr/local/llvm/include/mlir/IR/MLIRContext.h:99:3
 #9 0x0000577d2f046e24 void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)::operator()(mlir::MLIRContext*) const /usr/local/llvm/include/mlir/IR/DialectRegistry.h:120:51
#10 0x0000577d2f04c5e8 mlir::func::FuncDialect* std::__invoke_impl<mlir::func::FuncDialect*, void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)&, mlir::MLIRContext*>(std::__invoke_other, void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)&, mlir::MLIRContext*&&) /usr/include/c++/11/bits/invoke.h:61:70
#11 0x0000577d2f04bb7d std::enable_if<is_invocable_r_v<mlir::Dialect*, void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)&, mlir::MLIRContext*>, mlir::Dialect*>::type std::__invoke_r<mlir::Dialect*, void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)&, mlir::MLIRContext*>(void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)&, mlir::MLIRContext*&&) /usr/include/c++/11/bits/invoke.h:117:5
#12 0x0000577d2f04af76 std::_Function_handler<mlir::Dialect* (mlir::MLIRContext*), void mlir::DialectRegistry::insert<mlir::func::FuncDialect>()::'lambda'(mlir::MLIRContext*)>::_M_invoke(std::_Any_data const&, mlir::MLIRContext*&&) /usr/include/c++/11/bits/std_function.h:292:7
#13 0x0000577d2f2bf919 mlir::Dialect* llvm::function_ref<mlir::Dialect* (mlir::MLIRContext*)>::callback_fn<std::function<mlir::Dialect* (mlir::MLIRContext*)> const>(long, mlir::MLIRContext*) Dialect.cpp:0:0
#14 0x0000577d301a02da (anonymous namespace)::OperationParser::parseCustomOperationName() Parser.cpp:0:0
#15 0x0000577d301a9374 (anonymous namespace)::OperationParser::parseOperation() Parser.cpp:0:0
#16 0x0000577d301ab366 mlir::parseAsmSourceFile(llvm::SourceMgr const&, mlir::Block*, mlir::ParserConfig const&, mlir::AsmParserState*, mlir::AsmParserCodeCompleteContext*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x209e366)
#17 0x0000577d30167ff7 mlir::parseSourceString(llvm::StringRef, mlir::Block*, mlir::ParserConfig const&, mlir::LocationAttr*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x205aff7)
#18 0x0000577d2ff1a693 cudaq::IRBuilder::loadIntrinsic(mlir::ModuleOp, llvm::StringRef) /workspaces/cuda-quantum/lib/Optimizer/Builder/Intrinsics.cpp:702:27
#19 0x0000577d2ff1a5ef cudaq::IRBuilder::loadIntrinsic(mlir::ModuleOp, llvm::StringRef) /workspaces/cuda-quantum/lib/Optimizer/Builder/Intrinsics.cpp:698:15
#20 0x0000577d2fa20986 (anonymous namespace)::ConvertToCFGPrep::runOnOperation() /workspaces/cuda-quantum/lib/Optimizer/Transforms/LowerToCFG.cpp:324:15
#21 0x0000577d2fe779e1 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x1d6a9e1)
#22 0x0000577d2fe780b9 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x1d6b0b9)
#23 0x0000577d2fe78d19 mlir::PassManager::run(mlir::Operation*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x1d6bd19)
#24 0x0000577d2f20e5fb performActions(llvm::raw_ostream&, bool, bool, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, llvm::function_ref<mlir::LogicalResult (mlir::PassManager&)>, bool, bool) (.constprop.0) MlirOptMain.cpp:0:0
#25 0x0000577d2f20ec0f processBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, bool, bool, bool, bool, bool, bool, llvm::function_ref<mlir::LogicalResult (mlir::PassManager&)>, mlir::DialectRegistry&, llvm::ThreadPool*) MlirOptMain.cpp:0:0
#26 0x0000577d2f20eeab mlir::LogicalResult llvm::function_ref<mlir::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<mlir::LogicalResult (mlir::PassManager&)>, mlir::DialectRegistry&, bool, bool, bool, bool, bool, bool, bool)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0
#27 0x0000577d3021200e mlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<mlir::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x210500e)
#28 0x0000577d2f20d170 mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::PassPipelineCLParser const&, mlir::DialectRegistry&, bool, bool, bool, bool, bool, bool, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x1100170)
#29 0x0000577d2f20f30d mlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0x110230d)
#30 0x0000577d2f0202bd main /workspaces/cuda-quantum/tools/cudaq-opt/cudaq-opt.cpp:81:32
#31 0x0000715f1a1991ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#32 0x0000715f1a19928b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#33 0x0000577d2f01ff55 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-opt+0xf12f55)
/workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp:36:17: error: CHECK-LABEL: expected string not found in input
// CHECK-LABEL: define void @__nvqpp__mlirgen__kernel()
                ^
<stdin>:1:1: note: scanning from here
; ModuleID = 'LLVMDialectModule'
^
<stdin>:2:5: note: possible intended match here
source_filename = "LLVMDialectModule"
    ^

Input file: <stdin>
Check file: /workspaces/cuda-quantum/test/AST-Quake/to_qir.cpp

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            1: ; ModuleID = 'LLVMDialectModule' 
label:36'0     X~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ error: no match found
            2: source_filename = "LLVMDialectModule" 
label:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
label:36'1         ?                                  possible intended match
            3: target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128" 
label:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            4: target triple = "x86_64-unknown-linux-gnu" 
label:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            5:  
label:36'0     ~
            6: !llvm.module.flags = !{!0} 
label:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
            7:  
label:36'0     ~
            .
            .
            .
>>>>>>

--

********************
Testing:  0.. 10.. 20.. 30.
FAIL: CUDAQ :: AST-error/cudaq_run.cpp (121 of 325)
******************** TEST 'CUDAQ :: AST-error/cudaq_run.cpp' FAILED ********************
Exit Code: 134

Command Output (stderr):
--
RUN: at line 9: cudaq-quake -verify /workspaces/cuda-quantum/test/AST-error/cudaq_run.cpp
+ cudaq-quake -verify /workspaces/cuda-quantum/test/AST-error/cudaq_run.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: cudaq-quake -verify /workspaces/cuda-quantum/test/AST-error/cudaq_run.cpp
1.	<eof> parser at end of file
 #0 0x000055e4f86e6246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000055e4f86e39de SignalHandler(int) Signals.cpp:0:0
 #2 0x000071e9863e6330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000071e98643fb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000071e9863e627e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000071e9863c98ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000071e9863c981b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000071e9863dc517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000055e4f928c8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000055e4f927b4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000055e4f91f01fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000055e4f9396882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000055e4f933cb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000055e4f933d022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000055e4f92de8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000055e4f92b09f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000055e4f938dfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000055e4f927aea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000055e4f92e3e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000055e4f92b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000055e4f93835bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x000055e4f928f1b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x000055e4f9327613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x000055e4f93d83b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x000055e4f92e29ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x000055e4f92b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x000055e4f93db1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x000055e4f93db3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#28 0x000055e4f93dd9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#29 0x000055e4f906d6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#30 0x000055e4f900a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#31 0x000055e4f93dcabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#32 0x000055e4f93db54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#33 0x000055e4f92e291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#34 0x000055e4f92b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#35 0x000055e4f93dc13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#36 0x000055e4f93ddb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#37 0x000055e4f906c715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#38 0x000055e4f9007719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#39 0x000055e4f9007879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#40 0x000055e4f93dd211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#41 0x000055e4f93dc3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#42 0x000055e4f93ddc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#43 0x000055e4f906d6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#44 0x000055e4f900a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#45 0x000055e4f93dd387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#46 0x000055e4f93dc642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#47 0x000055e4f92e29f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#48 0x000055e4f92b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x000055e4f93db1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#50 0x000055e4f93db50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#51 0x000055e4f92e291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#52 0x000055e4f92b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#53 0x000055e4f93822e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#54 0x000055e4f928f01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#55 0x000055e4f91f1c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#56 0x000055e4fa506d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000055e4f8eba689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000055e4f8e398be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000055e4fa503b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000055e4fa4fbec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000055e4fa4ff6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000055e4fa5030b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000055e4fa50363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000055e4f8618f71 bool runTool<cudaq::ASTBridgeAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000055e4f860c55c main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:447:33
#66 0x000071e9863cb1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000071e9863cb28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000055e4f860a0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/test/AST-error/Output/cudaq_run.cpp.script: line 1: 552103 Aborted                 (core dumped) cudaq-quake -verify /workspaces/cuda-quantum/test/AST-error/cudaq_run.cpp

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.
FAIL: CUDAQ :: NVQPP/qir_gen.cpp (319 of 325)
******************** TEST 'CUDAQ :: NVQPP/qir_gen.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  --emit-qir /workspaces/cuda-quantum/test/NVQPP/qir_gen.cpp && cat qir_gen.qir.ll |  /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/test/NVQPP/qir_gen.cpp && rm qir_gen.qir.ll
+ nvq++ --emit-qir /workspaces/cuda-quantum/test/NVQPP/qir_gen.cpp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/test/NVQPP/qir_gen.cpp -o qir_gen.qke
1.	<eof> parser at end of file
 #0 0x0000608752589246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006087525869de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000744823c54330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000744823cadb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000744823c5427e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000744823c378ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000744823c3781b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000744823c4a517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000060875312f8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000060875311e4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006087530931fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000608753239882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006087531dfb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006087531e0022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006087531818a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006087531539f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000608753230fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000060875311dea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000608753186e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000608753153a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000060875327ec03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000608753185a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000608753153a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000060875327e1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000060875327e50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000060875318591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x0000608753153a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00006087532252e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000060875311dd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x0000608753132085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x0000608753094c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00006087524b0561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00006087524ad3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00006087543a9d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x0000608752d5d689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x0000608752cdc8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00006087543a6b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x000060875439eec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00006087543a26a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00006087543a60b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00006087543a663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00006087524b0dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00006087524af4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x0000744823c391ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x0000744823c3928b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00006087524ad0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 552632 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/test/NVQPP/qir_gen.cpp -o qir_gen.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.. 
********************
Failed Tests (23):
  CUDAQ :: AST-Quake/auto_kernel-1.cpp
  CUDAQ :: AST-Quake/auto_kernel-2.cpp
  CUDAQ :: AST-Quake/bool_literal.cpp
  CUDAQ :: AST-Quake/call_qpu.cpp
  CUDAQ :: AST-Quake/cast.cpp
  CUDAQ :: AST-Quake/const_reference_extension.cpp
  CUDAQ :: AST-Quake/cudaq_run.cpp
  CUDAQ :: AST-Quake/has_conditionals.cpp
  CUDAQ :: AST-Quake/if.cpp
  CUDAQ :: AST-Quake/measure_bell.cpp
  CUDAQ :: AST-Quake/mz.cpp
  CUDAQ :: AST-Quake/qalloc_initialization.cpp
  CUDAQ :: AST-Quake/qalloc_state.cpp
  CUDAQ :: AST-Quake/ranged_for_qreg.cpp
  CUDAQ :: AST-Quake/separate_compilation.cpp
  CUDAQ :: AST-Quake/single_qubit_ctor.cpp
  CUDAQ :: AST-Quake/slice.cpp
  CUDAQ :: AST-Quake/ternary.cpp
  CUDAQ :: AST-Quake/to_qir.cpp
  CUDAQ :: AST-Quake/unwind_return.cpp
  CUDAQ :: AST-Quake/vector_bool.cpp
  CUDAQ :: AST-error/cudaq_run.cpp
  CUDAQ :: NVQPP/qir_gen.cpp


Testing Time: 110.82s

Total Discovered Tests: 325
  Passed           : 300 (92.31%)
  Expectedly Failed:   2 (0.62%)
  Failed           :  23 (7.08%)
FAILED: test/CMakeFiles/check-nvqpp /workspaces/cuda-quantum/build/Debug/test/CMakeFiles/check-nvqpp 
cd /workspaces/cuda-quantum/build/Debug/test && /usr/local/llvm/bin/llvm-lit -sv --param nvqpp_site_config=/workspaces/cuda-quantum/build/Debug/test/lit.site.cfg.py /workspaces/cuda-quantum/build/Debug/test
ninja: build stopped: subcommand failed.
<end of output>
Test time = 111.17 sec
----------------------------------------------------------
Test Failed.
"ctest-nvqpp" end time: Oct 18 01:28 UTC
"ctest-nvqpp" time elapsed: 00:01:51
----------------------------------------------------------

6/1310 Testing: ctest-targettests
6/1310 Test: ctest-targettests
Command: "/usr/local/cmake-3.28/bin/cmake" "--build" "/workspaces/cuda-quantum/build/Debug" "--target" "check-targets"
Directory: /workspaces/cuda-quantum/build/Debug
"ctest-targettests" start time: Oct 18 01:28 UTC
Output:
----------------------------------------------------------
[0/1] Running the end-to-end target tests
-- Testing: 353 tests, 8 workers --
Testing: 
FAIL: CUDAQ-Target :: Kernel/signature-0.cpp (1 of 353)
******************** TEST 'CUDAQ-Target :: Kernel/signature-0.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  --enable-mlir /workspaces/cuda-quantum/targettests/Kernel/signature-0.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/signature-0.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/signature-0.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Kernel/signature-0.cpp
+ nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/Kernel/signature-0.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/signature-0.cpp.tmp
signature-0.cpp:56:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
signature-0.cpp:64:12: error: no viable conversion from returned value of type 'vector<measure_result>' to function return type 'vector<bool>'
    return mz(q);
           ^~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:809:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'const vector<bool> &' for 1st argument
      vector(const vector& __x)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:818:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'vector<bool> &&' for 1st argument
      vector(vector&&) = default;
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:857:7: note: candidate constructor not viable: no known conversion from 'std::vector<measure_result>' to 'initializer_list<bool>' for 1st argument
      vector(initializer_list<bool> __l,
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:784:7: note: explicit constructor is not a candidate
      vector(const allocator_type& __a)
      ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_bvector.h:790:7: note: explicit constructor is not a candidate
      vector(size_type __n, const allocator_type& __a = allocator_type())
      ^
error: C++ source has errors. nvq++ cannot proceed.
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Kernel/signature-0.cpp -o signature-0.qke"

--

********************
Testing: 
FAIL: CUDAQ-Target :: Kernel/inline-qpu-func.cpp (2 of 353)
******************** TEST 'CUDAQ-Target :: Kernel/inline-qpu-func.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  --enable-mlir /workspaces/cuda-quantum/targettests/Kernel/inline-qpu-func.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/inline-qpu-func.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/inline-qpu-func.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Kernel/inline-qpu-func.cpp
+ nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/Kernel/inline-qpu-func.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Kernel/Output/inline-qpu-func.cpp.tmp
inline-qpu-func.cpp:19:12: error: use of overloaded operator '^=' is ambiguous (with operand types 'bool' and 'cudaq::measure_result')
    result ^= x;
    ~~~~~~ ^  ~
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, int)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, long)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, long long)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, __int128)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, unsigned int)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, unsigned long)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, unsigned long long)
inline-qpu-func.cpp:19:12: note: built-in candidate operator^=(_Bool &, unsigned __int128)
error: C++ source has errors. nvq++ cannot proceed.
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Kernel/inline-qpu-func.cpp -o inline-qpu-func.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/cudaq_run.cpp (9 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/cudaq_run.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 13: nvq++  --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run.cpp
+ nvq++ --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run.cpp -o cudaq_run.qke
1.	<eof> parser at end of file
 #0 0x000057ea856e3246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000057ea856e09de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007ad58ff10330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007ad58ff69b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007ad58ff1027e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007ad58fef38ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007ad58fef381b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007ad58ff06517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000057ea862898fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000057ea862784a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057ea861ed1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000057ea86393882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000057ea86339b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000057ea8633a022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000057ea862db8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000057ea862ad9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000057ea8638afad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000057ea86277ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000057ea862e0e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000057ea862ada79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000057ea863d8c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000057ea862dfa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000057ea862ada79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000057ea863d81db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000057ea863d83d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000057ea863da9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000057ea8606a6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057ea8600729a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000057ea863d9abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000057ea863d854d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000057ea862df91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000057ea862ada79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000057ea863dd783 bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:440:22
#33 0x000057ea863dfa2e void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000057ea86069715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000057ea86004719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000057ea86004879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000057ea863def53 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool&&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000057ea863dd96a bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:450:10
#39 0x000057ea863d85d3 cudaq::details::QuakeBridgeVisitor::TraverseWhileStmt(clang::WhileStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:461:1
#40 0x000057ea862e18b6 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1541:1
#41 0x000057ea862ada79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#42 0x000057ea863d81db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#43 0x000057ea863d850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#44 0x000057ea862df91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#45 0x000057ea862ada79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000057ea8637f2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#47 0x000057ea86277d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#48 0x000057ea8628c085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#49 0x000057ea861eec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#50 0x000057ea8560a561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#51 0x000057ea856073b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#52 0x000057ea87503d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#53 0x000057ea85eb7689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#54 0x000057ea85e368be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#55 0x000057ea87500b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#56 0x000057ea874f8ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#57 0x000057ea874fc6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#58 0x000057ea875000b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#59 0x000057ea8750063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#60 0x000057ea8560adc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#61 0x000057ea856094c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#62 0x00007ad58fef51ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#63 0x00007ad58fef528b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#64 0x000057ea856070a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 556142 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run.cpp -o cudaq_run.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/estimate-resources_break.cpp (10 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/estimate-resources_break.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++  --target remote-mqpu                             /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_break.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_break.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_break.cpp
+ nvq++ --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_break.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_break.cpp -o estimate-resources_break.qke
1.	<eof> parser at end of file
 #0 0x00005cd5ebbc8246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005cd5ebbc59de SignalHandler(int) Signals.cpp:0:0
 #2 0x000073f9b6659330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000073f9b66b2b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000073f9b665927e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000073f9b663c8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000073f9b663c81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000073f9b664f517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005cd5ec76e8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005cd5ec75d4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005cd5ec6d21fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005cd5ec878882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005cd5ec81eb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005cd5ec81f022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005cd5ec7c08a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005cd5ec7929f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005cd5ec86ffad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005cd5ec75cea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005cd5ec7c5e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005cd5ec792a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005cd5ec8bdc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005cd5ec7c4a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005cd5ec792a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005cd5ec8bd1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005cd5ec8bd3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005cd5ec8bf9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005cd5ec54f6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005cd5ec4ec29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005cd5ec8beabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005cd5ec8bd54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005cd5ec7c491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005cd5ec792a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005cd5ec8be13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005cd5ec8bfb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005cd5ec54e715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005cd5ec4e9719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005cd5ec4e9879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005cd5ec8bf211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005cd5ec8be3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005cd5ec8bfc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005cd5ec54f6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005cd5ec4ec29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005cd5ec8bf387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005cd5ec8be642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005cd5ec7c49f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005cd5ec792a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005cd5ec8bd1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005cd5ec8bd50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005cd5ec7c491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005cd5ec792a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005cd5ec8642e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005cd5ec75cd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005cd5ec771085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005cd5ec6d3c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005cd5ebaef561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005cd5ebaec3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005cd5ed9e8d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005cd5ec39c689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005cd5ec31b8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005cd5ed9e5b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005cd5ed9ddec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005cd5ed9e16a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005cd5ed9e50b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005cd5ed9e563b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005cd5ebaefdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005cd5ebaee4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000073f9b663e1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000073f9b663e28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005cd5ebaec0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 556797 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_break.cpp -o estimate-resources_break.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/cudaq_run_async.cpp (12 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/cudaq_run_async.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 13: nvq++  --target remote-mqpu --remote-mqpu-auto-launch 4 /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run_async.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run_async.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run_async.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run_async.cpp
+ nvq++ --target remote-mqpu --remote-mqpu-auto-launch 4 /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run_async.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/cudaq_run_async.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run_async.cpp -o cudaq_run_async.qke
1.	<eof> parser at end of file
 #0 0x00005f8926548246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005f89265459de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000780bac143330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000780bac19cb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000780bac14327e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000780bac1268ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000780bac12681b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000780bac139517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005f89270ee8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005f89270dd4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005f89270521fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005f89271f8882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005f892719eb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005f892719f022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005f89271408a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005f89271129f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005f89271effad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005f89270dcea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005f8927145e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005f8927112a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005f89271e55bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005f89270f11b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005f8927189613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005f892723a3b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005f89271449ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005f8927112a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005f892723d1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005f892723d3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#28 0x00005f892723f9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#29 0x00005f8926ecf6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#30 0x00005f8926e6c29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#31 0x00005f892723eabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#32 0x00005f892723d54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#33 0x00005f892714491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#34 0x00005f8927112a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#35 0x00005f892723e13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#36 0x00005f892723fb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#37 0x00005f8926ece715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#38 0x00005f8926e69719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#39 0x00005f8926e69879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#40 0x00005f892723f211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#41 0x00005f892723e3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#42 0x00005f892723fc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#43 0x00005f8926ecf6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#44 0x00005f8926e6c29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#45 0x00005f892723f387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#46 0x00005f892723e642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#47 0x00005f89271449f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#48 0x00005f8927112a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x00005f892723d1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#50 0x00005f892723d50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#51 0x00005f892714491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#52 0x00005f8927112a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#53 0x00005f89271e42e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#54 0x00005f89270f101f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#55 0x00005f8927053c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#56 0x00005f892646f561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#57 0x00005f892646c3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#58 0x00005f8928368d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#59 0x00005f8926d1c689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#60 0x00005f8926c9b8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#61 0x00005f8928365b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#62 0x00005f892835dec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#63 0x00005f89283616a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#64 0x00005f89283650b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#65 0x00005f892836563b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#66 0x00005f892646fdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#67 0x00005f892646e4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#68 0x0000780bac1281ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#69 0x0000780bac12828b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#70 0x00005f892646c0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 556572 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/cudaq_run_async.cpp -o cudaq_run_async.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/estimate-resources_choice-function.cpp (13 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/estimate-resources_choice-function.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++  --target remote-mqpu                             /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_choice-function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_choice-function.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_choice-function.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_choice-function.cpp
+ nvq++ --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_choice-function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_choice-function.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_choice-function.cpp -o estimate-resources_choice-function.qke
1.	<eof> parser at end of file
 #0 0x0000612f70d0f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000612f70d0c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007cda89c2f330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007cda89c88b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007cda89c2f27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007cda89c128ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007cda89c1281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007cda89c25517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000612f718b58fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000612f718a44a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000612f718191fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000612f719bf882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000612f71965b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000612f71966022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000612f719078a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000612f718d99f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000612f719b6fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000612f718a3ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000612f7190ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000612f718d9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000612f71a04c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000612f7190ba3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000612f718d9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000612f71a041db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000612f71a0450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x0000612f7190b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x0000612f718d9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x0000612f719ab2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x0000612f718a3d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x0000612f718b8085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x0000612f7181ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x0000612f70c36561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x0000612f70c333b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x0000612f72b2fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x0000612f714e3689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x0000612f714628be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x0000612f72b2cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x0000612f72b24ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x0000612f72b286a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x0000612f72b2c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x0000612f72b2c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x0000612f70c36dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x0000612f70c354c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x00007cda89c141ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x00007cda89c1428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x0000612f70c330a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 556809 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_choice-function.cpp -o estimate-resources_choice-function.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/estimate-resources_mzloop.cpp (14 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/estimate-resources_mzloop.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++  --target remote-mqpu                             /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_mzloop.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_mzloop.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_mzloop.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_mzloop.cpp
+ nvq++ --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_mzloop.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_mzloop.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_mzloop.cpp -o estimate-resources_mzloop.qke
1.	<eof> parser at end of file
 #0 0x00005facad762246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005facad75f9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000774c7e22a330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000774c7e283b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000774c7e22a27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000774c7e20d8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000774c7e20d81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000774c7e220517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005facae3088fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005facae2f74a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005facae26c1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005facae412882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005facae3b8b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005facae3b9022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005facae35a8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005facae32c9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005facae409fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005facae2f6ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005facae35fe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005facae32ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005facae45c5e5 bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:425:22
#21 0x00005facae45e9c1 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#22 0x00005facae0e8715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#23 0x00005facae0836fb cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1413:14
#24 0x00005facae083879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#25 0x00005facae45df53 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool&&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#26 0x00005facae45c96a bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:450:10
#27 0x00005facae4575d3 cudaq::details::QuakeBridgeVisitor::TraverseWhileStmt(clang::WhileStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:461:1
#28 0x00005facae3608b6 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1541:1
#29 0x00005facae32ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x00005facae4571db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#31 0x00005facae45750c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#32 0x00005facae35e91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#33 0x00005facae32ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#34 0x00005facae3fe2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#35 0x00005facae2f6d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#36 0x00005facae30b085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#37 0x00005facae26dc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#38 0x00005facad689561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#39 0x00005facad6863b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#40 0x00005facaf582d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#41 0x00005facadf36689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#42 0x00005facadeb58be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#43 0x00005facaf57fb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#44 0x00005facaf577ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#45 0x00005facaf57b6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#46 0x00005facaf57f0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#47 0x00005facaf57f63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#48 0x00005facad689dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#49 0x00005facad6884c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#50 0x0000774c7e20f1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#51 0x0000774c7e20f28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#52 0x00005facad6860a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 556904 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_mzloop.cpp -o estimate-resources_mzloop.qke"

--

********************
Testing:  0
FAIL: CUDAQ-Target :: Remote-Sim/estimate-resources_sample-in-choice.cpp (15 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/estimate-resources_sample-in-choice.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++  --target remote-mqpu                             /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_sample-in-choice.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_sample-in-choice.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_sample-in-choice.cpp.tmp
+ nvq++ --target remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_sample-in-choice.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/estimate-resources_sample-in-choice.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_sample-in-choice.cpp -o estimate-resources_sample-in-choice.qke
1.	<eof> parser at end of file
 #0 0x000055c7a4dd0246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000055c7a4dcd9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007b7ab3f1c330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007b7ab3f75b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007b7ab3f1c27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007b7ab3eff8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007b7ab3eff81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007b7ab3f12517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000055c7a59768fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000055c7a59654a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000055c7a58da1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000055c7a5a80882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000055c7a5a26b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000055c7a5a27022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000055c7a59c88a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000055c7a599a9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000055c7a5a77fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000055c7a5964ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000055c7a59cde0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000055c7a599aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000055c7a5ac5c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000055c7a59cca3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000055c7a599aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000055c7a5ac51db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000055c7a5ac550c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000055c7a59cc91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x000055c7a599aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x000055c7a5a6c2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000055c7a5964d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x000055c7a5979085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x000055c7a58dbc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x000055c7a4cf7561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x000055c7a4cf43b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x000055c7a6bf0d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x000055c7a55a4689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x000055c7a55238be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x000055c7a6bedb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x000055c7a6be5ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x000055c7a6be96a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x000055c7a6bed0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x000055c7a6bed63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x000055c7a4cf7dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x000055c7a4cf64c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x00007b7ab3f011ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x00007b7ab3f0128b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x000055c7a4cf40a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 557217 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/estimate-resources_sample-in-choice.cpp -o estimate-resources_sample-in-choice.qke"

--

********************
Testing:  0.
FAIL: CUDAQ-Target :: Remote-Sim/phase-folding/OptTester.cpp (27 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/phase-folding/OptTester.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target=remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/OptTester.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/OptTester.cpp.tmp && CUDAQ_BYPASS_PHASE_FOLDING_MINS=1 /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/OptTester.cpp.tmp
+ nvq++ --target=remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/OptTester.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/OptTester.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/OptTester.cpp -o OptTester.qke
1.	<eof> parser at end of file
 #0 0x00005d67349c6246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005d67349c39de SignalHandler(int) Signals.cpp:0:0
 #2 0x000078a4f4372330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000078a4f43cbb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000078a4f437227e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000078a4f43558ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000078a4f435581b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000078a4f4368517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005d673556c8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005d673555b4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005d67354d01fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005d6735676882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005d673561cb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005d673561d022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005d67355be8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005d67355909f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005d673566dfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005d673555aea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005d67355c3e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005d6735590a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005d67356bbc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005d67355c2a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005d6735590a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005d67356bb1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005d67356bb50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005d67355c291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005d6735590a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005d67356622e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005d673555ad63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005d673556f085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005d67354d1c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005d67348ed561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005d67348ea3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005d67367e6d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005d673519a689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005d67351198be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005d67367e3b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005d67367dbec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005d67367df6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005d67367e30b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005d67367e363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005d67348eddc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005d67348ec4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x000078a4f43571ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x000078a4f435728b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005d67348ea0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 559439 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/OptTester.cpp -o OptTester.qke"

--

********************
Testing:  0..
FAIL: CUDAQ-Target :: Remote-Sim/phase-folding/aliasing.cpp (31 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/phase-folding/aliasing.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target=remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/aliasing.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/aliasing.cpp.tmp && CUDAQ_BYPASS_PHASE_FOLDING_MINS=1 /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/aliasing.cpp.tmp
+ nvq++ --target=remote-mqpu /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/aliasing.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/phase-folding/Output/aliasing.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/aliasing.cpp -o aliasing.qke
1.	<eof> parser at end of file
 #0 0x00005bcf47fc7246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005bcf47fc49de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007f8d2a9af330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007f8d2aa08b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007f8d2a9af27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007f8d2a9928ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007f8d2a99281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007f8d2a9a5517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005bcf48b6d8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005bcf48b5c4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005bcf48ad11fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005bcf48c77882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005bcf48c1db72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005bcf48c1e022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005bcf48bbf8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005bcf48b919f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005bcf48c6efad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005bcf48b5bea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005bcf48bc4e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005bcf48b91a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005bcf48cbcc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005bcf48bc3a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005bcf48b91a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005bcf48cbc1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005bcf48cbc50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005bcf48bc391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005bcf48b91a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005bcf48c632e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005bcf48b5bd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005bcf48b70085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005bcf48ad2c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005bcf47eee561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005bcf47eeb3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005bcf49de7d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005bcf4879b689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005bcf4871a8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005bcf49de4b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005bcf49ddcec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005bcf49de06a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005bcf49de40b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005bcf49de463b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005bcf47eeedc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005bcf47eed4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x00007f8d2a9941ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x00007f8d2a99428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005bcf47eeb0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 560085 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/phase-folding/aliasing.cpp -o aliasing.qke"

--

********************
Testing:  0..
FAIL: CUDAQ-Target :: Remote-Sim/return_values.cpp (32 of 353)
******************** TEST 'CUDAQ-Target :: Remote-Sim/return_values.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 13: nvq++  --enable-mlir --target remote-mqpu --remote-mqpu-auto-launch 1 /workspaces/cuda-quantum/targettests/Remote-Sim/return_values.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/return_values.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/return_values.cpp.tmp
+ nvq++ --enable-mlir --target remote-mqpu --remote-mqpu-auto-launch 1 /workspaces/cuda-quantum/targettests/Remote-Sim/return_values.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/Remote-Sim/Output/return_values.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/return_values.cpp -o return_values.qke
1.	<eof> parser at end of file
 #0 0x00005c837407a246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005c83740779de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007605dbfe6330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007605dc03fb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007605dbfe627e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007605dbfc98ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007605dbfc981b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007605dbfdc517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005c8374c208fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005c8374c0f4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005c8374b841fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005c8374d2a882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005c8374cd0b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005c8374cd1022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005c8374c728a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005c8374c449f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005c8374d21fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005c8374c0eea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005c8374c77e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005c8374c44a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005c8374d6fc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005c8374c76a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005c8374c44a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005c8374d6f1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005c8374d6f3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005c8374d719e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005c8374a016a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005c837499e29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005c8374d70abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005c8374d6f54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005c8374c7691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005c8374c44a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005c8374d74783 bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:440:22
#33 0x00005c8374d76a2e void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005c8374a00715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005c837499b719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005c837499b879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005c8374d75f53 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool&&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005c8374d7496a bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:450:10
#39 0x00005c8374d6f5d3 cudaq::details::QuakeBridgeVisitor::TraverseWhileStmt(clang::WhileStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:461:1
#40 0x00005c8374c788b6 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1541:1
#41 0x00005c8374c44a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#42 0x00005c8374d6f1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#43 0x00005c8374d6f50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#44 0x00005c8374c7691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#45 0x00005c8374c44a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005c8374d162e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#47 0x00005c8374c0ed63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#48 0x00005c8374c23085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#49 0x00005c8374b85c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#50 0x00005c8373fa1561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#51 0x00005c8373f9e3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#52 0x00005c8375e9ad79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#53 0x00005c837484e689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#54 0x00005c83747cd8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#55 0x00005c8375e97b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#56 0x00005c8375e8fec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#57 0x00005c8375e936a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#58 0x00005c8375e970b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#59 0x00005c8375e9763b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#60 0x00005c8373fa1dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#61 0x00005c8373fa04c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#62 0x00007605dbfcb1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#63 0x00007605dbfcb28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#64 0x00005c8373f9e0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 560808 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/Remote-Sim/return_values.cpp -o return_values.qke"

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ-Target :: execution/IQPE_conditionals-cpp17.cpp (85 of 353)
******************** TEST 'CUDAQ-Target :: execution/IQPE_conditionals-cpp17.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals-cpp17.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals-cpp17.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals-cpp17.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals-cpp17.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals-cpp17.cpp -o IQPE_conditionals-cpp17.qke
1.	<eof> parser at end of file
 #0 0x00005c7bbccff246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005c7bbccfc9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000773daff8f330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000773daffe8b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000773daff8f27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000773daff728ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000773daff7281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000773daff85517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005c7bbd8a58fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005c7bbd8944a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005c7bbd8091fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005c7bbd9af882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005c7bbd955b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005c7bbd956022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005c7bbd8f78a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005c7bbd8c99f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005c7bbd9a6fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005c7bbd893ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005c7bbd8fce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005c7bbd8c9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005c7bbd9f4c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005c7bbd8fba3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005c7bbd8c9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005c7bbd9f41db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005c7bbd9f450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005c7bbd8fb91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005c7bbd8c9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005c7bbd99b2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005c7bbd893d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005c7bbd8a8085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005c7bbd80ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005c7bbcc26561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005c7bbcc233b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005c7bbeb1fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005c7bbd4d3689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005c7bbd4528be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005c7bbeb1cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005c7bbeb14ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005c7bbeb186a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005c7bbeb1c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005c7bbeb1c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005c7bbcc26dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005c7bbcc254c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x0000773daff741ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x0000773daff7428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005c7bbcc230a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 564688 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals-cpp17.cpp -o IQPE_conditionals-cpp17.qke"

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ-Target :: execution/IQPE_conditionals.cpp (90 of 353)
******************** TEST 'CUDAQ-Target :: execution/IQPE_conditionals.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals.cpp
+ nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/IQPE_conditionals.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals.cpp -o IQPE_conditionals.qke
1.	<eof> parser at end of file
 #0 0x00005a96f5c63246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005a96f5c609de SignalHandler(int) Signals.cpp:0:0
 #2 0x000070eda80d8330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000070eda8131b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000070eda80d827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000070eda80bb8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000070eda80bb81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000070eda80ce517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005a96f68098fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005a96f67f84a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005a96f676d1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005a96f6913882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005a96f68b9b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005a96f68ba022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005a96f685b8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005a96f682d9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005a96f690afad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005a96f67f7ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005a96f6860e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005a96f682da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005a96f6958c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005a96f685fa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005a96f682da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005a96f69581db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005a96f695850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005a96f685f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005a96f682da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005a96f68ff2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005a96f67f7d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005a96f680c085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005a96f676ec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005a96f5b8a561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005a96f5b873b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005a96f7a83d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005a96f6437689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005a96f63b68be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005a96f7a80b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005a96f7a78ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005a96f7a7c6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005a96f7a800b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005a96f7a8063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005a96f5b8adc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005a96f5b894c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x000070eda80bd1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x000070eda80bd28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005a96f5b870a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 565170 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/IQPE_conditionals.cpp -o IQPE_conditionals.qke"

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ-Target :: execution/auto_kernel-cpp17.cpp (91 of 353)
******************** TEST 'CUDAQ-Target :: execution/auto_kernel-cpp17.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++ -std=c++17 --enable-mlir /workspaces/cuda-quantum/targettests/execution/auto_kernel-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel-cpp17.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel-cpp17.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/auto_kernel-cpp17.cpp
+ nvq++ -std=c++17 --enable-mlir /workspaces/cuda-quantum/targettests/execution/auto_kernel-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel-cpp17.cpp.tmp
auto_kernel-cpp17.cpp:20:3: error: kernel result type not supported
  auto operator()() __qpu__ {
  ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/targettests/execution/auto_kernel-cpp17.cpp
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include -std=c++17 --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/auto_kernel-cpp17.cpp -o auto_kernel-cpp17.qke"

--

********************
Testing:  0.. 10.. 20
FAIL: CUDAQ-Target :: execution/auto_kernel.cpp (92 of 353)
******************** TEST 'CUDAQ-Target :: execution/auto_kernel.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/execution/auto_kernel.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/auto_kernel.cpp
+ nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/execution/auto_kernel.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/auto_kernel.cpp.tmp
auto_kernel.cpp:20:3: error: kernel result type not supported
  auto operator()() __qpu__ {
  ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/targettests/execution/auto_kernel.cpp
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/auto_kernel.cpp -o auto_kernel.qke"

--

********************
Testing:  0.. 10.. 20.
FAIL: CUDAQ-Target :: execution/conditional_sample-cpp17.cpp (95 of 353)
******************** TEST 'CUDAQ-Target :: execution/conditional_sample-cpp17.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/conditional_sample-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample-cpp17.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample-cpp17.cpp.tmp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/conditional_sample-cpp17.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample-cpp17.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/conditional_sample-cpp17.cpp -o conditional_sample-cpp17.qke
1.	<eof> parser at end of file
 #0 0x0000591e47c51246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000591e47c4e9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079b1e1c48330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079b1e1ca1b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079b1e1c4827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079b1e1c2b8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079b1e1c2b81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079b1e1c3e517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000591e487f78fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000591e487e64a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000591e4875b1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000591e48901882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000591e488a7b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000591e488a8022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000591e488498a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000591e4881b9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000591e488f8fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000591e487e5ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000591e4884ee0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000591e4881ba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000591e48946c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000591e4884da3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000591e4881ba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000591e489461db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000591e4894650c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x0000591e4884d91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x0000591e4881ba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x0000591e488ed2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x0000591e487e5d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x0000591e487fa085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x0000591e4875cc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x0000591e47b78561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x0000591e47b753b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x0000591e49a71d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x0000591e48425689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x0000591e483a48be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x0000591e49a6eb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x0000591e49a66ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x0000591e49a6a6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x0000591e49a6e0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x0000591e49a6e63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x0000591e47b78dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x0000591e47b774c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x000079b1e1c2d1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x000079b1e1c2d28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x0000591e47b750a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 566507 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/conditional_sample-cpp17.cpp -o conditional_sample-cpp17.qke"

--

********************
Testing:  0.. 10.. 20.
FAIL: CUDAQ-Target :: execution/conditional_sample.cpp (96 of 353)
******************** TEST 'CUDAQ-Target :: execution/conditional_sample.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/conditional_sample.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample.cpp.tmp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/conditional_sample.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/conditional_sample.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/conditional_sample.cpp -o conditional_sample.qke
1.	<eof> parser at end of file
 #0 0x00005e4ee2cc5246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005e4ee2cc29de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007946cb859330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007946cb8b2b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007946cb85927e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007946cb83c8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007946cb83c81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007946cb84f517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005e4ee386b8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005e4ee385a4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005e4ee37cf1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005e4ee3975882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005e4ee391bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005e4ee391c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005e4ee38bd8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005e4ee388f9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005e4ee396cfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005e4ee3859ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005e4ee38c2e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005e4ee388fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005e4ee39bac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005e4ee38c1a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005e4ee388fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005e4ee39ba1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005e4ee39ba50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005e4ee38c191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005e4ee388fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005e4ee39612e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005e4ee3859d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005e4ee386e085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005e4ee37d0c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005e4ee2bec561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005e4ee2be93b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005e4ee4ae5d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005e4ee3499689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005e4ee34188be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005e4ee4ae2b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005e4ee4adaec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005e4ee4ade6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005e4ee4ae20b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005e4ee4ae263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005e4ee2becdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005e4ee2beb4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x00007946cb83e1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x00007946cb83e28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005e4ee2be90a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 566813 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/conditional_sample.cpp -o conditional_sample.qke"

--

********************
Testing:  0.. 10.. 20..
FAIL: CUDAQ-Target :: execution/cudaq_run.cpp (100 of 353)
******************** TEST 'CUDAQ-Target :: execution/cudaq_run.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  /workspaces/cuda-quantum/targettests/execution/cudaq_run.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/cudaq_run.cpp
+ nvq++ /workspaces/cuda-quantum/targettests/execution/cudaq_run.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run.cpp -o cudaq_run.qke
1.	<eof> parser at end of file
 #0 0x00005c22d48a3246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005c22d48a09de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007fe7764ea330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007fe776543b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007fe7764ea27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007fe7764cd8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007fe7764cd81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007fe7764e0517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005c22d54498fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005c22d54384a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005c22d53ad1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005c22d5553882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005c22d54f9b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005c22d54fa022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005c22d549b8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005c22d546d9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005c22d554afad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005c22d5437ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005c22d54a0e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005c22d546da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005c22d55405bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005c22d544c1b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005c22d54e4613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005c22d55953b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005c22d549f9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005c22d546da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005c22d55981db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005c22d55983d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#28 0x00005c22d559a9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#29 0x00005c22d522a6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#30 0x00005c22d51c729a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#31 0x00005c22d5599abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#32 0x00005c22d559854d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#33 0x00005c22d549f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#34 0x00005c22d546da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#35 0x00005c22d559913f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#36 0x00005c22d559ab7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#37 0x00005c22d5229715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#38 0x00005c22d51c4719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#39 0x00005c22d51c4879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#40 0x00005c22d559a211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#41 0x00005c22d55993b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#42 0x00005c22d559ac3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#43 0x00005c22d522a6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#44 0x00005c22d51c729a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#45 0x00005c22d559a387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#46 0x00005c22d5599642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#47 0x00005c22d549f9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#48 0x00005c22d546da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x00005c22d55981db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#50 0x00005c22d559850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#51 0x00005c22d549f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#52 0x00005c22d546da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#53 0x00005c22d553f2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#54 0x00005c22d544c01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#55 0x00005c22d53aec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#56 0x00005c22d47ca561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#57 0x00005c22d47c73b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#58 0x00005c22d66c3d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#59 0x00005c22d5077689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#60 0x00005c22d4ff68be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#61 0x00005c22d66c0b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#62 0x00005c22d66b8ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#63 0x00005c22d66bc6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#64 0x00005c22d66c00b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#65 0x00005c22d66c063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#66 0x00005c22d47cadc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#67 0x00005c22d47c94c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#68 0x00007fe7764cf1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#69 0x00007fe7764cf28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#70 0x00005c22d47c70a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 571812 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run.cpp -o cudaq_run.qke"

--

********************
Testing:  0.. 10.. 20..
FAIL: CUDAQ-Target :: execution/cudaq_run_emulation.cpp (102 of 353)
******************** TEST 'CUDAQ-Target :: execution/cudaq_run_emulation.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 12: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/cudaq_run_emulation.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_emulation.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_emulation.cpp.tmp |& /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/cudaq_run_emulation.cpp -check-prefix=FAIL
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/cudaq_run_emulation.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_emulation.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_emulation.cpp -o cudaq_run_emulation.qke
1.	<eof> parser at end of file
 #0 0x00006189b4be4246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006189b4be19de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000791ea90cd330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000791ea9126b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000791ea90cd27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000791ea90b08ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000791ea90b081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000791ea90c3517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00006189b578a8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00006189b57794a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006189b56ee1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00006189b5894882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006189b583ab72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006189b583b022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006189b57dc8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006189b57ae9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00006189b588bfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00006189b5778ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00006189b57e1e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00006189b57aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00006189b58d9c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00006189b57e0a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00006189b57aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00006189b58da13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#24 0x00006189b58dbb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#25 0x00006189b556a715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#26 0x00006189b5505719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#27 0x00006189b5505879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#28 0x00006189b58db211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#29 0x00006189b58da3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#30 0x00006189b58dbc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#31 0x00006189b556b6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#32 0x00006189b550829a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#33 0x00006189b58db387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#34 0x00006189b58da642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#35 0x00006189b57e09f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#36 0x00006189b57aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#37 0x00006189b58d91db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#38 0x00006189b58d950c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#39 0x00006189b57e091b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#40 0x00006189b57aea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#41 0x00006189b58802e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#42 0x00006189b578d01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#43 0x00006189b56efc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#44 0x00006189b4b0b561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#45 0x00006189b4b083b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#46 0x00006189b6a04d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#47 0x00006189b53b8689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#48 0x00006189b53378be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#49 0x00006189b6a01b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#50 0x00006189b69f9ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#51 0x00006189b69fd6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#52 0x00006189b6a010b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#53 0x00006189b6a0163b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#54 0x00006189b4b0bdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#55 0x00006189b4b0a4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#56 0x0000791ea90b21ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#57 0x0000791ea90b228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#58 0x00006189b4b080a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 572656 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_emulation.cpp -o cudaq_run_emulation.qke"

--

********************
Testing:  0.. 10.. 20..
FAIL: CUDAQ-Target :: execution/cudaq_run_noisy.cpp (103 of 353)
******************** TEST 'CUDAQ-Target :: execution/cudaq_run_noisy.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target density-matrix-cpu  /workspaces/cuda-quantum/targettests/execution/cudaq_run_noisy.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_noisy.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_noisy.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/cudaq_run_noisy.cpp
+ nvq++ --target density-matrix-cpu /workspaces/cuda-quantum/targettests/execution/cudaq_run_noisy.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_noisy.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_noisy.cpp -o cudaq_run_noisy.qke
1.	<eof> parser at end of file
 #0 0x00006281cf30f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006281cf30c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079c0f080d330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079c0f0866b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079c0f080d27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079c0f07f08ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079c0f07f081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079c0f0803517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00006281cfeb58fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00006281cfea44a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006281cfe191fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00006281cffbf882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006281cff65b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006281cff66022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006281cff078a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006281cfed99f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00006281cffb6fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00006281cfea3ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00006281cff0ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00006281cfed9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00006281d0004c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00006281cff0ba3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00006281cfed9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00006281d000513f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#24 0x00006281d0006b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#25 0x00006281cfc95715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#26 0x00006281cfc30719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#27 0x00006281cfc30879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#28 0x00006281d0006211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#29 0x00006281d00053b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#30 0x00006281d0006c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#31 0x00006281cfc966a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#32 0x00006281cfc3329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#33 0x00006281d0006387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#34 0x00006281d0005642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#35 0x00006281cff0b9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#36 0x00006281cfed9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#37 0x00006281d00041db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#38 0x00006281d000450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#39 0x00006281cff0b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#40 0x00006281cfed9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#41 0x00006281cffab2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#42 0x00006281cfeb801f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#43 0x00006281cfe1ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#44 0x00006281cf236561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#45 0x00006281cf2333b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#46 0x00006281d112fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#47 0x00006281cfae3689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#48 0x00006281cfa628be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#49 0x00006281d112cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#50 0x00006281d1124ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#51 0x00006281d11286a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#52 0x00006281d112c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#53 0x00006281d112c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#54 0x00006281cf236dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#55 0x00006281cf2354c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#56 0x000079c0f07f21ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#57 0x000079c0f07f228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#58 0x00006281cf2330a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 573337 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_noisy.cpp -o cudaq_run_noisy.qke"

--

********************
Testing:  0.. 10.. 20.. 
FAIL: CUDAQ-Target :: execution/cudaq_run_sample_observe.cpp (108 of 353)
******************** TEST 'CUDAQ-Target :: execution/cudaq_run_sample_observe.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  /workspaces/cuda-quantum/targettests/execution/cudaq_run_sample_observe.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_sample_observe.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_sample_observe.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/cudaq_run_sample_observe.cpp
+ nvq++ /workspaces/cuda-quantum/targettests/execution/cudaq_run_sample_observe.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/cudaq_run_sample_observe.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_sample_observe.cpp -o cudaq_run_sample_observe.qke
1.	<eof> parser at end of file
 #0 0x00005d1cd1edc246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005d1cd1ed99de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000759759ebe330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000759759f17b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000759759ebe27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000759759ea18ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000759759ea181b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000759759eb4517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005d1cd2a828fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005d1cd2a714a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005d1cd29e61fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005d1cd2b8c882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005d1cd2b32b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005d1cd2b33022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005d1cd2ad48a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005d1cd2aa69f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005d1cd2b83fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005d1cd2a70ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005d1cd2ad9e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005d1cd2aa6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005d1cd2b795bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005d1cd2a851b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005d1cd2b1d613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005d1cd2bce3b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005d1cd2ad89ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005d1cd2aa6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005d1cd2bd11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005d1cd2bd13d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#28 0x00005d1cd2bd39e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#29 0x00005d1cd28636a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#30 0x00005d1cd280029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#31 0x00005d1cd2bd2abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#32 0x00005d1cd2bd154d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#33 0x00005d1cd2ad891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#34 0x00005d1cd2aa6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#35 0x00005d1cd2bd213f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#36 0x00005d1cd2bd3b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#37 0x00005d1cd2862715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#38 0x00005d1cd27fd719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#39 0x00005d1cd27fd879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#40 0x00005d1cd2bd3211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#41 0x00005d1cd2bd23b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#42 0x00005d1cd2bd3c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#43 0x00005d1cd28636a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#44 0x00005d1cd280029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#45 0x00005d1cd2bd3387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#46 0x00005d1cd2bd2642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#47 0x00005d1cd2ad89f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#48 0x00005d1cd2aa6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x00005d1cd2bd11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#50 0x00005d1cd2bd150c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#51 0x00005d1cd2ad891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#52 0x00005d1cd2aa6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#53 0x00005d1cd2b782e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#54 0x00005d1cd2a8501f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#55 0x00005d1cd29e7c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#56 0x00005d1cd1e03561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#57 0x00005d1cd1e003b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#58 0x00005d1cd3cfcd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#59 0x00005d1cd26b0689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#60 0x00005d1cd262f8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#61 0x00005d1cd3cf9b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#62 0x00005d1cd3cf1ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#63 0x00005d1cd3cf56a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#64 0x00005d1cd3cf90b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#65 0x00005d1cd3cf963b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#66 0x00005d1cd1e03dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#67 0x00005d1cd1e024c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#68 0x0000759759ea31ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#69 0x0000759759ea328b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#70 0x00005d1cd1e000a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 574098 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/cudaq_run_sample_observe.cpp -o cudaq_run_sample_observe.qke"

--

********************
Testing:  0.. 10.. 20.. 30
FAIL: CUDAQ-Target :: execution/estimate-resources_break.cpp (116 of 353)
******************** TEST 'CUDAQ-Target :: execution/estimate-resources_break.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_break.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_break.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/estimate-resources_break.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_break.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_break.cpp -o estimate-resources_break.qke
1.	<eof> parser at end of file
 #0 0x00005e0f889ba246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005e0f889b79de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007d9d09bcd330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007d9d09c26b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007d9d09bcd27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007d9d09bb08ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007d9d09bb081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007d9d09bc3517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005e0f895608fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005e0f8954f4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005e0f894c41fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005e0f8966a882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005e0f89610b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005e0f89611022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005e0f895b28a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005e0f895849f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005e0f89661fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005e0f8954eea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005e0f895b7e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005e0f89584a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005e0f896afc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005e0f895b6a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005e0f89584a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005e0f896af1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005e0f896af3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005e0f896b19e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005e0f893416a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005e0f892de29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005e0f896b0abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005e0f896af54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005e0f895b691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005e0f89584a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005e0f896b013f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005e0f896b1b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005e0f89340715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005e0f892db719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005e0f892db879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005e0f896b1211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005e0f896b03b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005e0f896b1c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005e0f893416a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005e0f892de29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005e0f896b1387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005e0f896b0642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005e0f895b69f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005e0f89584a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005e0f896af1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005e0f896af50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005e0f895b691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005e0f89584a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005e0f896562e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005e0f8954ed63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005e0f89563085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005e0f894c5c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005e0f888e1561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005e0f888de3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005e0f8a7dad79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005e0f8918e689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005e0f8910d8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005e0f8a7d7b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005e0f8a7cfec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005e0f8a7d36a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005e0f8a7d70b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005e0f8a7d763b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005e0f888e1dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005e0f888e04c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007d9d09bb21ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007d9d09bb228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005e0f888de0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 578527 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_break.cpp -o estimate-resources_break.qke"

--

********************
Testing:  0.. 10.. 20.. 30
FAIL: CUDAQ-Target :: execution/estimate-resources_choice-function.cpp (119 of 353)
******************** TEST 'CUDAQ-Target :: execution/estimate-resources_choice-function.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_choice-function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_choice-function.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_choice-function.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/estimate-resources_choice-function.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_choice-function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_choice-function.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_choice-function.cpp -o estimate-resources_choice-function.qke
1.	<eof> parser at end of file
 #0 0x00005ba5b0c79246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005ba5b0c769de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007f9feb1d3330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007f9feb22cb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007f9feb1d327e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007f9feb1b68ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007f9feb1b681b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007f9feb1c9517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005ba5b181f8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005ba5b180e4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005ba5b17831fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005ba5b1929882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005ba5b18cfb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005ba5b18d0022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005ba5b18718a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005ba5b18439f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005ba5b1920fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005ba5b180dea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005ba5b1876e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005ba5b1843a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005ba5b196ec03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005ba5b1875a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005ba5b1843a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005ba5b196e1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005ba5b196e50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005ba5b187591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005ba5b1843a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005ba5b19152e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005ba5b180dd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x00005ba5b1822085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x00005ba5b1784c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x00005ba5b0ba0561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x00005ba5b0b9d3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x00005ba5b2a99d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x00005ba5b144d689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x00005ba5b13cc8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x00005ba5b2a96b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x00005ba5b2a8eec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x00005ba5b2a926a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x00005ba5b2a960b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x00005ba5b2a9663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x00005ba5b0ba0dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x00005ba5b0b9f4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x00007f9feb1b81ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x00007f9feb1b828b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x00005ba5b0b9d0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 579357 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_choice-function.cpp -o estimate-resources_choice-function.qke"

--

********************
Testing:  0.. 10.. 20.. 30
FAIL: CUDAQ-Target :: execution/estimate-resources_mzloop.cpp (120 of 353)
******************** TEST 'CUDAQ-Target :: execution/estimate-resources_mzloop.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_mzloop.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_mzloop.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_mzloop.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/estimate-resources_mzloop.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_mzloop.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_mzloop.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_mzloop.cpp -o estimate-resources_mzloop.qke
1.	<eof> parser at end of file
 #0 0x00006167f784d246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006167f784a9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007c360a082330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007c360a0dbb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007c360a08227e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007c360a0658ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007c360a06581b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007c360a078517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00006167f83f38fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00006167f83e24a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006167f83571fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00006167f84fd882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006167f84a3b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006167f84a4022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006167f84458a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006167f84179f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00006167f84f4fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00006167f83e1ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00006167f844ae0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00006167f8417a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00006167f85475e5 bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:425:22
#21 0x00006167f85499c1 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#22 0x00006167f81d3715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#23 0x00006167f816e6fb cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1413:14
#24 0x00006167f816e879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#25 0x00006167f8548f53 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool&&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#26 0x00006167f854796a bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:450:10
#27 0x00006167f85425d3 cudaq::details::QuakeBridgeVisitor::TraverseWhileStmt(clang::WhileStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:461:1
#28 0x00006167f844b8b6 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1541:1
#29 0x00006167f8417a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x00006167f85421db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#31 0x00006167f854250c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#32 0x00006167f844991b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#33 0x00006167f8417a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#34 0x00006167f84e92e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#35 0x00006167f83e1d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#36 0x00006167f83f6085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#37 0x00006167f8358c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#38 0x00006167f7774561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#39 0x00006167f77713b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#40 0x00006167f966dd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#41 0x00006167f8021689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#42 0x00006167f7fa08be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#43 0x00006167f966ab84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#44 0x00006167f9662ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#45 0x00006167f96666a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#46 0x00006167f966a0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#47 0x00006167f966a63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#48 0x00006167f7774dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#49 0x00006167f77734c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#50 0x00007c360a0671ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#51 0x00007c360a06728b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#52 0x00006167f77710a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 579482 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_mzloop.cpp -o estimate-resources_mzloop.qke"

--

********************
Testing:  0.. 10.. 20.. 30
FAIL: CUDAQ-Target :: execution/estimate-resources_sample-in-choice.cpp (122 of 353)
******************** TEST 'CUDAQ-Target :: execution/estimate-resources_sample-in-choice.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_sample-in-choice.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_sample-in-choice.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_sample-in-choice.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/estimate-resources_sample-in-choice.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/estimate-resources_sample-in-choice.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/estimate-resources_sample-in-choice.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_sample-in-choice.cpp -o estimate-resources_sample-in-choice.qke
1.	<eof> parser at end of file
 #0 0x000061f8e3723246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000061f8e37209de SignalHandler(int) Signals.cpp:0:0
 #2 0x000075039d943330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000075039d99cb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000075039d94327e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000075039d9268ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000075039d92681b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000075039d939517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000061f8e42c98fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000061f8e42b84a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000061f8e422d1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000061f8e43d3882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000061f8e4379b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000061f8e437a022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000061f8e431b8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000061f8e42ed9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000061f8e43cafad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000061f8e42b7ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000061f8e4320e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000061f8e42eda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000061f8e4418c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000061f8e431fa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000061f8e42eda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000061f8e44181db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000061f8e441850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000061f8e431f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x000061f8e42eda79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x000061f8e43bf2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000061f8e42b7d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x000061f8e42cc085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x000061f8e422ec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x000061f8e364a561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x000061f8e36473b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x000061f8e5543d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x000061f8e3ef7689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x000061f8e3e768be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x000061f8e5540b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x000061f8e5538ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x000061f8e553c6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x000061f8e55400b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x000061f8e554063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x000061f8e364adc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x000061f8e36494c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x000075039d9281ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x000075039d92828b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x000061f8e36470a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 580172 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/estimate-resources_sample-in-choice.cpp -o estimate-resources_sample-in-choice.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 
FAIL: CUDAQ-Target :: execution/mid_circuit_measurement_anyon.cpp (143 of 353)
******************** TEST 'CUDAQ-Target :: execution/mid_circuit_measurement_anyon.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  --target anyon --emulate /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_anyon.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_anyon.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_anyon.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_anyon.cpp
+ nvq++ --target anyon --emulate /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_anyon.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_anyon.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_anyon.cpp -o mid_circuit_measurement_anyon.qke
1.	<eof> parser at end of file
 #0 0x00005b0feb13e246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005b0feb13b9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007dcb8bf48330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007dcb8bfa1b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007dcb8bf4827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007dcb8bf2b8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007dcb8bf2b81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007dcb8bf3e517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005b0febce48fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005b0febcd34a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005b0febc481fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005b0febdee882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005b0febd94b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005b0febd95022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005b0febd368a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005b0febd089f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005b0febde5fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005b0febcd2ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005b0febd3be0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005b0febd08a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005b0febe33c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005b0febd3aa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005b0febd08a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005b0febe331db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005b0febe333d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005b0febe359e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005b0febac56a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005b0feba6229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005b0febe34abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005b0febe3354d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005b0febd3a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005b0febd08a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005b0febe3413f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005b0febe35b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005b0febac4715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005b0feba5f719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005b0feba5f879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005b0febe35211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005b0febe343b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005b0febe35c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005b0febac56a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005b0feba6229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005b0febe35387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005b0febe34642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005b0febd3a9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005b0febd08a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005b0febe331db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005b0febe3350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005b0febd3a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005b0febd08a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005b0febdda2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005b0febce701f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#52 0x00005b0febc49c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#53 0x00005b0feb065561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#54 0x00005b0feb0623b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#55 0x00005b0fecf5ed79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#56 0x00005b0feb912689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#57 0x00005b0feb8918be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#58 0x00005b0fecf5bb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#59 0x00005b0fecf53ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#60 0x00005b0fecf576a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#61 0x00005b0fecf5b0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#62 0x00005b0fecf5b63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#63 0x00005b0feb065dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#64 0x00005b0feb0644c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#65 0x00007dcb8bf2d1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#66 0x00007dcb8bf2d28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#67 0x00005b0feb0620a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 591915 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_anyon.cpp -o mid_circuit_measurement_anyon.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 
FAIL: CUDAQ-Target :: execution/mid_circuit_measurement_quantinuum.cpp (144 of 353)
******************** TEST 'CUDAQ-Target :: execution/mid_circuit_measurement_quantinuum.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_quantinuum.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_quantinuum.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_quantinuum.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_quantinuum.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_quantinuum.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_quantinuum.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_quantinuum.cpp -o mid_circuit_measurement_quantinuum.qke
1.	<eof> parser at end of file
 #0 0x00005aac64326246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005aac643239de SignalHandler(int) Signals.cpp:0:0
 #2 0x000075118b655330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000075118b6aeb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000075118b65527e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000075118b6388ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000075118b63881b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000075118b64b517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005aac64ecc8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005aac64ebb4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005aac64e301fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005aac64fd6882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005aac64f7cb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005aac64f7d022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005aac64f1e8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005aac64ef09f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005aac64fcdfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005aac64ebaea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005aac64f23e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005aac64ef0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005aac6501bc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005aac64f22a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005aac64ef0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005aac6501b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005aac6501b3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005aac6501d9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005aac64cad6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005aac64c4a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005aac6501cabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005aac6501b54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005aac64f2291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005aac64ef0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005aac6501c13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005aac6501db7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005aac64cac715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005aac64c47719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005aac64c47879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005aac6501d211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005aac6501c3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005aac6501dc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005aac64cad6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005aac64c4a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005aac6501d387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005aac6501c642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005aac64f229f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005aac64ef0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005aac6501b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005aac6501b50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005aac64f2291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005aac64ef0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005aac64fc22e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005aac64ecf01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#52 0x00005aac64e31c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#53 0x00005aac6424d561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#54 0x00005aac6424a3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#55 0x00005aac66146d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#56 0x00005aac64afa689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#57 0x00005aac64a798be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#58 0x00005aac66143b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#59 0x00005aac6613bec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#60 0x00005aac6613f6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#61 0x00005aac661430b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#62 0x00005aac6614363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#63 0x00005aac6424ddc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#64 0x00005aac6424c4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#65 0x000075118b63a1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#66 0x000075118b63a28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#67 0x00005aac6424a0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 592523 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_quantinuum.cpp -o mid_circuit_measurement_quantinuum.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 
FAIL: CUDAQ-Target :: execution/mid_circuit_measurement_sim.cpp (146 of 353)
******************** TEST 'CUDAQ-Target :: execution/mid_circuit_measurement_sim.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --enable-mlir  /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_sim.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_sim.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_sim.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_sim.cpp
+ nvq++ --enable-mlir /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_sim.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/mid_circuit_measurement_sim.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_sim.cpp -o mid_circuit_measurement_sim.qke
1.	<eof> parser at end of file
 #0 0x000057524c4f8246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000057524c4f59de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007586a87a2330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007586a87fbb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007586a87a227e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007586a87858ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007586a878581b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007586a8798517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000057524d09e8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000057524d08d4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057524d0021fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000057524d1a8882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000057524d14eb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000057524d14f022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000057524d0f08a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000057524d0c29f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000057524d19ffad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000057524d08cea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000057524d0f5e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000057524d0c2a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000057524d1edc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000057524d0f4a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000057524d0c2a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000057524d1ed1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000057524d1ed3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000057524d1ef9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000057524ce7f6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057524ce1c29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000057524d1eeabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000057524d1ed54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000057524d0f491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000057524d0c2a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000057524d1ee13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000057524d1efb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000057524ce7e715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000057524ce19719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000057524ce19879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000057524d1ef211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000057524d1ee3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000057524d1efc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000057524ce7f6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000057524ce1c29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000057524d1ef387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000057524d1ee642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000057524d0f49f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000057524d0c2a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000057524d1ed1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000057524d1ed50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000057524d0f491b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000057524d0c2a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000057524d1942e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000057524d0a101f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#52 0x000057524d003c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#53 0x000057524c41f561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#54 0x000057524c41c3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#55 0x000057524e318d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#56 0x000057524cccc689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#57 0x000057524cc4b8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#58 0x000057524e315b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#59 0x000057524e30dec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#60 0x000057524e3116a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#61 0x000057524e3150b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#62 0x000057524e31563b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#63 0x000057524c41fdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#64 0x000057524c41e4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#65 0x00007586a87871ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#66 0x00007586a878728b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#67 0x000057524c41c0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 592773 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/mid_circuit_measurement_sim.cpp -o mid_circuit_measurement_sim.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_break.cpp (152 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_break.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_break.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_break.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_break.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_break.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_break.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_break.cpp -o qir_cond_for_break.qke
1.	<eof> parser at end of file
 #0 0x000059e90496d246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000059e90496a9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079d753134330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079d75318db2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079d75313427e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079d7531178ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079d75311781b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079d75312a517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000059e9055138fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000059e9055024a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000059e9054771fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000059e90561d882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000059e9055c3b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000059e9055c4022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000059e9055658a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000059e9055379f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000059e905614fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000059e905501ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000059e90556ae0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000059e905537a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000059e905662c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000059e905569a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000059e905537a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000059e9056621db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000059e9056623d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000059e9056649e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000059e9052f46a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000059e90529129a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000059e905663abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000059e90566254d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000059e90556991b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000059e905537a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000059e90566313f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000059e905664b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000059e9052f3715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000059e90528e719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000059e90528e879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000059e905664211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000059e9056633b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000059e905664c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000059e9052f46a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000059e90529129a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000059e905664387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000059e905663642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000059e9055699f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000059e905537a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000059e9056621db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000059e90566250c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000059e90556991b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000059e905537a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000059e9056092e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000059e905501d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000059e905516085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000059e905478c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000059e904894561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000059e9048913b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000059e90678dd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000059e905141689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000059e9050c08be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000059e90678ab84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000059e906782ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000059e9067866a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000059e90678a0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000059e90678a63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000059e904894dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000059e9048934c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000079d7531191ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000079d75311928b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000059e9048910a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 594633 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_break.cpp -o qir_cond_for_break.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-1.cpp (154 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-1.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-1.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-1.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-1.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-1.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-1.cpp -o qir_cond_for_loop-1.qke
1.	<eof> parser at end of file
 #0 0x0000630f686e9246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000630f686e69de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007c269d039330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007c269d092b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007c269d03927e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007c269d01c8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007c269d01c81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007c269d02f517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000630f6928f8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000630f6927e4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000630f691f31fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000630f69399882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000630f6933fb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000630f69340022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000630f692e18a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000630f692b39f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000630f69390fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000630f6927dea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000630f692e6e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000630f692b3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000630f693dec03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000630f692e5a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000630f692b3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000630f693de1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000630f693de3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000630f693e09e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x0000630f690706a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x0000630f6900d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000630f693dfabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000630f693de54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x0000630f692e591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000630f692b3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000630f693df13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000630f693e0b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x0000630f6906f715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000630f6900a719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000630f6900a879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000630f693e0211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000630f693df3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000630f693e0c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x0000630f690706a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x0000630f6900d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000630f693e0387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000630f693df642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x0000630f692e59f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000630f692b3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000630f693de1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000630f693de50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x0000630f692e591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000630f692b3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000630f693852e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x0000630f6927dd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000630f69292085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x0000630f691f4c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000630f68610561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000630f6860d3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000630f6a509d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000630f68ebd689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x0000630f68e3c8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000630f6a506b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000630f6a4feec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000630f6a5026a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000630f6a5060b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000630f6a50663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000630f68610dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000630f6860f4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007c269d01e1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007c269d01e28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000630f6860d0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 594779 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-1.cpp -o qir_cond_for_loop-1.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-2.cpp (155 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-2.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-2.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-2.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-2.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-2.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-2.cpp -o qir_cond_for_loop-2.qke
1.	<eof> parser at end of file
 #0 0x000059873ea70246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000059873ea6d9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007968041ea330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000796804243b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007968041ea27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007968041cd8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007968041cd81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007968041e0517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000059873f6168fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000059873f6054a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000059873f57a1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000059873f720882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000059873f6c6b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000059873f6c7022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000059873f6688a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000059873f63a9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000059873f717fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000059873f604ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000059873f66de0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000059873f63aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000059873f765c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000059873f66ca3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000059873f63aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000059873f7651db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000059873f7653d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000059873f7679e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000059873f3f76a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000059873f39429a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000059873f766abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000059873f76554d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000059873f66c91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000059873f63aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000059873f76613f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000059873f767b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000059873f3f6715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000059873f391719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000059873f391879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000059873f767211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000059873f7663b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000059873f767c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000059873f3f76a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000059873f39429a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000059873f767387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000059873f766642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000059873f66c9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000059873f63aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000059873f7651db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000059873f76550c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000059873f66c91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000059873f63aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000059873f70c2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000059873f604d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000059873f619085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000059873f57bc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000059873e997561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000059873e9943b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000598740890d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000059873f244689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000059873f1c38be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000059874088db84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000598740885ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005987408896a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000059874088d0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000059874088d63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000059873e997dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000059873e9964c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007968041cf1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007968041cf28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000059873e9940a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 595067 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-2.cpp -o qir_cond_for_loop-2.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-3.cpp (156 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-3.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-3.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-3.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-3.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-3.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-3.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-3.cpp.tmp
In file included from qir_cond_for_loop-3.cpp:15:
In file included from /workspaces/cuda-quantum/runtime/cudaq.h:11:
In file included from /workspaces/cuda-quantum/runtime/common/NoiseModel.h:11:
In file included from /workspaces/cuda-quantum/runtime/cudaq/host_config.h:11:
In file included from /../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:44:
In file included from /../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:3699:
In file included from /../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/specfun.h:43:
In file included from /../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:67:
In file included from /../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:85:
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_construct.h:115:4: error: no matching function for call to 'construct_at'
          std::construct_at(__p, std::forward<_Args>(__args)...);
          ^~~~~~~~~~~~~~~~~
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_uninitialized.h:643:8: note: in instantiation of function template specialization 'std::_Construct<cudaq::measure_result>' requested here
                std::_Construct(std::__addressof(*__cur));
                     ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_uninitialized.h:701:4: note: in instantiation of function template specialization 'std::__uninitialized_default_n_1<false>::__uninit_default_n<cudaq::measure_result *, unsigned long>' requested here
                 __uninit_default_n(__first, __n);
                 ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_uninitialized.h:779:19: note: in instantiation of function template specialization 'std::__uninitialized_default_n<cudaq::measure_result *, unsigned long>' requested here
    { return std::__uninitialized_default_n(__first, __n); }
                  ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1718:9: note: in instantiation of function template specialization 'std::__uninitialized_default_n_a<cudaq::measure_result *, unsigned long, cudaq::measure_result>' requested here
          std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
               ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:558:9: note: in instantiation of member function 'std::vector<cudaq::measure_result>::_M_default_initialize' requested here
      { _M_default_initialize(__n); }
        ^
qir_cond_for_loop-3.cpp:22:40: note: in instantiation of member function 'std::vector<cudaq::measure_result>::vector' requested here
    std::vector<cudaq::measure_result> resultVector(n_iter);
                                       ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_construct.h:94:5: note: candidate template ignored: substitution failure [with _Tp = cudaq::measure_result, _Args = <>]: no matching constructor for initialization of 'cudaq::measure_result'
    construct_at(_Tp* __location, _Args&&... __args)
    ^
/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_construct.h:119:25: error: no matching constructor for initialization of 'cudaq::measure_result'
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
                        ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:57:3: note: candidate constructor not viable: requires single argument 'res', but no arguments were provided
  measure_result(int res) : result(res) {}
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:47:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 0 were provided
class measure_result {
      ^
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:47:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 0 were provided
/workspaces/cuda-quantum/runtime/cudaq/qis/execution_manager.h:56:3: note: candidate constructor not viable: requires 2 arguments, but 0 were provided
  measure_result(int res, std::size_t id) : result(res), uniqueId(id) {}
  ^
error: C++ source has errors. nvq++ cannot proceed.
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-3.cpp -o qir_cond_for_loop-3.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-4.cpp (158 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-4.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-4.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-4.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-4.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-4.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-4.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-4.cpp.tmp
loc("qir_cond_for_loop-4.cpp":25:25):error: /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2274: not yet implemented: unknown function, , in cudaq namespace
LLVM ERROR: fatal error, aborting.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-4.cpp -o qir_cond_for_loop-4.qke
1.	<eof> parser at end of file
 #0 0x0000582b2d2d2246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000582b2d2cf9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007868f4dda330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007868f4e33b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007868f4dda27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007868f4dbd8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000582b2d23c2e3 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe92e3)
 #7 0x0000582b2d23c4fe (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe94fe)
 #8 0x0000582b2df70ef5 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2d1def5)
 #9 0x0000582b2df884cb cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2276:3
#10 0x0000582b2df28b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#11 0x0000582b2df29022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#12 0x0000582b2deca8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#13 0x0000582b2de9c9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#14 0x0000582b2df79fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#15 0x0000582b2de66ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#16 0x0000582b2decfe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#17 0x0000582b2de9ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#18 0x0000582b2df246ce clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2845:1
#19 0x0000582b2df7b48e cudaq::details::QuakeBridgeVisitor::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:785:40
#20 0x0000582b2decf86f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:783:1
#21 0x0000582b2de9ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#22 0x0000582b2dfc71db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#23 0x0000582b2dfc73d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#24 0x0000582b2dfc99e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#25 0x0000582b2dc596a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#26 0x0000582b2dbf629a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#27 0x0000582b2dfc8abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#28 0x0000582b2dfc754d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#29 0x0000582b2dece91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#30 0x0000582b2de9ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#31 0x0000582b2dfc813f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#32 0x0000582b2dfc9b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#33 0x0000582b2dc58715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#34 0x0000582b2dbf3719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#35 0x0000582b2dbf3879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#36 0x0000582b2dfc9211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#37 0x0000582b2dfc83b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#38 0x0000582b2dfc9c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#39 0x0000582b2dc596a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#40 0x0000582b2dbf629a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#41 0x0000582b2dfc9387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#42 0x0000582b2dfc8642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#43 0x0000582b2dece9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#44 0x0000582b2de9ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#45 0x0000582b2dfc71db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#46 0x0000582b2dfc750c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#47 0x0000582b2dece91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#48 0x0000582b2de9ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x0000582b2df6e2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#50 0x0000582b2de66d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#51 0x0000582b2de7b085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#52 0x0000582b2ddddc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#53 0x0000582b2d1f9561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#54 0x0000582b2d1f63b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#55 0x0000582b2f0f2d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#56 0x0000582b2daa6689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#57 0x0000582b2da258be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#58 0x0000582b2f0efb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#59 0x0000582b2f0e7ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#60 0x0000582b2f0eb6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#61 0x0000582b2f0ef0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#62 0x0000582b2f0ef63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#63 0x0000582b2d1f9dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#64 0x0000582b2d1f84c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#65 0x00007868f4dbf1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#66 0x00007868f4dbf28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#67 0x0000582b2d1f60a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 595542 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-4.cpp -o qir_cond_for_loop-4.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-5.cpp (159 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-5.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-5.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-5.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-5.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-5.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-5.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-5.cpp.tmp
loc("qir_cond_for_loop-5.cpp":27:24):error: /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2274: not yet implemented: unknown function, , in cudaq namespace
LLVM ERROR: fatal error, aborting.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-5.cpp -o qir_cond_for_loop-5.qke
1.	<eof> parser at end of file
 #0 0x00005fb02267f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005fb02267c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007b8fa824b330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007b8fa82a4b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007b8fa824b27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007b8fa822e8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00005fb0225e92e3 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe92e3)
 #7 0x00005fb0225e94fe (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe94fe)
 #8 0x00005fb02331def5 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2d1def5)
 #9 0x00005fb0233354cb cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2276:3
#10 0x00005fb0232d5b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#11 0x00005fb0232d6022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#12 0x00005fb0232778a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#13 0x00005fb0232499f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#14 0x00005fb023326fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#15 0x00005fb023213ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#16 0x00005fb02327ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#17 0x00005fb023249a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#18 0x00005fb0232d16ce clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2845:1
#19 0x00005fb02332848e cudaq::details::QuakeBridgeVisitor::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:785:40
#20 0x00005fb02327c86f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:783:1
#21 0x00005fb023249a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#22 0x00005fb0233741db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#23 0x00005fb0233743d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#24 0x00005fb0233769e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#25 0x00005fb0230066a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#26 0x00005fb022fa329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#27 0x00005fb023375abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#28 0x00005fb02337454d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#29 0x00005fb02327b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#30 0x00005fb023249a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#31 0x00005fb02337513f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#32 0x00005fb023376b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#33 0x00005fb023005715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#34 0x00005fb022fa0719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#35 0x00005fb022fa0879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#36 0x00005fb023376211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#37 0x00005fb0233753b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#38 0x00005fb023376c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#39 0x00005fb0230066a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#40 0x00005fb022fa329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#41 0x00005fb023376387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#42 0x00005fb023375642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#43 0x00005fb02327b9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#44 0x00005fb023249a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#45 0x00005fb0233741db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#46 0x00005fb02337450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#47 0x00005fb02327b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#48 0x00005fb023249a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x00005fb02331b2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#50 0x00005fb023213d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#51 0x00005fb023228085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#52 0x00005fb02318ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#53 0x00005fb0225a6561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#54 0x00005fb0225a33b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#55 0x00005fb02449fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#56 0x00005fb022e53689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#57 0x00005fb022dd28be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#58 0x00005fb02449cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#59 0x00005fb024494ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#60 0x00005fb0244986a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#61 0x00005fb02449c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#62 0x00005fb02449c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#63 0x00005fb0225a6dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#64 0x00005fb0225a54c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#65 0x00007b8fa82301ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#66 0x00007b8fa823028b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#67 0x00005fb0225a30a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 595611 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-5.cpp -o qir_cond_for_loop-5.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_cond_for_loop-6.cpp (160 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_cond_for_loop-6.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-6.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-6.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-6.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-6.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-6.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_cond_for_loop-6.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-6.cpp -o qir_cond_for_loop-6.qke
1.	<eof> parser at end of file
 #0 0x000057361fb45246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000057361fb429de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000773e84520330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000773e84579b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000773e8452027e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000773e845038ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000773e8450381b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000773e84516517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005736206eb8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005736206da4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057362064f1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005736207f5882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000057362079bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000057362079c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000057362073d8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000057362070f9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005736207ecfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005736206d9ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000573620742e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000057362083ac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000573620741a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000057362083a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000057362083a3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000057362083c9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005736204cc6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057362046929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000057362083babd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000057362083a54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000057362074191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000057362083a6d4 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:475:11
#33 0x000057362083ca4e void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005736204cb715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000573620469cfb cudaq::cc::IfOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1971:18
#36 0x000057362083be70 cudaq::cc::IfOp mlir::OpBuilder::create<cudaq::cc::IfOp, mlir::TypeRange, mlir::Value, cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(mlir::Location, mlir::TypeRange&&, mlir::Value&&, cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#37 0x000057362083ae83 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:527:10
#38 0x0000573620741a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#39 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#40 0x000057362083a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#41 0x000057362083a3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#42 0x000057362083c9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#43 0x00005736204cc6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#44 0x000057362046929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#45 0x000057362083babd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#46 0x000057362083a54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#47 0x000057362074191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#48 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#49 0x000057362083b13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#50 0x000057362083cb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#51 0x00005736204cb715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#52 0x0000573620466719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#53 0x0000573620466879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#54 0x000057362083c211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#55 0x000057362083b3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#56 0x000057362083cc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#57 0x00005736204cc6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#58 0x000057362046929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#59 0x000057362083c387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#60 0x000057362083b642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#61 0x00005736207419f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#62 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#63 0x000057362083a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#64 0x000057362083a50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#65 0x000057362074191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#66 0x000057362070fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#67 0x00005736207e12e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#68 0x00005736206d9d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#69 0x00005736206ee085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#70 0x0000573620650c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#71 0x000057361fa6c561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#72 0x000057361fa693b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#73 0x0000573621965d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#74 0x0000573620319689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#75 0x00005736202988be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#76 0x0000573621962b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#77 0x000057362195aec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#78 0x000057362195e6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#79 0x00005736219620b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#80 0x000057362196263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#81 0x000057361fa6cdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#82 0x000057361fa6b4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#83 0x0000773e845051ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#84 0x0000773e8450528b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#85 0x000057361fa690a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 596127 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_cond_for_loop-6.cpp -o qir_cond_for_loop-6.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40
FAIL: CUDAQ-Target :: execution/qir_if_base.cpp (161 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_if_base.cpp' FAILED ********************
Exit Code: 1

Command Output (stdout):
--
/workspaces/cuda-quantum/build/Debug/bin/cudaq-target-conf --arg=base64_ -o nvqppTargetBuildConfig.XoBQBb /workspaces/cuda-quantum/build/Debug/targets/ionq.yml
/usr/local/llvm/bin/clang++ -std=c++20 -DNVQPP_TARGET_BACKEND_CONFIG="ionq;emulate;true;disable_qubit_mapping;false" -o nvqppGenTargetBackend.KzTivm.o -c -x c++ /workspaces/cuda-quantum/build/Debug/targets/backendConfig.cpp
/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp -o qir_if_base.qke

--
Command Output (stderr):
--
RUN: at line 10: nvq++  -v /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_if_base.cpp.tmp --target ionq --emulate && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_if_base.cpp.tmp |& /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp
+ nvq++ -v /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_if_base.cpp.tmp --target ionq --emulate
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp -o qir_if_base.qke
1.	<eof> parser at end of file
 #0 0x00005fd471e22246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005fd471e1f9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000780fbb9d5330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000780fbba2eb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000780fbb9d527e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000780fbb9b88ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000780fbb9b881b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000780fbb9cb517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005fd4729c88fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005fd4729b74a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005fd47292c1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005fd472ad2882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005fd472a78b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005fd472a79022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005fd472a1a8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005fd4729ec9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005fd472ac9fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005fd4729b6ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005fd472a1fe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005fd4729eca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005fd472b17c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005fd472a1ea3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005fd4729eca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005fd472b171db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005fd472b1750c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x00005fd472a1e91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x00005fd4729eca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x00005fd472abe2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x00005fd4729cb01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#29 0x00005fd47292dc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#30 0x00005fd471d49561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#31 0x00005fd471d463b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#32 0x00005fd473c42d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#33 0x00005fd4725f6689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#34 0x00005fd4725758be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#35 0x00005fd473c3fb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#36 0x00005fd473c37ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#37 0x00005fd473c3b6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#38 0x00005fd473c3f0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#39 0x00005fd473c3f63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#40 0x00005fd471d49dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#41 0x00005fd471d484c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#42 0x0000780fbb9ba1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#43 0x0000780fbb9ba28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#44 0x00005fd471d460a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 596175 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_if_base.cpp -o qir_if_base.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.
FAIL: CUDAQ-Target :: execution/qir_simple_cond-1.cpp (166 of 353)
******************** TEST 'CUDAQ-Target :: execution/qir_simple_cond-1.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_simple_cond-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_simple_cond-1.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_simple_cond-1.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/qir_simple_cond-1.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/qir_simple_cond-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qir_simple_cond-1.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_simple_cond-1.cpp -o qir_simple_cond-1.qke
1.	<eof> parser at end of file
 #0 0x0000640fa5a07246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000640fa5a049de SignalHandler(int) Signals.cpp:0:0
 #2 0x000075e66c89f330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000075e66c8f8b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000075e66c89f27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000075e66c8828ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000075e66c88281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000075e66c895517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000640fa65ad8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000640fa659c4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000640fa65111fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000640fa66b7882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000640fa665db72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000640fa665e022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000640fa65ff8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000640fa65d19f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000640fa66aefad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000640fa659bea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000640fa6604e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000640fa65d1a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000640fa66fcc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000640fa6603a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000640fa65d1a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000640fa66fc1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000640fa66fc50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x0000640fa660391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x0000640fa65d1a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x0000640fa66a32e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x0000640fa659bd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x0000640fa65b0085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x0000640fa6512c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x0000640fa592e561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x0000640fa592b3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x0000640fa7827d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x0000640fa61db689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x0000640fa615a8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x0000640fa7824b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x0000640fa781cec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x0000640fa78206a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x0000640fa78240b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x0000640fa782463b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x0000640fa592edc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x0000640fa592d4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x000075e66c8841ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x000075e66c88428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x0000640fa592b0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 598130 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qir_simple_cond-1.cpp -o qir_simple_cond-1.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40..
FAIL: CUDAQ-Target :: execution/qubit_management_bug_qids-2.cpp (172 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_bug_qids-2.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids-2.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids-2.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids-2.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids-2.cpp -o qubit_management_bug_qids-2.qke
1.	<eof> parser at end of file
 #0 0x000065175ab0e246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000065175ab0b9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079bcb7c57330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079bcb7cb0b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079bcb7c5727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079bcb7c3a8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079bcb7c3a81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079bcb7c4d517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000065175b6b48fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000065175b6a34a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000065175b6181fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000065175b7be882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000065175b764b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000065175b765022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000065175b7068a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000065175b6d89f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000065175b7b5fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000065175b6a2ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000065175b70be0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000065175b6d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000065175b7ab5bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x000065175b6b71b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x000065175b74f613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x000065175b8003b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x000065175b70a9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x000065175b6d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x000065175b8031db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x000065175b80350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x000065175b70a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x000065175b6d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x000065175b7aa2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x000065175b6a2d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x000065175b6b7085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x000065175b619c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x000065175aa35561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#35 0x000065175aa323b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#36 0x000065175c92ed79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#37 0x000065175b2e2689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#38 0x000065175b2618be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#39 0x000065175c92bb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#40 0x000065175c923ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#41 0x000065175c9276a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#42 0x000065175c92b0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#43 0x000065175c92b63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#44 0x000065175aa35dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#45 0x000065175aa344c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#46 0x000079bcb7c3c1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#47 0x000079bcb7c3c28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#48 0x000065175aa320a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 600134 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids-2.cpp -o qubit_management_bug_qids-2.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40..
FAIL: CUDAQ-Target :: execution/qubit_management_bug_qids.cpp (173 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_bug_qids.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_bug_qids.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids.cpp -o qubit_management_bug_qids.qke
1.	<eof> parser at end of file
 #0 0x00005f95ca06f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005f95ca06c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x000073b752c56330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000073b752cafb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000073b752c5627e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000073b752c398ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000073b752c3981b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000073b752c4c517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005f95cac158fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005f95cac044a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005f95cab791fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005f95cad1f882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005f95cacc5b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005f95cacc6022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005f95cac678a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005f95cac399f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005f95cad16fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005f95cac03ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005f95cac6ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005f95cac39a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005f95cad0c5bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005f95cac181b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005f95cacb0613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005f95cad613b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005f95cac6b9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005f95cac39a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005f95cad641db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005f95cad6450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x00005f95cac6b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x00005f95cac39a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x00005f95cad0b2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x00005f95cac03d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x00005f95cac18085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x00005f95cab7ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x00005f95c9f96561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#35 0x00005f95c9f933b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#36 0x00005f95cbe8fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#37 0x00005f95ca843689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#38 0x00005f95ca7c28be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#39 0x00005f95cbe8cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#40 0x00005f95cbe84ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#41 0x00005f95cbe886a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#42 0x00005f95cbe8c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#43 0x00005f95cbe8c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#44 0x00005f95c9f96dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#45 0x00005f95c9f954c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#46 0x000073b752c3b1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#47 0x000073b752c3b28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#48 0x00005f95c9f930a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 600375 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_bug_qids.cpp -o qubit_management_bug_qids.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40..
FAIL: CUDAQ-Target :: execution/qubit_management_if-2.cpp (175 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_if-2.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-2.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-2.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-2.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-2.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-2.cpp -o qubit_management_if-2.qke
1.	<eof> parser at end of file
 #0 0x0000637e0151f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000637e0151c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007e612c76c330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007e612c7c5b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007e612c76c27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007e612c74f8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007e612c74f81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007e612c762517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000637e020c58fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000637e020b44a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000637e020291fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000637e021cf882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000637e02175b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000637e02176022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000637e021178a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000637e020e99f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000637e021c6fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000637e020b3ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000637e0211ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000637e020e9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000637e021bc5bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x0000637e020c81b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x0000637e02160613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x0000637e022113b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x0000637e0211b9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x0000637e020e9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x0000637e022141db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x0000637e0221450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x0000637e0211b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x0000637e020e9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x0000637e021bb2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x0000637e020b3d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x0000637e020c8085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x0000637e0202ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x0000637e01446561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#35 0x0000637e014433b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#36 0x0000637e0333fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#37 0x0000637e01cf3689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#38 0x0000637e01c728be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#39 0x0000637e0333cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#40 0x0000637e03334ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#41 0x0000637e033386a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#42 0x0000637e0333c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#43 0x0000637e0333c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#44 0x0000637e01446dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#45 0x0000637e014454c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#46 0x00007e612c7511ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#47 0x00007e612c75128b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#48 0x0000637e014430a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 600989 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-2.cpp -o qubit_management_if-2.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40..
FAIL: CUDAQ-Target :: execution/qubit_management_if-1.cpp (176 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_if-1.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 13: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-1.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-1.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-1.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-1.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-1.cpp -o qubit_management_if-1.qke
1.	<eof> parser at end of file
 #0 0x0000577b1d625246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000577b1d6229de SignalHandler(int) Signals.cpp:0:0
 #2 0x000075007d06d330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000075007d0c6b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000075007d06d27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000075007d0508ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000075007d05081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000075007d063517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000577b1e1cb8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000577b1e1ba4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000577b1e12f1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000577b1e2d5882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000577b1e27bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000577b1e27c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000577b1e21d8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000577b1e1ef9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000577b1e2ccfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000577b1e1b9ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000577b1e222e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000577b1e1efa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000577b1e2c25bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x0000577b1e1ce1b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x0000577b1e266613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x0000577b1e3173b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x0000577b1e2219ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x0000577b1e1efa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x0000577b1e31a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x0000577b1e31a50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x0000577b1e22191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x0000577b1e1efa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x0000577b1e2c12e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x0000577b1e1b9d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x0000577b1e1ce085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x0000577b1e130c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x0000577b1d54c561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#35 0x0000577b1d5493b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#36 0x0000577b1f445d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#37 0x0000577b1ddf9689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#38 0x0000577b1dd788be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#39 0x0000577b1f442b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#40 0x0000577b1f43aec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#41 0x0000577b1f43e6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#42 0x0000577b1f4420b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#43 0x0000577b1f44263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#44 0x0000577b1d54cdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#45 0x0000577b1d54b4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#46 0x000075007d0521ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#47 0x000075007d05228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#48 0x0000577b1d5490a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 600918 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-1.cpp -o qubit_management_if-1.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40..
FAIL: CUDAQ-Target :: execution/qubit_management_if-3.cpp (177 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_if-3.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-3.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-3.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-3.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-3.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-3.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-3.cpp -o qubit_management_if-3.qke
1.	<eof> parser at end of file
 #0 0x00005e13d4b6a246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005e13d4b679de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007a777a948330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007a777a9a1b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007a777a94827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007a777a92b8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007a777a92b81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007a777a93e517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005e13d57108fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005e13d56ff4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005e13d56741fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005e13d581a882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005e13d57c0b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005e13d57c1022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005e13d57628a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005e13d57349f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005e13d5811fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005e13d56feea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005e13d5767e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005e13d5734a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005e13d58075bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005e13d57131b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005e13d57ab613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005e13d585c3b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005e13d57669ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005e13d5734a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005e13d585f1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005e13d585f50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x00005e13d576691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x00005e13d5734a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x00005e13d58062e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x00005e13d56fed63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#32 0x00005e13d5713085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#33 0x00005e13d5675c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#34 0x00005e13d4a91561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#35 0x00005e13d4a8e3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#36 0x00005e13d698ad79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#37 0x00005e13d533e689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#38 0x00005e13d52bd8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#39 0x00005e13d6987b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#40 0x00005e13d697fec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#41 0x00005e13d69836a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#42 0x00005e13d69870b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#43 0x00005e13d698763b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#44 0x00005e13d4a91dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#45 0x00005e13d4a904c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#46 0x00007a777a92d1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#47 0x00007a777a92d28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#48 0x00005e13d4a8e0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 601236 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-3.cpp -o qubit_management_if-3.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 
FAIL: CUDAQ-Target :: execution/qubit_management_if_classical.cpp (179 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_if_classical.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if_classical.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if_classical.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if_classical.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if_classical.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if_classical.cpp.tmp
qubit_management_if_classical.cpp:14:3: error: kernel result type not supported
  __qpu__ auto operator()() {
  ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:25:17: note: expanded from macro '__qpu__'
#define __qpu__ __attribute__((annotate("quantum")))
                ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/targettests/execution/qubit_management_if_classical.cpp
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if_classical.cpp -o qubit_management_if_classical.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 
FAIL: CUDAQ-Target :: execution/qubit_management_if-5.cpp (180 of 353)
******************** TEST 'CUDAQ-Target :: execution/qubit_management_if-5.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-5.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-5.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-5.cpp.tmp
+ nvq++ --target opt-test --target-option dep-analysis,qpp /workspaces/cuda-quantum/targettests/execution/qubit_management_if-5.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/qubit_management_if-5.cpp.tmp
loc("qubit_management_if-5.cpp":22:13):error: /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2274: not yet implemented: unknown function, , in cudaq namespace
LLVM ERROR: fatal error, aborting.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-5.cpp -o qubit_management_if-5.qke
1.	<eof> parser at end of file
 #0 0x0000560a5c334246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000560a5c3319de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007e72f5d81330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007e72f5ddab2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007e72f5d8127e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007e72f5d648ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000560a5c29e2e3 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe92e3)
 #7 0x0000560a5c29e4fe (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fe94fe)
 #8 0x0000560a5cfd2ef5 (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2d1def5)
 #9 0x0000560a5cfea4cb cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:2276:3
#10 0x0000560a5cf8ab72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#11 0x0000560a5cf8b022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#12 0x0000560a5cf2c8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#13 0x0000560a5cefe9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#14 0x0000560a5cfdbfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#15 0x0000560a5cec8ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#16 0x0000560a5cf31e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#17 0x0000560a5cefea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#18 0x0000560a5cf866ce clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2845:1
#19 0x0000560a5cfdd48e cudaq::details::QuakeBridgeVisitor::TraverseBinaryOperator(clang::BinaryOperator*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:785:40
#20 0x0000560a5cf3186f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:783:1
#21 0x0000560a5cefea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#22 0x0000560a5d0291db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#23 0x0000560a5d0293d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#24 0x0000560a5d02b9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#25 0x0000560a5ccbb6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#26 0x0000560a5cc5829a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#27 0x0000560a5d02aabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#28 0x0000560a5d02954d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#29 0x0000560a5cf3091b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#30 0x0000560a5cefea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#31 0x0000560a5d0296d4 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:475:11
#32 0x0000560a5d02ba4e void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#33 0x0000560a5ccba715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#34 0x0000560a5cc58cfb cudaq::cc::IfOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::Value, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1971:18
#35 0x0000560a5d02aca4 cudaq::cc::IfOp mlir::OpBuilder::create<cudaq::cc::IfOp, mlir::TypeRange, mlir::Value, cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&), cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(mlir::Location, mlir::TypeRange&&, mlir::Value&&, cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&, cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#36 0x0000560a5d029dee cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:520:31
#37 0x0000560a5cf30a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#38 0x0000560a5cefea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#39 0x0000560a5d0291db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#40 0x0000560a5d02950c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#41 0x0000560a5cf3091b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#42 0x0000560a5cefea79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#43 0x0000560a5cfd02e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#44 0x0000560a5cec8d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#45 0x0000560a5cedd085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#46 0x0000560a5ce3fc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#47 0x0000560a5c25b561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#48 0x0000560a5c2583b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#49 0x0000560a5e154d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#50 0x0000560a5cb08689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#51 0x0000560a5ca878be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#52 0x0000560a5e151b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#53 0x0000560a5e149ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#54 0x0000560a5e14d6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#55 0x0000560a5e1510b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#56 0x0000560a5e15163b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#57 0x0000560a5c25bdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#58 0x0000560a5c25a4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#59 0x00007e72f5d661ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#60 0x00007e72f5d6628b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#61 0x0000560a5c2580a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 601732 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP64 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/qubit_management_if-5.cpp -o qubit_management_if-5.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.
FAIL: CUDAQ-Target :: execution/test-6.cpp (201 of 353)
******************** TEST 'CUDAQ-Target :: execution/test-6.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/test-6.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test-6.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test-6.cpp.tmp | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/test-6.cpp
+ nvq++ --target quantinuum --emulate /workspaces/cuda-quantum/targettests/execution/test-6.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test-6.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/test-6.cpp -o test-6.qke
1.	<eof> parser at end of file
 #0 0x00005fcbf31a3246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005fcbf31a09de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007d8847848330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007d88478a1b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007d884784827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007d884782b8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007d884782b81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007d884783e517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005fcbf3d498fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005fcbf3d384a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005fcbf3cad1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005fcbf3e53882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005fcbf3df9b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005fcbf3dfa022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005fcbf3d9b8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005fcbf3d6d9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005fcbf3e4afad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005fcbf3d37ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005fcbf3da0e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005fcbf3d6da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005fcbf3e405bd cudaq::details::QuakeBridgeVisitor::TraverseVarDecl(clang::VarDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:656:11
#21 0x00005fcbf3d4c1b7 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:485:1
#22 0x00005fcbf3de4613 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:2370:1
#23 0x00005fcbf3e953b3 cudaq::details::QuakeBridgeVisitor::TraverseDeclStmt(clang::DeclStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:46:39
#24 0x00005fcbf3d9f9ab clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:97:1
#25 0x00005fcbf3d6da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#26 0x00005fcbf3e981db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#27 0x00005fcbf3e9850c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#28 0x00005fcbf3d9f91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#29 0x00005fcbf3d6da79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#30 0x00005fcbf3e3f2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#31 0x00005fcbf3d4c01f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:433:1
#32 0x00005fcbf3caec1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#33 0x00005fcbf30ca561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#34 0x00005fcbf30c73b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#35 0x00005fcbf4fc3d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#36 0x00005fcbf3977689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#37 0x00005fcbf38f68be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#38 0x00005fcbf4fc0b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#39 0x00005fcbf4fb8ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#40 0x00005fcbf4fbc6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#41 0x00005fcbf4fc00b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#42 0x00005fcbf4fc063b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#43 0x00005fcbf30cadc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#44 0x00005fcbf30c94c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#45 0x00007d884782d1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#46 0x00007d884782d28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#47 0x00005fcbf30c70a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 621914 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/test-6.cpp -o test-6.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.
FAIL: CUDAQ-Target :: execution/test_conditional_on_function.cpp (202 of 353)
******************** TEST 'CUDAQ-Target :: execution/test_conditional_on_function.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  /workspaces/cuda-quantum/targettests/execution/test_conditional_on_function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_function.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_function.cpp.tmp 2>&1 | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/test_conditional_on_function.cpp -check-prefix=FAIL
+ nvq++ /workspaces/cuda-quantum/targettests/execution/test_conditional_on_function.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_function.cpp.tmp
test_conditional_on_function.cpp:13:1: error: kernel result type not supported
__qpu__ auto measure(cudaq::qubit &r) { return mz(r); }
^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:25:17: note: expanded from macro '__qpu__'
#define __qpu__ __attribute__((annotate("quantum")))
                ^
1 error generated.
error: could not translate file '/workspaces/cuda-quantum/targettests/execution/test_conditional_on_function.cpp
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/test_conditional_on_function.cpp -o test_conditional_on_function.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.
FAIL: CUDAQ-Target :: execution/test_conditional_on_measure.cpp (203 of 353)
******************** TEST 'CUDAQ-Target :: execution/test_conditional_on_measure.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  /workspaces/cuda-quantum/targettests/execution/test_conditional_on_measure.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_measure.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_measure.cpp.tmp 2>&1 | /usr/local/llvm/bin/FileCheck /workspaces/cuda-quantum/targettests/execution/test_conditional_on_measure.cpp -check-prefix=FAIL
+ nvq++ /workspaces/cuda-quantum/targettests/execution/test_conditional_on_measure.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/test_conditional_on_measure.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/test_conditional_on_measure.cpp -o test_conditional_on_measure.qke
1.	<eof> parser at end of file
 #0 0x000061f477897246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000061f4778949de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000784d76c9f330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000784d76cf8b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000784d76c9f27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000784d76c828ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000784d76c8281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000784d76c95517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000061f47843d8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000061f47842c4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000061f4783a11fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000061f478547882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000061f4784edb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000061f4784ee022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000061f47848f8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000061f4784619f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000061f47853efad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000061f47842bea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000061f478494e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000061f478461a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000061f47858cc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000061f478493a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000061f478461a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000061f47858c1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000061f47858c50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#25 0x000061f47849391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#26 0x000061f478461a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#27 0x000061f4785332e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#28 0x000061f47842bd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#29 0x000061f478440085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#30 0x000061f4783a2c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#31 0x000061f4777be561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#32 0x000061f4777bb3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#33 0x000061f4796b7d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#34 0x000061f47806b689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#35 0x000061f477fea8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#36 0x000061f4796b4b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#37 0x000061f4796acec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#38 0x000061f4796b06a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#39 0x000061f4796b40b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#40 0x000061f4796b463b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#41 0x000061f4777bedc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#42 0x000061f4777bd4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#43 0x0000784d76c841ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#44 0x0000784d76c8428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#45 0x000061f4777bb0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 622359 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/test_conditional_on_measure.cpp -o test_conditional_on_measure.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.
FAIL: CUDAQ-Target :: execution/to_integer.cpp (204 of 353)
******************** TEST 'CUDAQ-Target :: execution/to_integer.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 9: nvq++  /workspaces/cuda-quantum/targettests/execution/to_integer.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/to_integer.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/to_integer.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/execution/to_integer.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/execution/Output/to_integer.cpp.tmp
to_integer.cpp:70:14: error: no matching function for call to 'to_integer'
    auto i = cudaq::to_integer(firstTest);
             ^~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:864:21: note: candidate function not viable: no known conversion from 'vector<bool>' to 'const vector<measure_result>' for 1st argument
inline std::int64_t to_integer(const std::vector<measure_result> &bits) {
                    ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:874:21: note: candidate function not viable: no known conversion from 'std::vector<bool>' to 'const std::string' (aka 'const basic_string<char>') for 1st argument
inline std::int64_t to_integer(const std::string &arg) {
                    ^
to_integer.cpp:76:9: error: no matching function for call to 'to_integer'
    i = cudaq::to_integer(secondTest);
        ^~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:864:21: note: candidate function not viable: no known conversion from 'vector<bool>' to 'const vector<measure_result>' for 1st argument
inline std::int64_t to_integer(const std::vector<measure_result> &bits) {
                    ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:874:21: note: candidate function not viable: no known conversion from 'std::vector<bool>' to 'const std::string' (aka 'const basic_string<char>') for 1st argument
inline std::int64_t to_integer(const std::string &arg) {
                    ^
to_integer.cpp:82:9: error: no matching function for call to 'to_integer'
    i = cudaq::to_integer(thirdTest);
        ^~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:864:21: note: candidate function not viable: no known conversion from 'vector<bool>' to 'const vector<measure_result>' for 1st argument
inline std::int64_t to_integer(const std::vector<measure_result> &bits) {
                    ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:874:21: note: candidate function not viable: no known conversion from 'std::vector<bool>' to 'const std::string' (aka 'const basic_string<char>') for 1st argument
inline std::int64_t to_integer(const std::string &arg) {
                    ^
to_integer.cpp:88:9: error: no matching function for call to 'to_integer'
    i = cudaq::to_integer(fourthTest);
        ^~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:864:21: note: candidate function not viable: no known conversion from 'vector<bool>' to 'const vector<measure_result>' for 1st argument
inline std::int64_t to_integer(const std::vector<measure_result> &bits) {
                    ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:874:21: note: candidate function not viable: no known conversion from 'std::vector<bool>' to 'const std::string' (aka 'const basic_string<char>') for 1st argument
inline std::int64_t to_integer(const std::string &arg) {
                    ^
to_integer.cpp:94:9: error: no matching function for call to 'to_integer'
    i = cudaq::to_integer(fifthTest);
        ^~~~~~~~~~~~~~~~~
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:864:21: note: candidate function not viable: no known conversion from 'vector<bool>' to 'const vector<measure_result>' for 1st argument
inline std::int64_t to_integer(const std::vector<measure_result> &bits) {
                    ^
/workspaces/cuda-quantum/runtime/cudaq/qis/qubit_qis.h:874:21: note: candidate function not viable: no known conversion from 'std::vector<bool>' to 'const std::string' (aka 'const basic_string<char>') for 1st argument
inline std::int64_t to_integer(const std::string &arg) {
                    ^
error: C++ source has errors. nvq++ cannot proceed.
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/execution/to_integer.cpp -o to_integer.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50..
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop1.cpp (212 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop1.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop1.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop1.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop1.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop1.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop1.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop1.cpp -o branch-in-loop1.qke
1.	<eof> parser at end of file
 #0 0x000055e31f1ec246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000055e31f1e99de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000746e6f907330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000746e6f960b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000746e6f90727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000746e6f8ea8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000746e6f8ea81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000746e6f8fd517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000055e31fd928fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000055e31fd814a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000055e31fcf61fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000055e31fe9c882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000055e31fe42b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000055e31fe43022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000055e31fde48a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000055e31fdb69f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000055e31fe93fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000055e31fd80ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000055e31fde9e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000055e31fdb6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000055e31fee1c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000055e31fde8a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000055e31fdb6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000055e31fee11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000055e31fee13d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000055e31fee39e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000055e31fb736a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000055e31fb1029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000055e31fee2abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000055e31fee154d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000055e31fde891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000055e31fdb6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000055e31fee213f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000055e31fee3b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000055e31fb72715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000055e31fb0d719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000055e31fb0d879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000055e31fee3211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000055e31fee23b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000055e31fee3c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000055e31fb736a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000055e31fb1029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000055e31fee3387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000055e31fee2642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000055e31fde89f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000055e31fdb6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000055e31fee11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000055e31fee150c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000055e31fde891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000055e31fdb6a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000055e31fe882e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000055e31fd80d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000055e31fd95085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000055e31fcf7c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000055e31f113561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000055e31f1103b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000055e32100cd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000055e31f9c0689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000055e31f93f8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000055e321009b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000055e321001ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000055e3210056a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000055e3210090b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000055e32100963b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000055e31f113dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000055e31f1124c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000746e6f8ec1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000746e6f8ec28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000055e31f1100a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 627483 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop1.cpp -o branch-in-loop1.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop10.cpp (213 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop10.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop10.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop10.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop10.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop10.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop10.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop10.cpp -o branch-in-loop10.qke
1.	<eof> parser at end of file
 #0 0x000057ad19bac246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000057ad19ba99de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007d40f7be6330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007d40f7c3fb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007d40f7be627e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007d40f7bc98ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007d40f7bc981b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007d40f7bdc517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000057ad1a7528fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000057ad1a7414a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057ad1a6b61fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000057ad1a85c882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000057ad1a802b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000057ad1a803022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000057ad1a7a48a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000057ad1a7769f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000057ad1a853fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000057ad1a740ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000057ad1a7a9e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000057ad1a776a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000057ad1a8a1c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000057ad1a7a8a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000057ad1a776a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000057ad1a8a11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000057ad1a8a13d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000057ad1a8a39e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000057ad1a5336a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057ad1a4d029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000057ad1a8a2abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000057ad1a8a154d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000057ad1a7a891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000057ad1a776a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000057ad1a8a213f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000057ad1a8a3b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000057ad1a532715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000057ad1a4cd719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000057ad1a4cd879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000057ad1a8a3211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000057ad1a8a23b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000057ad1a8a3c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000057ad1a5336a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000057ad1a4d029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000057ad1a8a3387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000057ad1a8a2642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000057ad1a7a89f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000057ad1a776a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000057ad1a8a11db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000057ad1a8a150c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000057ad1a7a891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000057ad1a776a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000057ad1a8482e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000057ad1a740d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000057ad1a755085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000057ad1a6b7c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000057ad19ad3561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000057ad19ad03b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000057ad1b9ccd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000057ad1a380689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000057ad1a2ff8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000057ad1b9c9b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000057ad1b9c1ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000057ad1b9c56a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000057ad1b9c90b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000057ad1b9c963b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000057ad19ad3dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000057ad19ad24c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007d40f7bcb1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007d40f7bcb28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000057ad19ad00a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 628053 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop10.cpp -o branch-in-loop10.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop2.cpp (214 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop2.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop2.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop2.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop2.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop2.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop2.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop2.cpp -o branch-in-loop2.qke
1.	<eof> parser at end of file
 #0 0x000058ba006a2246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000058ba0069f9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000714ecde72330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000714ecdecbb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000714ecde7227e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000714ecde558ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000714ecde5581b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000714ecde68517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000058ba012488fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000058ba012374a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000058ba011ac1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000058ba01352882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000058ba012f8b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000058ba012f9022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000058ba0129a8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000058ba0126c9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000058ba01349fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000058ba01236ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000058ba0129fe0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000058ba0126ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000058ba01397c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000058ba0129ea3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000058ba0126ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000058ba013971db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000058ba013973d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000058ba013999e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000058ba010296a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000058ba00fc629a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000058ba01398abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000058ba0139754d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000058ba0129e91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000058ba0126ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000058ba0139813f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000058ba01399b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000058ba01028715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000058ba00fc3719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000058ba00fc3879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000058ba01399211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000058ba013983b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000058ba01399c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000058ba010296a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000058ba00fc629a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000058ba01399387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000058ba01398642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000058ba0129e9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000058ba0126ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000058ba013971db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000058ba0139750c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000058ba0129e91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000058ba0126ca79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000058ba0133e2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000058ba01236d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000058ba0124b085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000058ba011adc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000058ba005c9561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000058ba005c63b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000058ba024c2d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000058ba00e76689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000058ba00df58be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000058ba024bfb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000058ba024b7ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000058ba024bb6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000058ba024bf0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000058ba024bf63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000058ba005c9dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000058ba005c84c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000714ecde571ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000714ecde5728b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000058ba005c60a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 628617 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop2.cpp -o branch-in-loop2.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop3.cpp (217 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop3.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop3.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop3.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop3.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop3.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop3.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop3.cpp -o branch-in-loop3.qke
1.	<eof> parser at end of file
 #0 0x00005e1bec55a246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005e1bec5579de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007e6362cc4330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007e6362d1db2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007e6362cc427e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007e6362ca78ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007e6362ca781b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007e6362cba517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005e1bed1008fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005e1bed0ef4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005e1bed0641fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005e1bed20a882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005e1bed1b0b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005e1bed1b1022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005e1bed1528a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005e1bed1249f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005e1bed201fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005e1bed0eeea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005e1bed157e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005e1bed124a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005e1bed24fc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005e1bed156a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005e1bed124a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005e1bed24f1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005e1bed24f3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005e1bed2519e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005e1becee16a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005e1bece7e29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005e1bed250abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005e1bed24f54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005e1bed15691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005e1bed124a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005e1bed25013f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005e1bed251b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005e1becee0715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005e1bece7b719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005e1bece7b879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005e1bed251211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005e1bed2503b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005e1bed251c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005e1becee16a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005e1bece7e29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005e1bed251387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005e1bed250642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005e1bed1569f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005e1bed124a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005e1bed24f1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005e1bed24f50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005e1bed15691b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005e1bed124a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005e1bed1f62e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005e1bed0eed63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005e1bed103085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005e1bed065c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005e1bec481561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005e1bec47e3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005e1bee37ad79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005e1becd2e689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005e1beccad8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005e1bee377b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005e1bee36fec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005e1bee3736a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005e1bee3770b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005e1bee37763b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005e1bec481dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005e1bec4804c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007e6362ca91ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007e6362ca928b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005e1bec47e0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 628953 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop3.cpp -o branch-in-loop3.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop4.cpp (218 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop4.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop4.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop4.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop4.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop4.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop4.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop4.cpp -o branch-in-loop4.qke
1.	<eof> parser at end of file
 #0 0x0000649405dc7246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000649405dc49de SignalHandler(int) Signals.cpp:0:0
 #2 0x000073995a568330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000073995a5c1b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000073995a56827e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000073995a54b8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000073995a54b81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000073995a55e517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000064940696d8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000064940695c4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006494068d11fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000649406a77882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000649406a1db72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000649406a1e022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006494069bf8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006494069919f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000649406a6efad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000064940695bea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00006494069c4e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000649406991a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000649406abcc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00006494069c3a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000649406991a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000649406abc1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000649406abc3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000649406abe9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000064940674e6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00006494066eb29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000649406abdabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000649406abc54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00006494069c391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000649406991a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000649406abd13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000649406abeb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000064940674d715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00006494066e8719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00006494066e8879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000649406abe211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000649406abd3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000649406abec3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000064940674e6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00006494066eb29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000649406abe387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000649406abd642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00006494069c39f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000649406991a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000649406abc1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000649406abc50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00006494069c391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000649406991a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000649406a632e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000064940695bd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000649406970085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00006494068d2c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000649405cee561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000649405ceb3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000649407be7d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000064940659b689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000064940651a8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000649407be4b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000649407bdcec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000649407be06a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000649407be40b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000649407be463b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000649405ceedc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000649405ced4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000073995a54d1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000073995a54d28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000649405ceb0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 629500 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop4.cpp -o branch-in-loop4.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop5.cpp (219 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop5.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop5.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop5.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop5.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop5.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop5.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop5.cpp -o branch-in-loop5.qke
1.	<eof> parser at end of file
 #0 0x0000572794e55246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000572794e529de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000736aebfcd330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000736aec026b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000736aebfcd27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000736aebfb08ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000736aebfb081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000736aebfc3517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005727959fb8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005727959ea4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057279595f1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000572795b05882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000572795aabb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000572795aac022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000572795a4d8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000572795a1f9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000572795afcfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005727959e9ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000572795a52e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000572795a1fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000572795b4ac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000572795a51a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000572795a1fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000572795b4a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000572795b4a3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000572795b4c9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005727957dc6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057279577929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000572795b4babd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000572795b4a54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x0000572795a5191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000572795a1fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000572795b4b13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000572795b4cb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005727957db715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000572795776719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000572795776879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000572795b4c211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000572795b4b3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000572795b4cc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005727957dc6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000057279577929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000572795b4c387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000572795b4b642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x0000572795a519f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000572795a1fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000572795b4a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000572795b4a50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x0000572795a5191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000572795a1fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000572795af12e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005727959e9d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005727959fe085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x0000572795960c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000572794d7c561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000572794d793b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000572796c75d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000572795629689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005727955a88be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000572796c72b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000572796c6aec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000572796c6e6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000572796c720b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000572796c7263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000572794d7cdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000572794d7b4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000736aebfb21ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000736aebfb228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000572794d790a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 629730 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop5.cpp -o branch-in-loop5.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop6.cpp (220 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop6.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop6.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop6.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop6.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop6.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop6.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop6.cpp -o branch-in-loop6.qke
1.	<eof> parser at end of file
 #0 0x00005d510200f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005d510200c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000707148efe330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000707148f57b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000707148efe27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000707148ee18ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000707148ee181b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000707148ef4517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005d5102bb58fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005d5102ba44a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005d5102b191fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005d5102cbf882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005d5102c65b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005d5102c66022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005d5102c078a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005d5102bd99f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005d5102cb6fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005d5102ba3ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005d5102c0ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005d5102bd9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005d5102d04c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005d5102c0ba3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005d5102bd9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005d5102d041db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005d5102d043d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005d5102d069e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005d51029966a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005d510293329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005d5102d05abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005d5102d0454d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005d5102c0b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005d5102bd9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005d5102d0513f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005d5102d06b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005d5102995715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005d5102930719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005d5102930879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005d5102d06211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005d5102d053b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005d5102d06c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005d51029966a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005d510293329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005d5102d06387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005d5102d05642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005d5102c0b9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005d5102bd9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005d5102d041db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005d5102d0450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005d5102c0b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005d5102bd9a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005d5102cab2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005d5102ba3d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005d5102bb8085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005d5102b1ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005d5101f36561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005d5101f333b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005d5103e2fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005d51027e3689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005d51027628be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005d5103e2cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005d5103e24ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005d5103e286a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005d5103e2c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005d5103e2c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005d5101f36dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005d5101f354c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000707148ee31ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000707148ee328b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005d5101f330a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 629853 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop6.cpp -o branch-in-loop6.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop7.cpp (221 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop7.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop7.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop7.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop7.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop7.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop7.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop7.cpp -o branch-in-loop7.qke
1.	<eof> parser at end of file
 #0 0x00006400830e9246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00006400830e69de SignalHandler(int) Signals.cpp:0:0
 #2 0x000074a4c4760330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000074a4c47b9b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000074a4c476027e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000074a4c47438ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000074a4c474381b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000074a4c4756517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000640083c8f8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000640083c7e4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000640083bf31fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000640083d99882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000640083d3fb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000640083d40022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000640083ce18a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000640083cb39f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000640083d90fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000640083c7dea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000640083ce6e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000640083cb3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000640083ddec03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000640083ce5a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000640083cb3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000640083dde1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000640083dde3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000640083de09e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x0000640083a706a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x0000640083a0d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000640083ddfabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000640083dde54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x0000640083ce591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000640083cb3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000640083ddf13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000640083de0b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x0000640083a6f715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000640083a0a719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000640083a0a879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000640083de0211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000640083ddf3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000640083de0c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x0000640083a706a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x0000640083a0d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000640083de0387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000640083ddf642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x0000640083ce59f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000640083cb3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000640083dde1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000640083dde50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x0000640083ce591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000640083cb3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000640083d852e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x0000640083c7dd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000640083c92085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x0000640083bf4c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000640083010561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000064008300d3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000640084f09d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00006400838bd689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000064008383c8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000640084f06b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000640084efeec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000640084f026a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000640084f060b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000640084f0663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000640083010dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000064008300f4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000074a4c47451ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000074a4c474528b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000064008300d0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 629973 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop7.cpp -o branch-in-loop7.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop8.cpp (222 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop8.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop8.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop8.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop8.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop8.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop8.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop8.cpp -o branch-in-loop8.qke
1.	<eof> parser at end of file
 #0 0x000063bd87a05246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000063bd87a029de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007135dade7330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007135dae40b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007135dade727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007135dadca8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007135dadca81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007135daddd517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000063bd885ab8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000063bd8859a4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000063bd8850f1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000063bd886b5882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000063bd8865bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000063bd8865c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000063bd885fd8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000063bd885cf9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000063bd886acfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000063bd88599ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000063bd88602e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000063bd885cfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000063bd886fac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000063bd88601a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000063bd885cfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000063bd886fa1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000063bd886fa3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000063bd886fc9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000063bd8838c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000063bd8832929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000063bd886fbabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000063bd886fa54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000063bd8860191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000063bd885cfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000063bd886fb13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000063bd886fcb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000063bd8838b715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000063bd88326719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000063bd88326879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000063bd886fc211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000063bd886fb3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000063bd886fcc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000063bd8838c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000063bd8832929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000063bd886fc387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000063bd886fb642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000063bd886019f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000063bd885cfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000063bd886fa1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000063bd886fa50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000063bd8860191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000063bd885cfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000063bd886a12e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000063bd88599d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000063bd885ae085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000063bd88510c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000063bd8792c561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000063bd879293b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000063bd89825d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000063bd881d9689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000063bd881588be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000063bd89822b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000063bd8981aec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000063bd8981e6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000063bd898220b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000063bd8982263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000063bd8792cdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000063bd8792b4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007135dadcc1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007135dadcc28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000063bd879290a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630120 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop8.cpp -o branch-in-loop8.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/branch-in-loop9.cpp (223 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/branch-in-loop9.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop9.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop9.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop9.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop9.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/branch-in-loop9.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop9.cpp -o branch-in-loop9.qke
1.	<eof> parser at end of file
 #0 0x000057aca35e6246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000057aca35e39de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007a52ab6c7330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007a52ab720b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007a52ab6c727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007a52ab6aa8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007a52ab6aa81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007a52ab6bd517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000057aca418c8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000057aca417b4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000057aca40f01fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000057aca4296882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000057aca423cb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000057aca423d022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000057aca41de8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000057aca41b09f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000057aca428dfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000057aca417aea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000057aca41e3e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000057aca41b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000057aca42dbc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000057aca41e2a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000057aca41b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000057aca42db1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000057aca42db3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000057aca42dd9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000057aca3f6d6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000057aca3f0a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000057aca42dcabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000057aca42db54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000057aca41e291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000057aca41b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000057aca42dc13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000057aca42ddb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000057aca3f6c715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000057aca3f07719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000057aca3f07879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000057aca42dd211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000057aca42dc3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000057aca42ddc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000057aca3f6d6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000057aca3f0a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000057aca42dd387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000057aca42dc642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000057aca41e29f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000057aca41b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000057aca42db1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000057aca42db50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000057aca41e291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000057aca41b0a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000057aca42822e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000057aca417ad63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000057aca418f085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000057aca40f1c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000057aca350d561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000057aca350a3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000057aca5406d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000057aca3dba689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000057aca3d398be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000057aca5403b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000057aca53fbec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000057aca53ff6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000057aca54030b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000057aca540363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000057aca350ddc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000057aca350c4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007a52ab6ac1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007a52ab6ac28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000057aca350a0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630224 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/branch-in-loop9.cpp -o branch-in-loop9.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break1.cpp (224 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break1.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break1.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break1.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break1.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break1.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break1.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break1.cpp -o loop-with-break1.qke
1.	<eof> parser at end of file
 #0 0x00005b583650e246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005b583650b9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000778ea5f65330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000778ea5fbeb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000778ea5f6527e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000778ea5f488ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000778ea5f4881b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000778ea5f5b517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005b58370b48fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005b58370a34a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005b58370181fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005b58371be882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005b5837164b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005b5837165022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005b58371068a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005b58370d89f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005b58371b5fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005b58370a2ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005b583710be0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005b58370d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005b5837203c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005b583710aa3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005b58370d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005b58372031db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005b58372033d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005b58372059e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005b5836e956a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005b5836e3229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005b5837204abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005b583720354d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005b583710a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005b58370d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005b583720413f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005b5837205b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005b5836e94715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005b5836e2f719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005b5836e2f879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005b5837205211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005b58372043b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005b5837205c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005b5836e956a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005b5836e3229a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005b5837205387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005b5837204642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005b583710a9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005b58370d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005b58372031db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005b583720350c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005b583710a91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005b58370d8a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005b58371aa2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005b58370a2d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005b58370b7085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005b5837019c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005b5836435561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005b58364323b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005b583832ed79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005b5836ce2689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005b5836c618be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005b583832bb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005b5838323ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005b58383276a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005b583832b0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005b583832b63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005b5836435dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005b58364344c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000778ea5f4a1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000778ea5f4a28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005b58364320a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630412 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break1.cpp -o loop-with-break1.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break10.cpp (226 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break10.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break10.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break10.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break10.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break10.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break10.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break10.cpp -o loop-with-break10.qke
1.	<eof> parser at end of file
 #0 0x0000563771d31246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000563771d2e9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000704778e9d330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000704778ef6b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000704778e9d27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000704778e808ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000704778e8081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000704778e93517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005637728d78fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005637728c64a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000056377283b1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005637729e1882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000563772987b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000563772988022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005637729298a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005637728fb9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005637729d8fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005637728c5ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000056377292ee0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005637728fba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000563772a26c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000056377292da3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005637728fba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000563772a261db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000563772a263d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000563772a289e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005637726b86a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000056377265529a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000563772a27abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000563772a2654d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000056377292d91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005637728fba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000563772a2713f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000563772a28b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005637726b7715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000563772652719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000563772652879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000563772a28211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000563772a273b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000563772a28c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005637726b86a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000056377265529a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000563772a28387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000563772a27642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000056377292d9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005637728fba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000563772a261db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000563772a2650c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000056377292d91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005637728fba79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005637729cd2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005637728c5d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005637728da085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000056377283cc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000563771c58561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000563771c553b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000563773b51d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000563772505689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005637724848be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000563773b4eb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000563773b46ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000563773b4a6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000563773b4e0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000563773b4e63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000563771c58dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000563771c574c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000704778e821ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000704778e8228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000563771c550a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630506 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break10.cpp -o loop-with-break10.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break2.cpp (227 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break2.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break2.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break2.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break2.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break2.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break2.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break2.cpp -o loop-with-break2.qke
1.	<eof> parser at end of file
 #0 0x000058ba7c4d0246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000058ba7c4cd9de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007d12aaa2d330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007d12aaa86b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007d12aaa2d27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007d12aaa108ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007d12aaa1081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007d12aaa23517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000058ba7d0768fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000058ba7d0654a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000058ba7cfda1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000058ba7d180882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000058ba7d126b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000058ba7d127022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000058ba7d0c88a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000058ba7d09a9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000058ba7d177fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000058ba7d064ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000058ba7d0cde0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000058ba7d09aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000058ba7d1c5c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000058ba7d0cca3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000058ba7d09aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000058ba7d1c51db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000058ba7d1c53d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000058ba7d1c79e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000058ba7ce576a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000058ba7cdf429a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000058ba7d1c6abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000058ba7d1c554d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000058ba7d0cc91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000058ba7d09aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000058ba7d1c613f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x000058ba7d1c7b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000058ba7ce56715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000058ba7cdf1719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000058ba7cdf1879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000058ba7d1c7211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000058ba7d1c63b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x000058ba7d1c7c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x000058ba7ce576a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x000058ba7cdf429a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x000058ba7d1c7387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x000058ba7d1c6642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000058ba7d0cc9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x000058ba7d09aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000058ba7d1c51db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000058ba7d1c550c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000058ba7d0cc91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x000058ba7d09aa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x000058ba7d16c2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x000058ba7d064d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x000058ba7d079085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000058ba7cfdbc1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x000058ba7c3f7561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x000058ba7c3f43b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000058ba7e2f0d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x000058ba7cca4689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x000058ba7cc238be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000058ba7e2edb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x000058ba7e2e5ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x000058ba7e2e96a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000058ba7e2ed0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000058ba7e2ed63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x000058ba7c3f7dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x000058ba7c3f64c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007d12aaa121ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007d12aaa1228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x000058ba7c3f40a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630667 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break2.cpp -o loop-with-break2.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break3.cpp (228 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break3.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break3.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break3.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break3.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break3.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break3.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break3.cpp -o loop-with-break3.qke
1.	<eof> parser at end of file
 #0 0x0000646bc9d46246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000646bc9d439de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000779776ad1330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000779776b2ab2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000779776ad127e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000779776ab48ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000779776ab481b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000779776ac7517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000646bca8ec8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000646bca8db4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000646bca8501fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000646bca9f6882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000646bca99cb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000646bca99d022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000646bca93e8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000646bca9109f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000646bca9edfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000646bca8daea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000646bca943e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000646bca910a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000646bcaa3bc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000646bca942a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000646bca910a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000646bcaa3b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000646bcaa3b3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000646bcaa3d9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x0000646bca6cd6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x0000646bca66a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000646bcaa3cabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000646bcaa3b54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x0000646bca94291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000646bca910a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000646bcaa3c13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000646bcaa3db7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x0000646bca6cc715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000646bca667719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000646bca667879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000646bcaa3d211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000646bcaa3c3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000646bcaa3dc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x0000646bca6cd6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x0000646bca66a29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000646bcaa3d387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000646bcaa3c642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x0000646bca9429f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000646bca910a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000646bcaa3b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000646bcaa3b50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x0000646bca94291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000646bca910a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000646bca9e22e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x0000646bca8dad63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000646bca8ef085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x0000646bca851c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000646bc9c6d561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000646bc9c6a3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000646bcbb66d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000646bca51a689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x0000646bca4998be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000646bcbb63b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000646bcbb5bec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000646bcbb5f6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000646bcbb630b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000646bcbb6363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000646bc9c6ddc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000646bc9c6c4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000779776ab61ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000779776ab628b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000646bc9c6a0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630789 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break3.cpp -o loop-with-break3.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break4.cpp (229 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break4.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break4.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break4.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break4.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break4.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break4.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break4.cpp -o loop-with-break4.qke
1.	<eof> parser at end of file
 #0 0x00005c39d43c5246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005c39d43c29de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000748b6d3fd330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000748b6d456b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000748b6d3fd27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000748b6d3e08ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000748b6d3e081b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000748b6d3f3517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005c39d4f6b8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005c39d4f5a4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005c39d4ecf1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005c39d5075882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005c39d501bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005c39d501c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005c39d4fbd8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005c39d4f8f9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005c39d506cfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005c39d4f59ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005c39d4fc2e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005c39d4f8fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005c39d50bac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005c39d4fc1a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005c39d4f8fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005c39d50ba1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005c39d50ba3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005c39d50bc9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005c39d4d4c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005c39d4ce929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005c39d50bbabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005c39d50ba54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005c39d4fc191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005c39d4f8fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005c39d50bb13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005c39d50bcb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005c39d4d4b715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005c39d4ce6719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005c39d4ce6879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005c39d50bc211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005c39d50bb3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005c39d50bcc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005c39d4d4c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005c39d4ce929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005c39d50bc387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005c39d50bb642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005c39d4fc19f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005c39d4f8fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005c39d50ba1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005c39d50ba50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005c39d4fc191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005c39d4f8fa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005c39d50612e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005c39d4f59d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005c39d4f6e085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005c39d4ed0c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005c39d42ec561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005c39d42e93b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005c39d61e5d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005c39d4b99689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005c39d4b188be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005c39d61e2b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005c39d61daec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005c39d61de6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005c39d61e20b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005c39d61e263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005c39d42ecdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005c39d42eb4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000748b6d3e21ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000748b6d3e228b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005c39d42e90a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630854 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break4.cpp -o loop-with-break4.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break5.cpp (230 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break5.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break5.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break5.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break5.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break5.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break5.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break5.cpp -o loop-with-break5.qke
1.	<eof> parser at end of file
 #0 0x00005f4df009c246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005f4df00999de SignalHandler(int) Signals.cpp:0:0
 #2 0x000079ddcf7e9330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000079ddcf842b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000079ddcf7e927e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000079ddcf7cc8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000079ddcf7cc81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000079ddcf7df517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005f4df0c428fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005f4df0c314a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005f4df0ba61fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005f4df0d4c882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005f4df0cf2b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005f4df0cf3022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005f4df0c948a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005f4df0c669f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005f4df0d43fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005f4df0c30ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005f4df0c99e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005f4df0c66a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005f4df0d91c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005f4df0c98a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005f4df0c66a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005f4df0d911db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005f4df0d913d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005f4df0d939e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005f4df0a236a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005f4df09c029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005f4df0d92abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005f4df0d9154d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005f4df0c9891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005f4df0c66a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005f4df0d9213f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005f4df0d93b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005f4df0a22715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005f4df09bd719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005f4df09bd879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005f4df0d93211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005f4df0d923b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005f4df0d93c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005f4df0a236a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005f4df09c029a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005f4df0d93387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005f4df0d92642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005f4df0c989f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005f4df0c66a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005f4df0d911db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005f4df0d9150c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005f4df0c9891b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005f4df0c66a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005f4df0d382e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005f4df0c30d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005f4df0c45085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005f4df0ba7c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005f4deffc3561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005f4deffc03b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005f4df1ebcd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005f4df0870689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005f4df07ef8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005f4df1eb9b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005f4df1eb1ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005f4df1eb56a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005f4df1eb90b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005f4df1eb963b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005f4deffc3dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005f4deffc24c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000079ddcf7ce1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000079ddcf7ce28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005f4deffc00a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 630965 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break5.cpp -o loop-with-break5.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break6.cpp (231 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break6.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break6.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break6.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break6.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break6.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break6.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break6.cpp -o loop-with-break6.qke
1.	<eof> parser at end of file
 #0 0x000063908265f246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000063908265c9de SignalHandler(int) Signals.cpp:0:0
 #2 0x0000746ffdb40330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x0000746ffdb99b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x0000746ffdb4027e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x0000746ffdb238ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x0000746ffdb2381b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x0000746ffdb36517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00006390832058fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00006390831f44a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00006390831691fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000063908330f882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00006390832b5b72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00006390832b6022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00006390832578a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00006390832299f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000639083306fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00006390831f3ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000063908325ce0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000639083229a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000639083354c03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000063908325ba3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000639083229a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00006390833541db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00006390833543d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00006390833569e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x0000639082fe66a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x0000639082f8329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000639083355abd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000063908335454d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000063908325b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000639083229a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000063908335513f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000639083356b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x0000639082fe5715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000639082f80719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000639082f80879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000639083356211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00006390833553b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000639083356c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x0000639082fe66a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x0000639082f8329a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000639083356387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000639083355642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x000063908325b9f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000639083229a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00006390833541db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x000063908335450c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x000063908325b91b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000639083229a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00006390832fb2e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00006390831f3d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000639083208085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x000063908316ac1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000639082586561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00006390825833b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x000063908447fd79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000639082e33689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x0000639082db28be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x000063908447cb84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000639084474ec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00006390844786a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x000063908447c0b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x000063908447c63b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000639082586dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00006390825854c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x0000746ffdb251ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x0000746ffdb2528b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00006390825830a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 631040 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break6.cpp -o loop-with-break6.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break7.cpp (232 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break7.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break7.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break7.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break7.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break7.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break7.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break7.cpp -o loop-with-break7.qke
1.	<eof> parser at end of file
 #0 0x00005d552e567246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005d552e5649de SignalHandler(int) Signals.cpp:0:0
 #2 0x000078f057bff330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000078f057c58b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000078f057bff27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000078f057be28ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000078f057be281b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000078f057bf5517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005d552f10d8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005d552f0fc4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005d552f0711fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005d552f217882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005d552f1bdb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005d552f1be022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005d552f15f8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005d552f1319f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005d552f20efad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005d552f0fbea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005d552f164e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005d552f131a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005d552f25cc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005d552f163a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005d552f131a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005d552f25c1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005d552f25c3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005d552f25e9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005d552eeee6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005d552ee8b29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005d552f25dabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005d552f25c54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005d552f16391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005d552f131a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005d552f25d13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005d552f25eb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005d552eeed715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005d552ee88719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005d552ee88879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005d552f25e211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005d552f25d3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005d552f25ec3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005d552eeee6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005d552ee8b29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005d552f25e387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005d552f25d642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005d552f1639f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005d552f131a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005d552f25c1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005d552f25c50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005d552f16391b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005d552f131a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005d552f2032e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005d552f0fbd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005d552f110085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005d552f072c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005d552e48e561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005d552e48b3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005d5530387d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005d552ed3b689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005d552ecba8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005d5530384b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005d553037cec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005d55303806a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005d55303840b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005d553038463b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005d552e48edc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005d552e48d4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000078f057be41ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000078f057be428b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005d552e48b0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 631190 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break7.cpp -o loop-with-break7.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break8.cpp (340 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break8.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break8.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break8.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break8.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break8.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break8.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break8.cpp -o loop-with-break8.qke
1.	<eof> parser at end of file
 #0 0x0000568e10715246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x0000568e107129de SignalHandler(int) Signals.cpp:0:0
 #2 0x000071b905e67330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x000071b905ec0b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x000071b905e6727e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x000071b905e4a8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x000071b905e4a81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x000071b905e5d517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x0000568e112bb8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x0000568e112aa4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x0000568e1121f1fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x0000568e113c5882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x0000568e1136bb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x0000568e1136c022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x0000568e1130d8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x0000568e112df9f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x0000568e113bcfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x0000568e112a9ea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x0000568e11312e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x0000568e112dfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x0000568e1140ac03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x0000568e11311a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x0000568e112dfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x0000568e1140a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x0000568e1140a3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x0000568e1140c9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x0000568e1109c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x0000568e1103929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x0000568e1140babd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x0000568e1140a54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x0000568e1131191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x0000568e112dfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x0000568e1140b13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x0000568e1140cb7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x0000568e1109b715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x0000568e11036719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x0000568e11036879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x0000568e1140c211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x0000568e1140b3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x0000568e1140cc3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x0000568e1109c6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x0000568e1103929a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x0000568e1140c387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x0000568e1140b642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x0000568e113119f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x0000568e112dfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x0000568e1140a1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x0000568e1140a50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x0000568e1131191b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x0000568e112dfa79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x0000568e113b12e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x0000568e112a9d63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x0000568e112be085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x0000568e11220c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x0000568e1063c561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x0000568e106393b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x0000568e12535d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x0000568e10ee9689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x0000568e10e688be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x0000568e12532b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x0000568e1252aec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x0000568e1252e6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x0000568e125320b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x0000568e1253263b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x0000568e1063cdc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x0000568e1063b4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x000071b905e4c1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x000071b905e4c28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x0000568e106390a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 631258 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break8.cpp -o loop-with-break8.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.
FAIL: CUDAQ-Target :: generated/phase-folding/loop-with-break9.cpp (341 of 353)
******************** TEST 'CUDAQ-Target :: generated/phase-folding/loop-with-break9.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 11: nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break9.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break9.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break9.cpp.tmp
+ nvq++ /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break9.cpp --target=remote-mqpu -o /workspaces/cuda-quantum/build/Debug/targettests/generated/phase-folding/Output/loop-with-break9.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break9.cpp -o loop-with-break9.qke
1.	<eof> parser at end of file
 #0 0x00005ff3fb419246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x00005ff3fb4169de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007c227589b330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007c22758f4b2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007c227589b27e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007c227587e8ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007c227587e81b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007c2275891517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x00005ff3fbfbf8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x00005ff3fbfae4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x00005ff3fbf231fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x00005ff3fc0c9882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x00005ff3fc06fb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x00005ff3fc070022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x00005ff3fc0118a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x00005ff3fbfe39f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x00005ff3fc0c0fad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x00005ff3fbfadea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x00005ff3fc016e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x00005ff3fbfe3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x00005ff3fc10ec03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x00005ff3fc015a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x00005ff3fbfe3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x00005ff3fc10e1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x00005ff3fc10e3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x00005ff3fc1109e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x00005ff3fbda06a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x00005ff3fbd3d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x00005ff3fc10fabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x00005ff3fc10e54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x00005ff3fc01591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x00005ff3fbfe3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x00005ff3fc10f13f cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:558:9
#33 0x00005ff3fc110b7b void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x00005ff3fbd9f715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x00005ff3fbd3a719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x00005ff3fbd3a879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x00005ff3fc110211 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool const&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda1'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x00005ff3fc10f3b8 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:586:33
#39 0x00005ff3fc110c3d void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#40 0x00005ff3fbda06a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#41 0x00005ff3fbd3d29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#42 0x00005ff3fc110387 cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda2'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#43 0x00005ff3fc10f642 cudaq::details::QuakeBridgeVisitor::TraverseForStmt(clang::ForStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:590:3
#44 0x00005ff3fc0159f3 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:109:1
#45 0x00005ff3fbfe3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x00005ff3fc10e1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#47 0x00005ff3fc10e50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#48 0x00005ff3fc01591b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#49 0x00005ff3fbfe3a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#50 0x00005ff3fc0b52e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#51 0x00005ff3fbfadd63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#52 0x00005ff3fbfc2085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#53 0x00005ff3fbf24c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#54 0x00005ff3fb340561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#55 0x00005ff3fb33d3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#56 0x00005ff3fd239d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#57 0x00005ff3fbbed689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#58 0x00005ff3fbb6c8be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#59 0x00005ff3fd236b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#60 0x00005ff3fd22eec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#61 0x00005ff3fd2326a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#62 0x00005ff3fd2360b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#63 0x00005ff3fd23663b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#64 0x00005ff3fb340dc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#65 0x00005ff3fb33f4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#66 0x00007c22758801ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#67 0x00007c227588028b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#68 0x00005ff3fb33d0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 631352 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_REMOTE_SIM -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/generated/phase-folding/loop-with-break9.cpp -o loop-with-break9.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90..
FAIL: CUDAQ-Target :: quantinuum_ng/run_rwpe.cpp (350 of 353)
******************** TEST 'CUDAQ-Target :: quantinuum_ng/run_rwpe.cpp' FAILED ********************
Exit Code: 1

Command Output (stderr):
--
RUN: at line 10: nvq++  --target quantinuum --quantinuum-machine Helios-1SC --emulate /workspaces/cuda-quantum/targettests/quantinuum_ng/run_rwpe.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/quantinuum_ng/Output/run_rwpe.cpp.tmp && /workspaces/cuda-quantum/build/Debug/targettests/quantinuum_ng/Output/run_rwpe.cpp.tmp
+ nvq++ --target quantinuum --quantinuum-machine Helios-1SC --emulate /workspaces/cuda-quantum/targettests/quantinuum_ng/run_rwpe.cpp -o /workspaces/cuda-quantum/build/Debug/targettests/quantinuum_ng/Output/run_rwpe.cpp.tmp
cudaq-quake: /usr/local/llvm/include/llvm/ADT/SmallVector.h:312: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::back() [with T = mlir::Value; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = mlir::Value&]: Assertion `!empty()' failed.
PLEASE submit a bug report to https://github.com/NVIDIA/cuda-quantum and include the crash backtrace.
Stack dump:
0.	Program arguments: /workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/quantinuum_ng/run_rwpe.cpp -o run_rwpe.qke
1.	<eof> parser at end of file
 #0 0x000056a311c96246 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x207f246)
 #1 0x000056a311c939de SignalHandler(int) Signals.cpp:0:0
 #2 0x00007a97ec955330 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x45330)
 #3 0x00007a97ec9aeb2c pthread_kill (/usr/lib/x86_64-linux-gnu/libc.so.6+0x9eb2c)
 #4 0x00007a97ec95527e raise (/usr/lib/x86_64-linux-gnu/libc.so.6+0x4527e)
 #5 0x00007a97ec9388ff abort (/usr/lib/x86_64-linux-gnu/libc.so.6+0x288ff)
 #6 0x00007a97ec93881b (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2881b)
 #7 0x00007a97ec94b517 (/usr/lib/x86_64-linux-gnu/libc.so.6+0x3b517)
 #8 0x000056a31283c8fb llvm::SmallVectorTemplateCommon<mlir::Value, void>::back() /usr/local/llvm/include/llvm/ADT/SmallVector.h:313:15
 #9 0x000056a31282b4a2 cudaq::details::QuakeBridgeVisitor::peekValue() /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:589:52
#10 0x000056a3127a01fe cudaq::details::QuakeBridgeVisitor::popValue() /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:406:27
#11 0x000056a312946882 cudaq::details::QuakeBridgeVisitor::VisitCallExpr(clang::CallExpr*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:1514:27
#12 0x000056a3128ecb72 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCallExpr(clang::CallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:943:1
#13 0x000056a3128ed022 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::WalkUpFromCXXMemberCallExpr(clang::CXXMemberCallExpr*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#14 0x000056a31288e8a0 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::PostVisitStmt(clang::Stmt*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:953:1
#15 0x000056a3128609f2 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:678:9
#16 0x000056a31293dfad cudaq::details::QuakeBridgeVisitor::TraverseCastExpr(clang::CastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertExpr.cpp:568:9
#17 0x000056a31282aea9 cudaq::details::QuakeBridgeVisitor::TraverseImplicitCastExpr(clang::ImplicitCastExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:306:3
#18 0x000056a312893e0f clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1049:1
#19 0x000056a312860a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#20 0x000056a31298bc03 cudaq::details::QuakeBridgeVisitor::TraverseIfStmt(clang::IfStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:504:9
#21 0x000056a312892a3b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:121:1
#22 0x000056a312860a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#23 0x000056a31298b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#24 0x000056a31298b3d7 cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)::operator()(mlir::OpBuilder&, mlir::Location) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:405:5
#25 0x000056a31298d9e3 void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::callback_fn<cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(long, mlir::OpBuilder&, mlir::Location) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#26 0x000056a31261d6a2 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>::operator()(mlir::OpBuilder&, mlir::Location) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#27 0x000056a3125ba29a cudaq::cc::ScopeOp::build(mlir::OpBuilder&, mlir::OperationState&, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1808:1
#28 0x000056a31298cabd cudaq::cc::ScopeOp mlir::OpBuilder::create<cudaq::cc::ScopeOp, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)>(mlir::Location, cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda0'(mlir::OpBuilder&, mlir::Location)&&) /usr/local/llvm/include/mlir/IR/Builders.h:463:22
#29 0x000056a31298b54d cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:409:10
#30 0x000056a31289291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#31 0x000056a312860a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#32 0x000056a312990783 bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:440:22
#33 0x000056a312992a2e void llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::callback_fn<bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)>(long, mlir::OpBuilder&, mlir::Location, mlir::Region&) /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:46:40
#34 0x000056a31261c715 llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>::operator()(mlir::OpBuilder&, mlir::Location, mlir::Region&) const /usr/local/llvm/include/llvm/ADT/STLFunctionalExtras.h:68:62
#35 0x000056a3125b7719 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::TypeRange, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1414:18
#36 0x000056a3125b7879 cudaq::cc::LoopOp::build(mlir::OpBuilder&, mlir::OperationState&, mlir::ValueRange, bool, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>, llvm::function_ref<void (mlir::OpBuilder&, mlir::Location, mlir::Region&)>) /workspaces/cuda-quantum/lib/Optimizer/Dialect/CC/CCOps.cpp:1428:8
#37 0x000056a312991f53 cudaq::cc::LoopOp mlir::OpBuilder::create<cudaq::cc::LoopOp, mlir::ValueRange, bool, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&>(mlir::Location, mlir::ValueRange&&, bool&&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&, bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*)::'lambda0'(mlir::OpBuilder&, mlir::Location, mlir::Region&)&) /usr/local/llvm/include/mlir/IR/Builders.h:462:16
#38 0x000056a31299096a bool cudaq::details::QuakeBridgeVisitor::traverseDoOrWhileStmt<false, clang::WhileStmt>(clang::WhileStmt*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:450:10
#39 0x000056a31298b5d3 cudaq::details::QuakeBridgeVisitor::TraverseWhileStmt(clang::WhileStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:461:1
#40 0x000056a3128948b6 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:1541:1
#41 0x000056a312860a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#42 0x000056a31298b1db cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*)::'lambda'(clang::Stmt*)::operator()(clang::Stmt*) const /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:386:9
#43 0x000056a31298b50c cudaq::details::QuakeBridgeVisitor::TraverseCompoundStmt(clang::CompoundStmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertStmt.cpp:400:5
#44 0x000056a31289291b clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/StmtNodes.inc:73:1
#45 0x000056a312860a79 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*>>>>*) /usr/local/llvm/include/clang/AST/RecursiveASTVisitor.h:686:7
#46 0x000056a3129322e2 cudaq::details::QuakeBridgeVisitor::TraverseFunctionDecl(clang::FunctionDecl*) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ConvertDecl.cpp:473:9
#47 0x000056a31282ad63 cudaq::details::QuakeBridgeVisitor::TraverseCXXMethodDecl(clang::CXXMethodDecl*) /workspaces/cuda-quantum/include/cudaq/Frontend/nvqpp/ASTBridge.h:195:34
#48 0x000056a31283f085 clang::RecursiveASTVisitor<cudaq::details::QuakeBridgeVisitor>::TraverseDecl(clang::Decl*) /usr/local/llvm/include/clang/AST/DeclNodes.inc:443:1
#49 0x000056a3127a1c1d cudaq::ASTBridgeAction::ASTBridgeConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/lib/Frontend/nvqpp/ASTBridge.cpp:629:21
#50 0x000056a311bbd561 void (anonymous namespace)::CudaQASTConsumer::applyConsumers<clang::ASTContext&, clang::ASTContext&>(void (clang::ASTConsumer::*)(clang::ASTContext&), clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:142:5
#51 0x000056a311bba3b4 (anonymous namespace)::CudaQASTConsumer::HandleTranslationUnit(clang::ASTContext&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:147:3
#52 0x000056a313ab6d79 clang::ParseAST(clang::Sema&, bool, bool) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9fd79)
#53 0x000056a31246a689 clang::FrontendAction::Execute() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x2853689)
#54 0x000056a3123e98be clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x27d28be)
#55 0x000056a313ab3b84 clang::tooling::FrontendActionFactory::runInvocation(std::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9cb84)
#56 0x000056a313aabec5 clang::tooling::ToolInvocation::runInvocation(char const*, clang::driver::Compilation*, std::shared_ptr<clang::CompilerInvocation>, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e94ec5)
#57 0x000056a313aaf6a8 clang::tooling::ToolInvocation::run() (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e986a8)
#58 0x000056a313ab30b9 clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c0b9)
#59 0x000056a313ab363b clang::tooling::runToolOnCodeWithArgs(std::unique_ptr<clang::FrontendAction, std::default_delete<clang::FrontendAction>>, llvm::Twine const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, llvm::Twine const&, llvm::Twine const&, std::shared_ptr<clang::PCHContainerOperations>, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&) (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x3e9c63b)
#60 0x000056a311bbddc8 bool runTool<(anonymous namespace)::CudaQAction>(mlir::OwningOpRef<mlir::ModuleOp>&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>>&, llvm::StringRef, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:243:45
#61 0x000056a311bbc4c1 main /workspaces/cuda-quantum/tools/cudaq-quake/cudaq-quake.cpp:445:43
#62 0x00007a97ec93a1ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a1ca)
#63 0x00007a97ec93a28b __libc_start_main (/usr/lib/x86_64-linux-gnu/libc.so.6+0x2a28b)
#64 0x000056a311bba0a5 _start (/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake+0x1fa30a5)
/workspaces/cuda-quantum/build/Debug/bin/nvq++: line 27: 631691 Aborted                 (core dumped) "$@"
failed: "/workspaces/cuda-quantum/build/Debug/bin/cudaq-quake -D CUDAQ_QUANTUM_DEVICE -D CUDAQ_SIMULATION_SCALAR_FP32 -I /workspaces/cuda-quantum/tpls/fmt/include --emit-llvm-file /workspaces/cuda-quantum/targettests/quantinuum_ng/run_rwpe.cpp -o run_rwpe.qke"

--

********************
Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90.. 
********************
Failed Tests (69):
  CUDAQ-Target :: Kernel/inline-qpu-func.cpp
  CUDAQ-Target :: Kernel/signature-0.cpp
  CUDAQ-Target :: Remote-Sim/cudaq_run.cpp
  CUDAQ-Target :: Remote-Sim/cudaq_run_async.cpp
  CUDAQ-Target :: Remote-Sim/estimate-resources_break.cpp
  CUDAQ-Target :: Remote-Sim/estimate-resources_choice-function.cpp
  CUDAQ-Target :: Remote-Sim/estimate-resources_mzloop.cpp
  CUDAQ-Target :: Remote-Sim/estimate-resources_sample-in-choice.cpp
  CUDAQ-Target :: Remote-Sim/phase-folding/OptTester.cpp
  CUDAQ-Target :: Remote-Sim/phase-folding/aliasing.cpp
  CUDAQ-Target :: Remote-Sim/return_values.cpp
  CUDAQ-Target :: execution/IQPE_conditionals-cpp17.cpp
  CUDAQ-Target :: execution/IQPE_conditionals.cpp
  CUDAQ-Target :: execution/auto_kernel-cpp17.cpp
  CUDAQ-Target :: execution/auto_kernel.cpp
  CUDAQ-Target :: execution/conditional_sample-cpp17.cpp
  CUDAQ-Target :: execution/conditional_sample.cpp
  CUDAQ-Target :: execution/cudaq_run.cpp
  CUDAQ-Target :: execution/cudaq_run_emulation.cpp
  CUDAQ-Target :: execution/cudaq_run_noisy.cpp
  CUDAQ-Target :: execution/cudaq_run_sample_observe.cpp
  CUDAQ-Target :: execution/estimate-resources_break.cpp
  CUDAQ-Target :: execution/estimate-resources_choice-function.cpp
  CUDAQ-Target :: execution/estimate-resources_mzloop.cpp
  CUDAQ-Target :: execution/estimate-resources_sample-in-choice.cpp
  CUDAQ-Target :: execution/mid_circuit_measurement_anyon.cpp
  CUDAQ-Target :: execution/mid_circuit_measurement_quantinuum.cpp
  CUDAQ-Target :: execution/mid_circuit_measurement_sim.cpp
  CUDAQ-Target :: execution/qir_cond_for_break.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-1.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-2.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-3.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-4.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-5.cpp
  CUDAQ-Target :: execution/qir_cond_for_loop-6.cpp
  CUDAQ-Target :: execution/qir_if_base.cpp
  CUDAQ-Target :: execution/qir_simple_cond-1.cpp
  CUDAQ-Target :: execution/qubit_management_bug_qids-2.cpp
  CUDAQ-Target :: execution/qubit_management_bug_qids.cpp
  CUDAQ-Target :: execution/qubit_management_if-1.cpp
  CUDAQ-Target :: execution/qubit_management_if-2.cpp
  CUDAQ-Target :: execution/qubit_management_if-3.cpp
  CUDAQ-Target :: execution/qubit_management_if-5.cpp
  CUDAQ-Target :: execution/qubit_management_if_classical.cpp
  CUDAQ-Target :: execution/test-6.cpp
  CUDAQ-Target :: execution/test_conditional_on_function.cpp
  CUDAQ-Target :: execution/test_conditional_on_measure.cpp
  CUDAQ-Target :: execution/to_integer.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop1.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop10.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop2.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop3.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop4.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop5.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop6.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop7.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop8.cpp
  CUDAQ-Target :: generated/phase-folding/branch-in-loop9.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break1.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break10.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break2.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break3.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break4.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break5.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break6.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break7.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break8.cpp
  CUDAQ-Target :: generated/phase-folding/loop-with-break9.cpp
  CUDAQ-Target :: quantinuum_ng/run_rwpe.cpp


Testing Time: 1327.31s

Total Discovered Tests: 353
  Passed           : 282 (79.89%)
  Expectedly Failed:   2 (0.57%)
  Failed           :  69 (19.55%)
FAILED: targettests/CMakeFiles/check-targets /workspaces/cuda-quantum/build/Debug/targettests/CMakeFiles/check-targets 
cd /workspaces/cuda-quantum/build/Debug/targettests && /usr/local/llvm/bin/llvm-lit -j 8 -sv --param nvqpp_site_config=/workspaces/cuda-quantum/build/Debug/targettests/lit.site.cfg.py /workspaces/cuda-quantum/build/Debug/targettests
ninja: build stopped: subcommand failed.
<end of output>
Test time = 1331.86 sec
----------------------------------------------------------
Test Failed.
"ctest-targettests" end time: Oct 18 01:51 UTC
"ctest-targettests" time elapsed: 00:22:11
----------------------------------------------------------
